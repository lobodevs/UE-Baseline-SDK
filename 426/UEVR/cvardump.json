{
    "Accessibility.Enable": {
        "description": "If false, all queries from accessible APIs will be ignored. On some platforms, the application must be restarted in order to take effect.",
        "value": 1.961817850054744e-44
    },
    "ActorSequence.DefaultDisplayRate": {
        "description": "Specifies default a display frame rate for newly created level sequences; also defines frame locked frame rate where sequences are set to be frame locked. Examples: 30 fps, 120/1 (120 fps), 30000/1001 (29.97), 0.01s (10ms).",
        "value": 30.0
    },
    "ActorSequence.DefaultEvaluationType": {
        "description": "0: Playback locked to playback frames\n1: Unlocked playback with sub frame interpolation",
        "value": 0.0
    },
    "ActorSequence.DefaultTickResolution": {
        "description": "Specifies default a tick resolution for newly created level sequences. Examples: 30 fps, 120/1 (120 fps), 30000/1001 (29.97), 0.01s (10ms).",
        "value": 24000.0
    },
    "AllowAsyncRenderThreadUpdates": {
        "description": "Used to control async renderthread updates. Also gated on FApp::ShouldUseThreadingForPerformance().",
        "value": 1.0
    },
    "AllowAsyncRenderThreadUpdatesDuringGamethreadUpdates": {
        "description": "If > 0 then we do the gamethread updates _while_ doing parallel updates.",
        "value": 1.0
    },
    "AllowAsyncRenderThreadUpdatesEditor": {
        "description": "Used to control async renderthread updates in the editor.",
        "value": 0.0
    },
    "AnalyticsET.PayloadFlushTimeSecForWarning": {
        "description": "Time in seconds that flushing an EventCache payload can take before it will trigger a warning message, listing the events in the payload. This is intended to be used to investigate spammy or slow telemetry.",
        "value": 0.0010000000474974513
    },
    "AnalyticsET.PayloadPercentageOfMaxForWarning": {
        "description": "Percentage of the maximum payload for an EventCache that will trigger a warning message, listing the events in the payload. This is intended to be used to investigate spammy or slow telemetry.",
        "value": 1.0
    },
    "AnalyticsET.PreventMultipleFlushesInOneFrame": {
        "description": "When true, prevents more than one AnalyticsProviderET instance from flushing in the same frame, allowing the flush and HTTP cost to be amortized.",
        "value": 1.961817850054744e-44
    },
    "AssetManager.DumpAssetRegistryInfo": {
        "command": true,
        "description": "Dumps extended info about asset registry to log"
    },
    "AssetManager.DumpBundlesForAsset": {
        "command": true,
        "description": "Shows a list of all bundles for the specified primary asset by primary asset id (i.e. Map:Entry)"
    },
    "AssetManager.DumpLoadedAssets": {
        "command": true,
        "description": "Shows a list of all loaded primary assets and bundles"
    },
    "AssetManager.DumpReferencersForPackage": {
        "command": true,
        "description": "Generates a graph viz and log file of all references to a specified package"
    },
    "AssetManager.DumpTypeSummary": {
        "command": true,
        "description": "Shows a summary of types known about by the asset manager"
    },
    "AssetRegistry.Debug.FindInvalidUAssets": {
        "command": true,
        "description": "Finds a list of all assets which are in UAsset files but do not share the name of the package"
    },
    "AssetRegistry.GetByClass": {
        "command": true,
        "description": "Query the asset registry for assets matching the supplied class"
    },
    "AssetRegistry.GetByName": {
        "command": true,
        "description": "Query the asset registry for assets matching the supplied package name"
    },
    "AssetRegistry.GetByPath": {
        "command": true,
        "description": "Query the asset registry for assets matching the supplied package path"
    },
    "AssetRegistry.GetByTag": {
        "command": true,
        "description": "Query the asset registry for assets matching the supplied tag and value"
    },
    "AssetRegistry.GetDependencies": {
        "command": true,
        "description": "Query the asset registry for dependencies for the specified package"
    },
    "AssetRegistry.GetReferencers": {
        "command": true,
        "description": "Query the asset registry for referencers for the specified package"
    },
    "AttemptStuckThreadResuscitation": {
        "description": "Attempt to resusicate stuck thread by boosting priority. Enabled by default\n",
        "value": 1.961817850054744e-44
    },
    "AudioCommand.FenceWaitTimeMs": {
        "description": "Sets number of ms for fence wait",
        "value": 35.0
    },
    "AudioThread.AboveNormalPriority": {
        "description": "0=Normal, 1=AboveNormal",
        "value": 0.0
    },
    "AudioThread.BatchAsyncBatchSize": {
        "description": "When AudioThread.EnableBatchProcessing = 1, controls the number of audio commands grouped together for threading.",
        "value": 128.0
    },
    "AudioThread.EnableAudioCommandLogging": {
        "description": "0=Disbaled, 1=Enabled",
        "value": 0.0
    },
    "AudioThread.EnableAudioThreadWait": {
        "description": "Enables waiting on the audio thread to finish its commands.\n0: Not Enabled, 1: Enabled",
        "value": 1.0
    },
    "AudioThread.EnableBatchProcessing": {
        "description": "Enables batch processing audio thread commands.\n0: Not Enabled, 1: Enabled",
        "value": 1.0
    },
    "AudioThread.SuspendAudioThread": {
        "description": "0=Resume, 1=Suspend",
        "value": 0.0
    },
    "AudioThread.UseBackgroundThreadPool": {
        "description": "If true, use the background thread pool for realtime audio decompression.",
        "value": 1.0
    },
    "BehaviorTree.RecordFrameSearchTimes": {
        "description": "Record Search Times Per Frame For Perf Stats",
        "value": 0.0
    },
    "CPUTime.Dump": {
        "command": true,
        "description": "Usage -Delay=[NumSeconds=30]\nIf Delay==0, disables printing the CPU usage to the log\nIf Delay>0, starts printing the average CPU usage from the last n frames, clamps between 10 and 300"
    },
    "Canvas.DistanceFieldSmoothness": {
        "description": "Global sharpness of distance field fonts/shapes rendered by canvas.",
        "value": 4.0
    },
    "CauseHitches": {
        "description": "Causes a 200ms hitch every second. Size of the hitch is controlled by CauseHitchesHitchMS",
        "value": 0.0
    },
    "CauseHitchesHitchMS": {
        "description": "Controls the size of the hitch caused by CauseHitches in ms.",
        "value": 200.0
    },
    "Compat.MAX_GPUSKIN_BONES": {
        "description": "Max number of bones that can be skinned on the GPU in a single draw call. Cannot be changed at runtime.",
        "value": 65536.0
    },
    "Compat.UseDXT5NormalMaps": {
        "description": "Whether to use DXT5 for normal maps, otherwise BC5 will be used, which is not supported on all hardware.\nBoth formats require the same amount of memory (if driver doesn't emulate the format).\nChanging this will cause normal maps to be recompressed on next load (or when using recompile shaders)\n 0: Use BC5 texture format (default)\n 1: Use DXT5 texture format (lower quality)",
        "value": 0.0
    },
    "Controller.InvalidControlRotationMagnitude": {
        "description": "If any component of an FRotator passed to SetControlRotation is larger than this magnitude, ignore the value. Huge values are usually from uninitialized variables and can cause NaN/Inf to propagate later.",
        "value": 8388608.0
    },
    "CreateDummyFileInPersistentStorage": {
        "command": true,
        "description": "Create a dummy file with specified size in specified persistent storage folder"
    },
    "CriticalPathStall.AfterInitViews": {
        "description": "Sleep for the given time after InitViews. Time is given in ms. This is a debug option used for critical path analysis and forcing a change in the critical path.",
        "value": 0.0
    },
    "CriticalPathStall.ParallelAnimation": {
        "description": "Sleep for the given time in each parallel animation task. Time is given in ms. This is a debug option used for critical path analysis and forcing a change in the critical path.",
        "value": 0.0
    },
    "CriticalPathStall.TickStartFrame": {
        "description": "Sleep for the given time in start frame. Time is given in ms. This is a debug option used for critical path analysis and forcing a change in the critical path.",
        "value": 0.0
    },
    "CsvProfile": {
        "command": true,
        "description": "Starts or stops Csv Profiles"
    },
    "CurveTable.RemoveRedundantKeys": {
        "description": "",
        "value": 1.0
    },
    "D3D12.AFRSyncTemporalResources": {
        "description": "Synchronize inter-frame dependencies between GPUs",
        "value": 1.0
    },
    "D3D12.AFRUseFramePacing": {
        "description": "Control when frames are presented when using mGPU and Alternate Frame Rendering.",
        "value": 0.0
    },
    "D3D12.AdjustTexturePoolSizeBasedOnBudget": {
        "description": "Indicates if the RHI should lower the texture pool size when the application is over the memory budget provided by the OS. This can result in lower quality textures (but hopefully improve performance).",
        "value": 0.0
    },
    "D3D12.AsyncDeferredDeletion": {
        "description": "Controls whether D3D12 resources will be released on a separate thread (default = on).",
        "value": 1.0
    },
    "D3D12.CommandListBatchingMode": {
        "description": "Changes how command lists are batched and submitted to the GPU.",
        "value": 2.0
    },
    "D3D12.EmitRgpFrameMarkers": {
        "description": "Enables/Disables frame markers for AMD's RGP tool.",
        "value": 0.0
    },
    "D3D12.ForceThirtyHz": {
        "description": "If true, the display will never update more often than 30Hz.",
        "value": 1.0
    },
    "D3D12.GlobalViewHeapBlockSize": {
        "description": "Block size for sub allocations on the global view descriptor heap.",
        "value": 2000.0
    },
    "D3D12.GlobalViewHeapSize": {
        "description": "Global view heap size",
        "value": 500000.0
    },
    "D3D12.InsertOuterOcclusionQuery": {
        "description": "If true, enable a dummy outer occlusion query around occlusion query batches. Can help performance on some GPU architectures",
        "value": 0.0
    },
    "D3D12.LocalViewHeapSize": {
        "description": "Local view heap size",
        "value": 500000.0
    },
    "D3D12.LockTexture2DRHIFlush": {
        "description": "If enabled, we do RHIThread flush on LockTexture2D. Likely not required on any platform, but keeping just for testing for now 0: off (default)\n 1: on",
        "value": 0.0
    },
    "D3D12.MaxSyncCounter": {
        "description": "Maximum sync counter to smooth out vsync transitions.",
        "value": 8.0
    },
    "D3D12.MaximumFrameLatency": {
        "description": "Number of frames that can be queued for render.",
        "value": 3.0
    },
    "D3D12.PSO.DiskCache": {
        "description": "Enables a disk cache for Pipeline State Objects (PSOs).\nPSO descs are cached to disk so subsequent runs can create PSOs at load-time instead of at run-time.\nThis cache contains data that is independent of hardware, driver, or machine that it was created on. It can be distributed with shipping content.\n0 to disable the pipeline state disk cache\n1 to enable the pipeline state disk cache (default)\n",
        "value": 0.0
    },
    "D3D12.PSO.DriverOptimizedDiskCache": {
        "description": "Enables a disk cache for driver-optimized Pipeline State Objects (PSOs).\nPSO descs are cached to disk so subsequent runs can create PSOs at load-time instead of at run-time.\nThis cache contains data specific to the hardware, driver, and machine that it was created on.\n0 to disable the driver-optimized pipeline state disk cache\n1 to enable the driver-optimized pipeline state disk cache\n",
        "value": 0.0
    },
    "D3D12.PSO.StallWarningThresholdInMs": {
        "description": "Sets a threshold of when to logs messages about stalls due to PSO creation.\nValue is in milliseconds. (100 is the default)\n",
        "value": 100.0
    },
    "D3D12.RefreshPercentageBeforePresent": {
        "description": "The percentage of the refresh period to wait before presenting.",
        "value": 1.0
    },
    "D3D12.ResidencyManagement": {
        "description": "Controls whether D3D12 resource residency management is active (default = on).",
        "value": 1.0
    },
    "D3D12.StablePowerState": {
        "description": "If true, enable stable power state. This increases GPU timing measurement accuracy but may decrease overall GPU clock rate.",
        "value": 0.0
    },
    "D3D12.SyncRefreshThreshold": {
        "description": "Threshold for time above which vsync will be disabled as a percentage of the refresh rate.",
        "value": 1.0499999523162842
    },
    "D3D12.SyncThreshold": {
        "description": "Number of consecutive 'fast' frames before vsync is enabled.",
        "value": 7.0
    },
    "D3D12.SyncWithDWM": {
        "description": "If true, synchronize with the desktop window manager for vblank.",
        "value": 0.0
    },
    "D3D12.TexturePoolOnlyAccountStreamableTexture": {
        "description": "Texture streaming pool size only account streamable texture .\n - 0: All texture types are counted in the pool (legacy, default).\n - 1: Only streamable textures are counted in the pool.\nWhen enabling the new behaviour, r.Streaming.PoolSize will need to be re-adjusted.\n",
        "value": 1.961817850054744e-44
    },
    "D3D12.UseUpdateTexture3DComputeShader": {
        "description": "If enabled, use a compute shader for UpdateTexture3D. Avoids alignment restrictions 0: off (default)\n 1: on",
        "value": 0.0
    },
    "D3D12.ZeroBufferSizeInMB": {
        "description": "The D3D12 RHI needs a static allocation of zeroes to use when streaming textures asynchronously. It should be large enough to support the largest mipmap you need to stream. The default is 4MB.",
        "value": 4.0
    },
    "Demo.ExceededBudgetWarningInterval": {
        "description": "When > 0, we will wait this many seconds between logging warnings for demo recording exceeding time budgets.",
        "value": 60.0
    },
    "DisableOrphanPins": {
        "description": "0=Orphan pins are enabled (default), 1=Orphan pins are disabled (note: this option will go away in the future)",
        "value": 0.0
    },
    "DoPooledThreadWaitTimeouts": {
        "description": "If enabled, uses the old behaviour for waking up pool threads every 10ms. Otherwise, lets pooled threads sleep until data arrives.",
        "value": 1.961817850054744e-44
    },
    "DumpCopyPropertiesForUnrelatedObjects": {
        "description": "Dump the objects that are cross class copied",
        "value": 0.0
    },
    "DumpLevelCollections": {
        "command": true,
        "description": "Dump level collections in the current world."
    },
    "DumpNiagaraComponents": {
        "command": true,
        "description": "Dump Existing Niagara Components"
    },
    "DumpNiagaraWorldManager": {
        "command": true,
        "description": "Dump Information About the Niagara World Manager Contents"
    },
    "DumpVisibleActors": {
        "command": true,
        "description": "Dump visible actors in current world."
    },
    "EditableMesh.InterpolateFVarsToLimit": {
        "description": "Whether to interpolate face-varying vertex data for subdivision meshes all the way to their limit surface position.  Otherwise, we stop at the most refined mesh.",
        "value": 1.0
    },
    "EditableMesh.InterpolatePositionsToLimit": {
        "description": "Whether to interpolate vertex positions for subdivision meshes all the way to their limit surface position.  Otherwise, we stop at the most refined mesh position.",
        "value": 1.0
    },
    "EditableMesh.OctreeIncrementalUpdateLimit": {
        "description": "If more than this scalar percentage of polygons have changed, we'll rebuild the octree from scratch instead of incrementally updating it.",
        "value": 0.4000000059604645
    },
    "EditableMesh.UseBoundlessOctree": {
        "description": "If enabled, the octree for editable meshes will have a huge bounding box.  Otherwise, we'll compute a tightly wrapped bounds.  However, the bounds will not be able to grow beyond it's original size.",
        "value": 1.0
    },
    "EnableHighDPIAwareness": {
        "description": "Enables or disables high dpi mode",
        "value": 0.0
    },
    "Engine.DoAsyncLoadingWhileWaitingForVSync": {
        "description": "If true process async loading while we wait for vsync.",
        "value": 1.0
    },
    "Engine.MinNumOverlapsToUseTMap": {
        "description": "Min number of overlaps required before using a TMap for deduplication",
        "value": 3.0
    },
    "Engine.SupressWarningsInOnScreenDisplay": {
        "description": "0: Show both errors and warnings on screen, 1: Show only errors on screen (in either case only when DurationOfErrorsAndWarningsOnHUD is greater than zero)",
        "value": 0.0
    },
    "FX.AllowAsyncTick": {
        "description": "allow parallel ticking of particle systems.",
        "value": 1.0
    },
    "FX.AllowCulling": {
        "description": "Allow emitters to be culled.",
        "value": 1.0
    },
    "FX.AllowGPUParticles": {
        "description": "If true, allow the usage of GPU particles.",
        "value": 1.0
    },
    "FX.AllowGPUSorting": {
        "description": "Allow particles to be sorted on the GPU.",
        "value": 1.0
    },
    "FX.BatchAsync": {
        "description": "If 1, particle async tasks are batched because they often take less time than it takes to wake up a task thread. No effect on editor.",
        "value": 0.0
    },
    "FX.BatchAsyncBatchSize": {
        "description": "When FX.BatchAsync = 1, controls the number of particle systems grouped together for threading.",
        "value": 32.0
    },
    "FX.DumpNCPoolInfo": {
        "command": true,
        "description": "Dump Niagara System Pooling Info"
    },
    "FX.EarlyScheduleAsync": {
        "description": "If 1, particle system components that can run async will be scheduled earlier in the frame",
        "value": 0.0
    },
    "FX.FreezeGPUSimulation": {
        "description": "Freeze particles simulated on the GPU.",
        "value": 0.0
    },
    "FX.FreezeParticleSimulation": {
        "description": "Freeze particle simulation.",
        "value": 0.0
    },
    "FX.GPUCollisionDepthBounds": {
        "description": "Limits the depth bounds when searching for a collision plane.",
        "value": 500.0
    },
    "FX.GPUSpawnWarningThreshold": {
        "description": "Warning threshold for spawning of GPU particles.",
        "value": 20000.0
    },
    "FX.MaxCPUParticlesPerEmitter": {
        "description": "Maximum number of CPU particles allowed per-emitter.",
        "value": 1000.0
    },
    "FX.MaxGPUParticlesSpawnedPerFrame": {
        "description": "Maximum number of GPU particles allowed to spawn per-frame per-emitter.",
        "value": 1048576.0
    },
    "FX.MaxParticleTilePreAllocation": {
        "description": "Maximum tile preallocation for GPU particles.",
        "value": 100.0
    },
    "FX.NiagaraComponentPool.CleanTime": {
        "description": "How often should the pool be cleaned (in seconds).",
        "value": 30.0
    },
    "FX.NiagaraComponentPool.Enable": {
        "description": "How many Particle System Components to preallocate when creating new ones for the pool.",
        "value": 1.0
    },
    "FX.NiagaraComponentPool.KeepComponentsRegistered": {
        "description": "If non-zero, components returend to the pool are kept registered with the world but set invisible. This will reduce the cost of pushing/popping components int.",
        "value": 1.0
    },
    "FX.NiagaraComponentPool.KillUnusedTime": {
        "description": "How long a pooled particle component needs to be unused for before it is destroyed.",
        "value": 180.0
    },
    "FX.NiagaraComponentPool.Validation": {
        "description": "Enables pooling validation.",
        "value": 0.0
    },
    "FX.ParticleSlackGPU": {
        "description": "Amount of slack to allocate for GPU particles to prevent tile churn as percentage of total particles.",
        "value": 0.019999999552965164
    },
    "FX.ParticleSystemPool.CleanTime": {
        "description": "How often should the pool be cleaned (in seconds).",
        "value": 30.0
    },
    "FX.ParticleSystemPool.Enable": {
        "description": "How many Particle System Components to preallocate when creating new ones for the pool.",
        "value": 1.0
    },
    "FX.ParticleSystemPool.KillUnusedTime": {
        "description": "How long a pooled particle component needs to be unused for before it is destroyed.",
        "value": 180.0
    },
    "FX.RestartAll": {
        "command": true,
        "description": "Restarts all particle system components"
    },
    "FX.TestGPUSort": {
        "description": "Test GPU sort. 1: Small, 2: Large, 3: Exhaustive, 4: Random",
        "value": 0.0
    },
    "FX.Trail.MaxDistanceTessellation": {
        "description": "Maximum tessellation steps allowed for distance based tessellation.",
        "value": 65535.0
    },
    "FX.Trail.MaxTangentTessellation": {
        "description": "Maximum tessellation steps allowed for tangent based tessellation.",
        "value": 65535.0
    },
    "FX.VisualizeGPUSimulation": {
        "description": "Visualize the current state of GPU simulation.\n0 = off\n1 = visualize particle state\n2 = visualize curve texture",
        "value": 0.0
    },
    "FixedBootOrder": {
        "description": "IAmNoRealVariable",
        "value": 0.0
    },
    "ForceBuildStreamingData": {
        "command": true,
        "description": "Forces streaming data to be rebuilt for the current world."
    },
    "FullSizeUnitGraph": {
        "description": "If true, the unit graph is the old full size, full brightness version.",
        "value": 0.0
    },
    "GPUSort.DebugOffsets": {
        "description": "Debug GPU sort offsets.",
        "value": 0.0
    },
    "GPUSort.DebugSort": {
        "description": "Debug GPU sorting.",
        "value": 0.0
    },
    "GameplayMediaEncoder.Initialize": {
        "command": true,
        "description": "Constructs the audio/video encoding objects. Does not start encoding"
    },
    "GameplayMediaEncoder.Shutdown": {
        "command": true,
        "description": "Releases all systems."
    },
    "GameplayMediaEncoder.Start": {
        "command": true,
        "description": "Starts encoding"
    },
    "GameplayMediaEncoder.Stop": {
        "command": true,
        "description": "Stops encoding"
    },
    "GameplayTags.EnableDetailedStats": {
        "description": "Runtime toggle for verbose CPU profiling stats",
        "value": 1.961817850054744e-44
    },
    "GameplayTags.PrintNetIndiceAssignment": {
        "description": "Logs GameplayTag NetIndice assignment",
        "value": 0.0
    },
    "GeometryCache.Codec.Debug": {
        "description": "Enables debug logging for the codec.",
        "value": 0.0
    },
    "GeometryCache.InterpolateFrames": {
        "description": "Interpolate between geometry cache frames (if topology allows this).",
        "value": 1.0
    },
    "GeometryCache.LookaheadSeconds": {
        "description": "The amount of data (expressed in seconds of animation) to try and keep resident in advance for geometry caches. Note this works regardless of the playback direction.",
        "value": 5.0
    },
    "GeometryCache.OffloadUpdate": {
        "description": "Offloat some updates from the render thread to the workers & RHI threads.",
        "value": 0.0
    },
    "GeometryCache.PrefetchSeconds": {
        "description": "The amount of data (expressed in seconds of animation) to preload of geometry caches. This is the data blockingly loaded at component spawn time.",
        "value": 0.5
    },
    "GeometryCache.TrailingSeconds": {
        "description": "The amount of data (expressed in seconds of animation) to try and keep resident inverse to the playback direction for geometry caches.",
        "value": 2.5
    },
    "HighlightRecorder.Pause": {
        "command": true,
        "description": "Pauses recording of highlight clip"
    },
    "HighlightRecorder.Resume": {
        "command": true,
        "description": "Resumes recording of highlight clip"
    },
    "HighlightRecorder.Save": {
        "command": true,
        "description": "Saves highlight clip, optional parameters: filename (\"test.mp4\" by default) and max duration (float, secs, duration of ring buffer by default)"
    },
    "HighlightRecorder.Start": {
        "command": true,
        "description": "Starts recording of highlight clip, optional parameter: max duration (float, 30 seconds by default)"
    },
    "HighlightRecorder.Stop": {
        "command": true,
        "description": "Stops recording of highlight clip"
    },
    "ImageWriteQueue.MaxConcurrency": {
        "description": "The maximum number of async image writes allowable at any given time.Default is to use the number of cores available.",
        "value": -1.0
    },
    "ImageWriteQueue.MaxQueueSize": {
        "description": "The maximum number of queued image write tasks allowable before the queue will block when adding more.Default is to use 4 times the number of cores available or 16 when multithreading is disabled on the command line.",
        "value": -1.0
    },
    "InGamePerformanceTracking.Enabled": {
        "description": "If in-game performance tracking is enabled. Most games will likely not use or need this so it should be left disabled.",
        "value": 0.0
    },
    "InGamePerformanceTracking.HistorySize": {
        "description": "How many frames in game performance tracking should store in it's history.",
        "value": 30.0
    },
    "Landscape.Combine": {
        "command": true,
        "description": "Set landscape component combining mode : 0 = Default, 1 = Combine All, 2 = Disabled"
    },
    "Landscape.Patches": {
        "command": true,
        "description": "Show/hide Landscape patches"
    },
    "Landscape.ShadowMapWorldUnitsToTexelFactor": {
        "description": "Used to specify tolerance factor for mesh size related to cascade shadow resolution",
        "value": -1.0
    },
    "Landscape.Static": {
        "command": true,
        "description": "Enable/disable Landscape static drawlists"
    },
    "LevelSequence.DefaultDisplayRate": {
        "description": "Specifies default a display frame rate for newly created level sequences; also defines frame locked frame rate where sequences are set to be frame locked. Examples: 30 fps, 120/1 (120 fps), 30000/1001 (29.97), 0.01s (10ms).",
        "value": 30.0
    },
    "LevelSequence.DefaultEvaluationType": {
        "description": "0: Playback locked to playback frames\n1: Unlocked playback with sub frame interpolation",
        "value": 0.0
    },
    "LevelSequence.DefaultTickResolution": {
        "description": "Specifies default a tick resolution for newly created level sequences. Examples: 30 fps, 120/1 (120 fps), 30000/1001 (29.97), 0.01s (10ms).",
        "value": 24000.0
    },
    "LevelSequence.InvalidBindingTagWarnings": {
        "description": "Whether to emit a warning when invalid object binding tags are used to override bindings or not.\n",
        "value": 1.961817850054744e-44
    },
    "ListTimers": {
        "command": true,
        "description": ""
    },
    "LoadTimes.DumpTracking": {
        "command": true,
        "description": "Dump high level load times being tracked"
    },
    "LoadTimes.DumpTrackingLow": {
        "command": true,
        "description": "Dump low level load times being tracked"
    },
    "LoadTimes.ResetTracking": {
        "command": true,
        "description": "Reset load time tracking"
    },
    "LoadTimes.StartAccumulating": {
        "command": true,
        "description": "Starts capturing fine-grained accumulated load time data"
    },
    "LoadTimes.StopAccumulating": {
        "command": true,
        "description": "Stops capturing fine-grained accumulated load time data and dump the results"
    },
    "Localization.HangulTextWrappingMethod": {
        "description": "0: PerSyllable, 1: PerWord (default).",
        "value": 1.0
    },
    "LogCountedInstances": {
        "command": true,
        "description": "Dumps count of all tracked FInstanceCountingObject's"
    },
    "MagicLeap.FovealRegionAngleDegrees": {
        "description": "A larger value here will lead to the GTOM system considering a larger area around the gaze point. Refer to this link to see what values are reasonable: https://en.wikipedia.org/wiki/Fovea_centralis#/media/File:Macula.svg",
        "value": 1.5
    },
    "MagicLeap.WaitForHeadTrackerInit": {
        "description": "If true (default), graphics won't be initialized until after head tracking has been initialized.",
        "value": 1.961817850054744e-44
    },
    "MagicLeap.debug.EnableEyetrackingDebug": {
        "description": "0 - Eyetracking debug visualizations are disabled. 1 - Eyetracking debug visualizations are enabled.",
        "value": 1.0
    },
    "MallocBinned2.FlushThreadCacheMaxWaitTime": {
        "description": "The threshold of time before warning about FlushCurrentThreadCache taking too long (seconds).",
        "value": 0.019999999552965164
    },
    "MallocBinned3.FlushThreadCacheMaxWaitTime": {
        "description": "The threshold of time before warning about FlushCurrentThreadCache taking too long (seconds).",
        "value": 0.019999999552965164
    },
    "MeshEd.OverlayOrthographicDistanceBias": {
        "description": "How much to bias distance scale by in orthograph views, regardless of distance to the viewer",
        "value": 1.0
    },
    "MeshEd.OverlayPerspectiveDistanceBias": {
        "description": "How much to bias distance scale by in perspective views, regardless of distance to the viewer",
        "value": 0.05000000074505806
    },
    "MovieScene.LegacyConversionFrameRate": {
        "description": "Specifies default tick resolution for UMovieScene data saved before 4.20 (default: 60000fps). Examples: 60000 fps, 120/1 (120 fps), 30000/1001 (29.97), 0.01s (10ms).",
        "value": 60000.0
    },
    "Net.CreateBandwidthGenerator": {
        "command": true,
        "description": ""
    },
    "Net.GenerateConstantBandwidth": {
        "command": true,
        "description": "Deliver a constant throughput every tick to generate the specified Kilobytes per sec.\nUsage:\nNet.GenerateBandwidth KilobytesPerSecond"
    },
    "Net.GeneratePeriodicBandwidthSpike": {
        "command": true,
        "description": "Generates a spike of bandwidth every X milliseconds.\nUsage:\nNet.GeneratePeriodicBandwidthSpike SpikeInKb PeriodInMS"
    },
    "Net.LogPendingGuidsOnShutdown": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "Net.LogSkippedRepNotifies": {
        "description": "Log when the networking code skips calling a repnotify clientside due to the property value not changing.",
        "value": 0.0
    },
    "Net.RepDriver.Enable": {
        "description": "Enables Replication Driver. 0 will fallback to legacy NetDriver implementation.",
        "value": 1.0
    },
    "Net.RepMovement.DrawDebug": {
        "description": "",
        "value": 0.0
    },
    "Net.ReuseReplicatorsForDormantObjects": {
        "description": "When true, Server's will persist and attempt to reuse replicators for Dormant Actors and Objects. This can cut down on bandwidth by preventing redundant information from being sent when waking objects from Dormancy.",
        "value": 1.961817850054744e-44
    },
    "Net.UsePackedShadowBuffers": {
        "description": "When enabled, FRepLayout will generate shadow buffers that are packed with only the necessary NetProperties, instead of copying entire object state.",
        "value": 1.0
    },
    "NetAnalytics.MinimumNumberOfPacketsForBurstTracking": {
        "description": "The minimum number of packets that must have been notified (in our out) in order to consider a frame for packet loss by percentage.See NetAnalytics.PercentOfDroppedPacketsToConsiderBurst",
        "value": 5.0
    },
    "NetAnalytics.NumberOfConsecutiveDroppedPacketsToConsiderBurst": {
        "description": "The number of packets lost in a row (in or out) for us to consider the frame as having bursts of packet loss.Not affected by NetAnalytics.MinimumNumberOfPacketsForBurstTracking.",
        "value": 3.0
    },
    "NetAnalytics.PercentOfDroppedPacketsToConsiderBurst": {
        "description": "The percentage of packets lost in a frame (in or out) for us to consider the frame as having bursts of packet loss.\nSee NetAnalytics.MinimumNumberOfPacketsForBurstTracking.",
        "value": 0.20000000298023224
    },
    "NetworkEmulationProfiles": {
        "description": "IAmNoRealVariable",
        "value": 0.0
    },
    "Niagara.AllowQuickSortedParameterOffsetsCopy": {
        "description": "Whether to use memcpy to copy sortedparameteroffset arrays. (default=1)\n",
        "value": 1.0
    },
    "Niagara.GPUCountBufferSlack": {
        "description": "Multiplier of the GPU count buffer size to prevent frequent re-allocation.",
        "value": 1.5
    },
    "Niagara.GPUCulling": {
        "description": "Whether to frustum and camera distance cull particles on the GPU",
        "value": 1.0
    },
    "Niagara.GPUDrawIndirectArgsBufferSlack": {
        "description": "Multiplier on the required indirect args buffer size to account for culling and multiple mesh sections on mesh renderers.",
        "value": 2.0
    },
    "Niagara.GPUSorting.CPUToGPUThreshold": {
        "description": "Particle count to move from a CPU sort to a GPU sort. -1 disables. (default=-1)",
        "value": -1.0
    },
    "Niagara.GPUSorting.UseMaxPrecision": {
        "description": "Wether sorting using fp32 instead of fp16. (default=0)",
        "value": 0.0
    },
    "Niagara.MinCulledGPUInstanceCount": {
        "description": "Minimum number of culled (per-view) instance count entries allocated in the global buffer. (default=2048)",
        "value": 2048.0
    },
    "Niagara.MinGPUDrawIndirectArgs": {
        "description": "Minimum number of draw indirect argsallocated in the global buffer. (default=256)",
        "value": 256.0
    },
    "Niagara.MinGPUInstanceCount": {
        "description": "Minimum number of instance count entries allocated in the global buffer. (default=2048)",
        "value": 2048.0
    },
    "Niagara.RadixSortThreshold": {
        "description": "Instance count at which radix sort gets used instead of introspective sort.\nSet to  -1 to never use radixsort. (default=400)",
        "value": 400.0
    },
    "Niagara.Ribbon.MinSegmentLength": {
        "description": "Min length of niagara ribbon segments. (default=1)",
        "value": 1.0
    },
    "Niagara.Ribbon.Tessellation.MaxErrorScreenPercentage": {
        "description": "Screen percentage used to compute the tessellation factor. \nSmaller values will generate more tessellation, up to max tesselltion. (default=0.002)",
        "value": 0.0020000000949949026
    },
    "Niagara.Ribbon.Tessellation.MaxInterp": {
        "description": "When TessellationAngle is > 0, this is the maximum tesselation factor. \nHigher values allow more evenly divided tesselation. \nWhen TessellationAngle is 0, this is the actually tesselation factor (default=16).",
        "value": 16.0
    },
    "Niagara.Ribbon.Tessellation.MinAbsoluteError": {
        "description": "Minimum absolute world size error when tessellating. \nPrevent over tessellating when distance gets really small. (default=0.5)",
        "value": 0.5
    },
    "Niagara.Ribbon.Tessellation.MinAngle": {
        "description": "Ribbon segment angle to tesselate in radian. (default=15 degrees)",
        "value": 0.2617993950843811
    },
    "OSS.VoiceLoopback": {
        "description": "Enables voice loopback\n1 Enabled. 0 Disabled.",
        "value": 0.0
    },
    "OpenGL.BindlessTexture": {
        "description": "If true, use GL_ARB_bindless_texture over traditional glBindTexture/glBindSampler.",
        "value": 0.0
    },
    "OpenGL.MaxSubDataSize": {
        "description": "Maximum amount of data to send to glBufferSubData in one call",
        "value": 262144.0
    },
    "OpenGL.RebindTextureBuffers": {
        "description": "If true, rebind GL_TEXTURE_BUFFER's to their GL_TEXTURE name whenever the buffer is modified.",
        "value": 0.0
    },
    "OpenGL.SkipCompute": {
        "description": "If true, don't issue dispatch work.",
        "value": 0.0
    },
    "OpenGL.UBODirectWrite": {
        "description": "Enables direct writes to the UBO via Buffer Storage",
        "value": 1.0
    },
    "OpenGL.UBOPoolSize": {
        "description": "Size of the UBO pool, 0 disables UBO Pool",
        "value": 16777216.0
    },
    "OpenGL.UseBufferDiscard": {
        "description": "If true, use dynamic buffer orphaning hint.",
        "value": 1.0
    },
    "OpenGL.UseEmulatedUBs": {
        "description": "If true, enable using emulated uniform buffers on OpenGL ES3.1 mode.",
        "value": 1.0
    },
    "OpenGL.UseGlClipControlIfAvailable": {
        "description": "If true, the engine trys to use glClipControl if the driver supports it.",
        "value": 1.0
    },
    "OpenGL.UseMapBuffer": {
        "description": "If true, use glMapBuffer otherwise use glBufferSubdata.",
        "value": 0.0
    },
    "OpenGL.UsePersistentMappingStagingBuffer": {
        "description": "If true, it will use persistent mapping for the Staging Buffer.",
        "value": 1.0
    },
    "OpenGL.UseSeparateShaderObjects": {
        "description": "If set to 1, use OpenGL's separate shader objects to eliminate expensive program linking",
        "value": 0.0
    },
    "OpenGL.UseStagingBuffer": {
        "description": "Enables maps of dynamic vertex buffers to go to a staging buffer",
        "value": 1.0
    },
    "OpenGL.UseVAB": {
        "description": "If true, use GL_VERTEX_ATTRIB_BINDING instead of traditional vertex array setup.",
        "value": 1.0
    },
    "P.Chaos.Simulation.Enable": {
        "description": "Enable / disable chaos simulation. If disabled, physics will not tick.",
        "value": 1.0
    },
    "PersistentStorageCategoryStats": {
        "command": true,
        "description": "Get the stat of each persistent storage stats\n"
    },
    "PlayerController.LevelVisibilityDontSerializeFileName": {
        "description": "When true, we'll always skip serializing FileName with FUpdateLevelVisibilityLevelInfo's. This will save bandwidth when games don't need both.",
        "value": 1.961817850054744e-44
    },
    "PlayerController.NetResetServerPredictionDataOnPawnAck": {
        "description": "Whether to reset server prediction data for the possessed Pawn when the pawn ack handshake completes.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "RHI.FeatureSetLimit": {
        "description": "If set to 10, limit D3D RHI to D3D10 feature level. Otherwise, it will use default. Changing this at run-time has no effect. (default is -1)",
        "value": -1.0
    },
    "RHI.GPUHitchThreshold": {
        "description": "Threshold for detecting hitches on the GPU (in milliseconds).",
        "value": 100.0
    },
    "RHI.MaxSyncCounter": {
        "description": "Maximum sync counter to smooth out vsync transitions.",
        "value": 8.0
    },
    "RHI.MaximumFrameLatency": {
        "description": "Number of frames that can be queued for render.",
        "value": 3.0
    },
    "RHI.RefreshPercentageBeforePresent": {
        "description": "The percentage of the refresh period to wait before presenting.",
        "value": 1.0
    },
    "RHI.SyncRefreshThreshold": {
        "description": "Threshold for time above which vsync will be disabled as a percentage of the refresh rate.",
        "value": 1.0499999523162842
    },
    "RHI.SyncThreshold": {
        "description": "Number of consecutive 'fast' frames before vsync is enabled.",
        "value": 7.0
    },
    "RHI.SyncWithDWM": {
        "description": "If true, synchronize with the desktop window manager for vblank.",
        "value": 0.0
    },
    "RHI.TargetRefreshRate": {
        "description": "If non-zero, the display will never update more often than the target refresh rate (in Hz).",
        "value": 0.0
    },
    "Radio_ChebyshevCubedMultiplier": {
        "description": "A parameter to tweak the radio filter.",
        "value": 5.0
    },
    "Radio_ChebyshevMultiplier": {
        "description": "A parameter to tweak the radio filter.",
        "value": 3.0
    },
    "Radio_ChebyshevPower": {
        "description": "A parameter to tweak the radio filter.",
        "value": 5.0
    },
    "Radio_ChebyshevPowerMultiplier": {
        "description": "A parameter to tweak the radio filter.",
        "value": 2.0
    },
    "ReloadGlobalShaders": {
        "command": true,
        "description": "Reloads the global shaders file"
    },
    "Replay.UseReplayConnection": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "RunAsyncTraceOnWorkerThread": {
        "description": "Whether to use worker thread for async trace functionality. This works if FApp::ShouldUseThreadingForPerformance is true. Otherwise it will always use game thread. \n0: Use game thread, 1: User worker thread",
        "value": 1.0
    },
    "SafeZone.EnableScale": {
        "description": "IS the safe zone scale enabled?",
        "value": 1.961817850054744e-44
    },
    "SafeZone.Scale": {
        "description": "The safezone scale.",
        "value": 1.0
    },
    "SavePackage.EnableNewSave": {
        "description": "Enable new package save mechanism over the old one.",
        "value": 0.0
    },
    "Sequencer.Audio.IgnoreAudioSyncDuringWorldTimeDilation": {
        "description": "Ignore correcting audio if there is world time dilation.\n",
        "value": 1.961817850054744e-44
    },
    "Sequencer.Audio.MaxDesyncTolerance": {
        "description": "Controls how many seconds an audio track can be out of sync in a Sequence before we attempt a time correction.\n",
        "value": 0.5
    },
    "Sequencer.Audio.UseAudioClockForAudioDesync": {
        "description": "When set to 1, we will use the audio render thread directly to query whether audio has went out of sync with the sequence.\n",
        "value": 0.0
    },
    "Sequencer.AutoTangentNew": {
        "description": "If 1 Auto Tangent will use new algorithm to gradually flatten maximum/minimum keys, if 0 Auto Tangent will average all keys (pre 4.23 behavior).",
        "value": 1.0
    },
    "Sequencer.CompilerVersion": {
        "description": "Defines a global identifer for moviescene compiler logic.\n",
        "value": 7.0
    },
    "Sequencer.LinearCubicInterpolation": {
        "description": "If 1 Linear Keys Act As Cubic Interpolation with Linear Tangents, if 0 Linear Key Forces Linear Interpolation to Next Key.",
        "value": 1.0
    },
    "Sequencer.MaxLatentActionLoops": {
        "description": "Defines the maximum number of latent action loops that can be run in one frame.\n",
        "value": 100.0
    },
    "Sequencer.NetSyncThreshold": {
        "description": "(Default: 200ms. Defines the threshold at which clients and servers must be forcibly re-synced during playback.",
        "value": 200.0
    },
    "Sequencer.ThreadedEvaluation.AllocationThreshold": {
        "description": "(Default: 32) Defines the entity allocation fragmentation threshold above which threaded evaluation will be used.\n",
        "value": 32.0
    },
    "Sequencer.ThreadedEvaluation.EntityThreshold": {
        "description": "(Default: 256) Defines the number of entities that need to exist to justify threaded evaluation.\n",
        "value": 256.0
    },
    "SetThreadAffinity": {
        "command": true,
        "description": "Sets the thread affinity. A single arg of default resets the thread affinity, otherwise pairs of args [GT|RT|RHI|Task] [Hex affinity] sets the affinity."
    },
    "ShowFlag.AmbientCubemap": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.AmbientOcclusion": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.AntiAliasing": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Atmosphere": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.AudioRadius": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.BSP": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.BSPSplit": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.BSPTriangles": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.BillboardSprites": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Bloom": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Bones": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Bounds": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Brushes": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.BuilderBrush": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CameraAspectRatioBars": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CameraFrustums": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CameraImperfections": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CameraInterpolation": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CameraSafeFrames": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CapsuleShadows": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Collision": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CollisionPawn": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CollisionVisibility": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ColorGrading": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.CompositeEditorPrimitives": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Constraints": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ContactShadows": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Cover": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.DebugAI": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Decals": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.DeferredLighting": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.DepthOfField": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Diffuse": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.DirectLighting": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.DirectionalLights": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.DistanceCulledPrimitives": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.DistanceFieldAO": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.DynamicShadows": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Editor": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.EyeAdaptation": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Fog": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ForceFeedbackRadius": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.GBufferHints": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Game": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.GameplayDebug": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.GlobalIllumination": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Grain": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Grid": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.HISMCClusterTree": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.HISMCOcclusionBounds": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.HLODColoration": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.HMDDistortion": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.HighResScreenshotMask": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.HitProxies": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.IndirectLightingCache": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.InstancedFoliage": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.InstancedGrass": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.InstancedStaticMeshes": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LOD": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LODColoration": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Landscape": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LargeVertices": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LensFlares": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LevelColoration": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LightComplexity": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LightFunctions": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LightInfluences": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LightMapDensity": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LightRadius": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LightShafts": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Lighting": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.LightingOnlyOverride": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.MassProperties": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.MaterialTextureScaleAccuracy": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Materials": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.MediaPlanes": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.MeshEdges": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.MeshUVDensityAccuracy": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ModeWidgets": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.MotionBlur": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Navigation": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.OcclusionMeshes": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.OnScreenDebug": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.OutputMaterialTextureScales": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.OverrideDiffuseAndSpecular": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Paper2DSprites": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Particles": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PathTracing": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PhysicalMaterialMasks": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Pivot": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PointLights": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PostProcessMaterial": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PostProcessing": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PrecomputedVisibility": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PrecomputedVisibilityCells": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PreviewShadowsIndicator": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PrimitiveDistanceAccuracy": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.PropertyColoration": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.QuadOverdraw": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.RayTracedDistanceFieldShadows": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.RayTracingDebug": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.RectLights": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ReflectionEnvironment": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ReflectionOverride": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Refraction": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Rendering": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.RequiredTextureResolution": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.SceneColorFringe": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ScreenPercentage": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ScreenSpaceAO": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ScreenSpaceReflections": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Selection": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.SelectionOutline": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.SeparateTranslucency": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ServerDrawDebug": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ShaderComplexity": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ShaderComplexityWithQuadOverdraw": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ShadowFrustums": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.SkeletalMeshes": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.SkyLighting": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Snap": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Specular": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Splines": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.SpotLights": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.StaticMeshes": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.StationaryLightOverlap": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.StereoRendering": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.StreamingBounds": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.SubsurfaceScattering": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.TemporalAA": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Tessellation": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.TestImage": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.TextRender": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.TexturedLightProfiles": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.ToneCurve": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Tonemapper": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Translucency": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VREditing": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VectorFields": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VertexColors": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Vignette": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VirtualTexturePrimitives": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisLog": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeBuffer": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeCalibrationColor": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeCalibrationCustom": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeCalibrationGrayscale": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeDOF": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeDistanceFieldAO": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeGlobalDistanceField": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeHDR": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeLPV": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeLightCulling": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeMeshDistanceFields": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeMotionBlur": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeOutOfBoundsPixels": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeSSR": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeSSS": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeSenses": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeShadingModels": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeSkyAtmosphere": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VisualizeVolumetricLightmap": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VolumeLightingSamples": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Volumes": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VolumetricFog": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.VolumetricLightmap": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.WidgetComponents": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShowFlag.Wireframe": {
        "description": "Allows to override a specific showflag (works in editor and game, \"show\" only works in game and UI only in editor)\nUseful to run a build many time with the same showflags (when put in consolevariables.ini like \"showflag.abc=0\")\n 0: force the showflag to be OFF\n 1: force the showflag to be ON\n 2: do not override this showflag (default)",
        "value": 2.0
    },
    "ShrinkUObjectHashTables": {
        "command": true,
        "description": "Shrinks all of the UObject hash tables."
    },
    "SigMan.FilterTag": {
        "description": "Only display objects with the specified filter tag.  If None objects with any will be displayed.\n",
        "value": 0.0
    },
    "SigMan.ObjectsToShow": {
        "description": "How many objects to display when ShowDebug SignificanceManager is enabled.\n",
        "value": 15.0
    },
    "SkinWeightProfileManager.AllowCPU": {
        "description": "Whether or not to allow cpu buffer generation",
        "value": 1.0
    },
    "Slate.AbsoluteIndices": {
        "description": "0: Each element first vertex index starts at 0 (default), 1: Use absolute indices, simplifies draw call setup on RHIs that do not support BaseVertex",
        "value": 0.0
    },
    "Slate.AccessibleWidgetsProcessedPerTick": {
        "description": "To reduce performance spikes, generating the accessible widget tree is limited to this many widgets per tick to update.",
        "value": 100.0
    },
    "Slate.AllowBackgroundBlurWidgets": {
        "description": "If 0, no background blur widgets will be rendered",
        "value": 1.0
    },
    "Slate.AllowNumericLabelCrush": {
        "description": "Should we crush the vector input box?.",
        "value": 1.0
    },
    "Slate.AllowPerUserHitTesting": {
        "description": "Toggles between widgets mapping to a user id and requring a matching user id from an input event or allowing all users to interact with widget",
        "value": 1.0
    },
    "Slate.AllowSlateToSleep": {
        "description": "Whether Slate should go to sleep when there are no active timers and the user is idle",
        "value": 0.0
    },
    "Slate.BackgroundBlurDownsample": {
        "description": "",
        "value": 1.0
    },
    "Slate.BackgroundBlurMaxKernelSize": {
        "description": "The maximum allowed kernel size.  Note: Very large numbers can cause a huge decrease in performance",
        "value": 255.0
    },
    "Slate.CSV.CascadeInvalidationEventAmount": {
        "description": "The amount of cascaded invalidated parents before we fire a CSV event.",
        "value": 5.0
    },
    "Slate.Contrast": {
        "description": "The amount of contrast to apply to the UI (default 1).",
        "value": 1.0
    },
    "Slate.CullingSlackFillPercent": {
        "description": "Scales the culling rect by the amount to provide extra slack/wiggle room for widgets that have a true bounds larger than the root child widget in a container.",
        "value": 0.25
    },
    "Slate.DefaultTextFlowDirection": {
        "description": "0: Auto (default), 1: LeftToRight, 2: RightToLeft.",
        "value": 0.0
    },
    "Slate.DefaultTextShapingMethod": {
        "description": "0: Auto (default), 1: KerningOnly, 2: FullShaping.",
        "value": 0.0
    },
    "Slate.DeferRetainedRenderingRenderThread": {
        "description": "Whether or not to defer retained rendering to happen at the same time as the rest of slate render thread work",
        "value": 0.0
    },
    "Slate.DeferWindowsMessageProcessing": {
        "description": "Whether windows message processing is deferred until tick or if they are processed immediately",
        "value": 1.0
    },
    "Slate.DeleteResources": {
        "command": true,
        "description": "Flushes and deletes all resources created by Slate's RHI Resource Manager."
    },
    "Slate.DrawToVRRenderTarget": {
        "description": "If enabled while in VR. Slate UI will be drawn into the render target texture where the VR imagery for either eye was rendered, allow the viewer of the HMD to see the UI (for better or worse.)  This render target will then be cropped/scaled into the back buffer, if mirroring is enabled.  When disabled, Slate UI will be drawn on top of the backbuffer (not to the HMD) after the mirror texture has been cropped/scaled into the backbuffer.",
        "value": 1.0
    },
    "Slate.EnableCursorQueries": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "Slate.EnableDrawEvents": {
        "description": ".",
        "value": 0.0
    },
    "Slate.EnableFastWidgetPath": {
        "description": "Whether or not we enable fast widget pathing.  This mode relies on parent pointers to work correctly.",
        "value": 1.961817850054744e-44
    },
    "Slate.EnableFontAntiAliasing": {
        "description": "Enable or disable anti-aliasing for font rendering (0 = off, 1 = on). Enabled by default.",
        "value": 1.0
    },
    "Slate.EnableGlobalInvalidation": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "Slate.EnableLayoutLocalization": {
        "description": "Controls if we enable or disable localized layout, which affects left to right or right to left detection for cultures.",
        "value": 1.0
    },
    "Slate.EnableLegacyFontHinting": {
        "description": "Enable the legacy font hinting? (0/1).",
        "value": 0.0
    },
    "Slate.EnableRetainedRendering": {
        "description": "Whether to attempt to render things in SRetainerWidgets to render targets first.",
        "value": 1.0
    },
    "Slate.EnableSyntheticCursorMoves": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "Slate.EnableTooltips": {
        "description": "Whether to allow tooltips to spawn at all.",
        "value": 1.961817850054744e-44
    },
    "Slate.Font.AsyncLazyLoad": {
        "description": "Causes unloaded font faces that are lazily loaded, to be loaded asynchronusly, until then the font won't measure correctly.  Once complete the UI will invalidate.",
        "value": 1.961817850054744e-44
    },
    "Slate.ForceBackgroundBlurLowQualityOverride": {
        "description": "Whether or not to force a slate brush to be used instead of actually blurring the background",
        "value": 0.0
    },
    "Slate.GlobalScrollAmount": {
        "description": "How much to scroll for each click of the mouse wheel (in Slate Screen Units).",
        "value": 32.0
    },
    "Slate.GrowFontAtlasFrameWindow": {
        "description": "The number of frames within the font atlas will resize rather than flush.",
        "value": 1.0
    },
    "Slate.GrowFontNonAtlasFrameWindow": {
        "description": "The number of frames within the large font glyph pool will resize rather than flush.",
        "value": 1.0
    },
    "Slate.MaxFontAtlasPagesBeforeFlush": {
        "description": "The number of font atlas textures created and used before we flush the font cache if a texture atlas is full",
        "value": 1.0
    },
    "Slate.MaxFontNonAtlasTexturesBeforeFlush": {
        "description": "The number of large glyph font textures initially.",
        "value": 1.0
    },
    "Slate.MemorylessDepthStencil": {
        "description": "Whether to use memoryless DepthStencil target for Slate. Reduces memory usage and implies that DepthStencil state can't be preserved between Slate renderpasses",
        "value": 0.0
    },
    "Slate.NumericLabelWidthCrushStart": {
        "description": "Start crushing when the width is below.",
        "value": 190.0
    },
    "Slate.NumericLabelWidthCrushStop": {
        "description": "Stop crushing when the width is above.",
        "value": 200.0
    },
    "Slate.OutlineFontRenderMethod": {
        "description": "Changes the render method for outline fonts.  0 = freetype does everything and generates a bitmap for the base glyph (default).  1 = We override the freetype rasterizer.  Can help with some rendering anomalies on complicated fonts.",
        "value": 0.0
    },
    "Slate.OverrideScissorRect": {
        "description": "Whether to allow Slate to apply a scissor clip to UI elements to prevent certain artifacts.  You might need to disable this if you are drawing UI over a mirror backbuffer while in VR.",
        "value": 1.0
    },
    "Slate.PreventDuplicateMouseEventsForTouchForWindows7": {
        "description": "Hack to get around multiple mouse events being triggered for touch events on Windows 7 and lower.  Enabling this will prevent pen tablets from working on windows 7 since until we switch to the windows 8 sdk (and can use WM_POINTER* events) we cannot detect the difference",
        "value": 0.0
    },
    "Slate.RequireFocusForGamepadInput": {
        "description": "Whether gamepad input should be ignored by the engine if the application is not currently active",
        "value": 1.961817850054744e-44
    },
    "Slate.ResourceManager.LockResourceDuringGC": {
        "description": "Lock the Slate RHI Resource Manager when GCing and when the loading screen has ownership to prevent multithreaded access to the resources.",
        "value": 1.961817850054744e-44
    },
    "Slate.ShouldFollowCultureByDefault": {
        "description": "Should we initially follow the culture's flow direction at the window level.",
        "value": 0.0
    },
    "Slate.ShowWireFrame": {
        "description": "",
        "value": 0.0
    },
    "Slate.SleepBufferPostInput": {
        "description": "The amount of time that must pass without any user action before Slate is put to sleep (provided that there are no active timers).",
        "value": 0.0
    },
    "Slate.TargetFrameRateForResponsiveness": {
        "description": "Minimum sustained average frame rate required before we consider the editor to be \"responsive\" for a smooth UI experience",
        "value": 35.0
    },
    "Slate.ThrottleWhenMouseIsMoving": {
        "description": "Whether to attempt to increase UI responsiveness based on mouse cursor movement.",
        "value": 0.0
    },
    "Slate.ToolTipWrapWidth": {
        "description": "Width of Slate tool-tips before we wrap the tool-tip text",
        "value": 1000.0
    },
    "Slate.TooltipIntroDuration": {
        "description": "How long it takes for a tooltip to animate into view, in seconds.",
        "value": 0.10000000149011612
    },
    "Slate.TooltipSummonDelay": {
        "description": "Delay in seconds before a tooltip is displayed near the mouse cursor when hovering over widgets that supply tooltip data.",
        "value": 0.15000000596046448
    },
    "Slate.UnloadFreeTypeDataOnFlush": {
        "description": "Releases the free type data when the font cache is flushed",
        "value": 1.0
    },
    "Slate.WorldWidgetZOrder": {
        "description": "Whether to re-order world widgets projected to screen by their view point distance\n 0: Disable re-ordering\n 1: Re-order by distance (default, less batching, less artifacts when widgets overlap)",
        "value": 1.0
    },
    "Slate.bAllowThrottling": {
        "description": "Allow Slate to throttle parts of the engine to ensure the UI is responsive",
        "value": 1.0
    },
    "SparseDelegateReport": {
        "command": true,
        "description": "Outputs a report of what sparse delegates are bound. SparseDelegateReport [name=<ObjectName>] [delegate=<DelegateName>] [class=<ClassName>] -details"
    },
    "SpewAnimRateOptimization": {
        "description": "True to spew overall anim rate optimization tick rates.",
        "value": 0.0
    },
    "SynthBenchmark": {
        "command": true,
        "description": "Run simple benchmark to get some metrics to find reasonable game settings automatically\nOptional (float) parameter allows to scale with work amount to trade time or precision (default: 10)."
    },
    "TaskGraph.ABTestThreads": {
        "command": true,
        "description": "Takes two 0/1 arguments. Equivalent to setting TaskGraph.UseHiPriThreads and TaskGraph.UseBackgroundThreads, respectively. Packages as one command for use with the abtest command."
    },
    "TaskGraph.EnableForkedMultithreading": {
        "description": "When false will prevent the task graph from running multithreaded on forked processes.",
        "value": 1.961817850054744e-44
    },
    "TaskGraph.ForceSceneRenderTaskWakeup": {
        "description": "If true and RT polling is on, wakes up the RT explicitly after FDrawSceneCommand is submitted. This avoids delays and improves perf.",
        "value": 1.961817850054744e-44
    },
    "TaskGraph.ForkedProcessMaxWorkerThreads": {
        "description": "Configures the number of worker threads a forked process should spawn if it allows multithreading.",
        "value": 2.0
    },
    "TaskGraph.IgnoreThreadToDoGatherOn": {
        "description": "DEPRECATED! If 1, then we ignore the hint provided with SetGatherThreadForDontCompleteUntil and just run it on AnyHiPriThreadHiPriTask.",
        "value": 0.0
    },
    "TaskGraph.NumWorkerThreadsToIgnore": {
        "command": true,
        "description": "Used to tune the number of task threads. Generally once you have found the right value, PlatformMisc::NumberOfWorkerThreadsToSpawn() should be hardcoded."
    },
    "TaskGraph.PrintBroadcastWarnings": {
        "description": "If > 0 taskgraph will emit warnings when waiting on broadcasts",
        "value": 1.0
    },
    "TaskGraph.RenderThreadPollPeriodMs": {
        "description": "Render thread polling period in milliseconds. If value < 0, task graph tasks explicitly wake up RT, otherwise RT polls for tasks.",
        "value": -1.0
    },
    "TaskGraph.TaskPriorities.AsyncEndOfFrameGameTasks": {
        "command": true,
        "description": "Task and thread priority for the experiemntal async end of frame tasks."
    },
    "TaskGraph.TaskPriorities.AsyncIOCPUWork": {
        "command": true,
        "description": "Task and thread priority for decompression, decryption and signature checking of async IO from a pak file."
    },
    "TaskGraph.TaskPriorities.AsyncTraceTask": {
        "command": true,
        "description": "Task and thread priority for async traces."
    },
    "TaskGraph.TaskPriorities.ClearAudioChunkCacheReadRequest": {
        "command": true,
        "description": "Task and thread priority for an async task that clears FCacheElement::ReadRequest"
    },
    "TaskGraph.TaskPriorities.CompilePipelineStateTask": {
        "command": true,
        "description": "Task and thread priority for FCompilePipelineStateTask."
    },
    "TaskGraph.TaskPriorities.FMeshDrawCommandPassSetupTask": {
        "command": true,
        "description": "Task and thread priority for FMeshDrawCommandPassSetupTask."
    },
    "TaskGraph.TaskPriorities.FetchVisibilityForPrimitivesTask": {
        "command": true,
        "description": "Task and thread priority for FetchVisibilityForPrimitivesTask."
    },
    "TaskGraph.TaskPriorities.HiPriAsyncTickTaskPriority": {
        "command": true,
        "description": "Task and thread priority for async ticks that are high priority."
    },
    "TaskGraph.TaskPriorities.IoDispatcherAsyncTasks": {
        "command": true,
        "description": "Task and thread priority for IoDispatcher decompression."
    },
    "TaskGraph.TaskPriorities.NavTriggerAsyncQueries": {
        "command": true,
        "description": "Task and thread priority for UNavigationSystemV1::PerformAsyncQueries."
    },
    "TaskGraph.TaskPriorities.NormalAsyncTickTaskPriority": {
        "command": true,
        "description": "Task and thread priority for async ticks that are not high priority."
    },
    "TaskGraph.TaskPriorities.ParallelAnimCompletionTaskHighPriority": {
        "description": "Allows parallel anim completion tasks to take priority on the GT so further work (if needed) can be kicked off earlier.",
        "value": 1.961817850054744e-44
    },
    "TaskGraph.TaskPriorities.ParallelAnimationEvaluationTask": {
        "command": true,
        "description": "Task and thread priority for FParallelAnimationEvaluationTask"
    },
    "TaskGraph.TaskPriorities.ParallelBlendPhysicsTask": {
        "command": true,
        "description": "Task and thread priority for FParallelBlendPhysicsTask."
    },
    "TaskGraph.TaskPriorities.ParallelClothTask": {
        "command": true,
        "description": "Task and thread priority for parallel cloth."
    },
    "TaskGraph.TaskPriorities.ParallelTranslateCommandList": {
        "command": true,
        "description": "Task and thread priority for FParallelTranslateCommandList."
    },
    "TaskGraph.TaskPriorities.ParallelTranslateCommandListPrepass": {
        "command": true,
        "description": "Task and thread priority for FParallelTranslateCommandList for the prepass, which we would like to get to the GPU asap."
    },
    "TaskGraph.TaskPriorities.ParallelTranslateSetupCommandList": {
        "command": true,
        "description": "Task and thread priority for FParallelTranslateSetupCommandList."
    },
    "TaskGraph.TaskPriorities.ParticleAsyncTask": {
        "command": true,
        "description": "Task and thread priority for FParticleAsyncTask."
    },
    "TaskGraph.TaskPriorities.ParticleManagerAsyncTask": {
        "command": true,
        "description": "Task and thread priority for FParticleManagerAsyncTask."
    },
    "TaskGraph.TaskPriorities.PhyXSceneCompletion": {
        "command": true,
        "description": "Task and thread priority for PhysicsSceneCompletion."
    },
    "TaskGraph.TaskPriorities.PhysXStepSimulation": {
        "command": true,
        "description": "Task and thread priority for FPhysSubstepTask::StepSimulation."
    },
    "TaskGraph.TaskPriorities.PhysXTask": {
        "command": true,
        "description": "Task and thread priority for FPhysXTask."
    },
    "TaskGraph.TaskPriorities.PhysicsTickTask": {
        "command": true,
        "description": "Task and thread priotiry for Chaos physics tick"
    },
    "TaskGraph.TaskPriorities.RHIThreadOnTaskThreads": {
        "command": true,
        "description": "Task and thread priority for when we are running 'RHI thread' tasks on any thread."
    },
    "TaskGraph.TaskPriorities.SceneRenderingTask": {
        "command": true,
        "description": "Task and thread priority for various scene rendering tasks."
    },
    "TaskGraph.TaskPriorities.TickCleanupTaskPriority": {
        "command": true,
        "description": "Task and thread priority for tick cleanup."
    },
    "TaskGraph.TaskPriorities.TickDispatchTaskPriority": {
        "command": true,
        "description": "Task and thread priority for tick tasks dispatch."
    },
    "TaskGraph.TaskPriorities.UpdateCachePrimitivesTask": {
        "command": true,
        "description": "Task and thread priority for FUpdateCachePrimitivesTask."
    },
    "TaskGraph.TaskThreadPriority": {
        "command": true,
        "description": "Sets the priority of the task threads. Argument is one of belownormal, normal or abovenormal."
    },
    "TaskGraph.TestDontCompleteUntilForAlreadyComplete": {
        "description": "If 1, then we before spawning a gather task, we just check if all of the subtasks are complete, and in that case we can skip the gather.",
        "value": 1.0
    },
    "TaskGraph.UseBackgroundThreads": {
        "description": "If > 0, then use background threads, otherwise run background tasks on normal priority task threads. Used for performance tuning.",
        "value": 1.0
    },
    "TaskGraph.UseHiPriThreads": {
        "description": "If > 0, then use hi priority task threads, otherwise run background tasks on normal priority task threads. Used for performance tuning.",
        "value": 1.0
    },
    "TimerManager.DumpTimerLogResolveVirtualFunctions": {
        "description": "When logging timer info virtual functions will be resolved, if possible.",
        "value": 1.0
    },
    "TimerManager.DumpTimerLogSymbolNames": {
        "description": "When logging timer info, symbol names will be included if set to 1.",
        "value": 1.0
    },
    "TimerManager.DumpTimerLogsThreshold": {
        "description": "Threshold (in milliseconds) after which we log timer info to try and help track down spikes in the timer code. Disabled when set to 0",
        "value": 0.0
    },
    "TimerManager.MaxExpiredTimersToLog": {
        "description": "Maximum number of TimerData exceeding the threshold to log in a single frame.",
        "value": 30.0
    },
    "ToggleForceDefaultMaterial": {
        "command": true,
        "description": "Render all meshes with the default material."
    },
    "ToggleLight": {
        "command": true,
        "description": "Toggles all lights whose name contains the specified string"
    },
    "ToggleLightmapPreview": {
        "command": true,
        "description": "Toggles lightmap preview in editor"
    },
    "ToggleReversedIndexBuffers": {
        "command": true,
        "description": "Render static meshes with negative transform determinants using a reversed index buffer."
    },
    "ToggleShadowIndexBuffers": {
        "command": true,
        "description": "Render static meshes with an optimized shadow index buffer that minimizes unique vertices."
    },
    "UMG.FlushAnimationsAtEndOfFrame": {
        "description": "Whether to automatically flush any outstanding animations at the end of the frame, or just wait until next frame.",
        "value": 1.0
    },
    "Widget.DumpTemplateSizes": {
        "command": true,
        "description": "Dump the sizes of all widget class templates in memory"
    },
    "Widget.MaxAnimationLatentActions": {
        "description": "Defines the maximum number of latent actions that can be run in one frame.",
        "value": 100.0
    },
    "Widget.UseParallelAnimation": {
        "description": "Use multi-threaded evaluation for widget animations.",
        "value": 1.961817850054744e-44
    },
    "a.AnimNode.AimOffsetLookAt.Debug": {
        "description": "Toggle LookAt AimOffset debug",
        "value": 0.0
    },
    "a.AnimNode.AimOffsetLookAt.Enable": {
        "description": "Enable/Disable LookAt AimOffset",
        "value": 1.0
    },
    "a.AnimNode.Inertialization.Enable": {
        "description": "Enable / Disable Inertialization",
        "value": 1.0
    },
    "a.AnimNode.Inertialization.IgnoreDeficit": {
        "description": "Ignore inertialization time deficit caused by interruptions",
        "value": 0.0
    },
    "a.AnimNode.Inertialization.IgnoreVelocity": {
        "description": "Ignore velocity information during Inertialization (effectively reverting to a quintic diff blend)",
        "value": 0.0
    },
    "a.AnimNode.LegIK.AveragePull": {
        "description": "Leg IK AveragePull",
        "value": 1.0
    },
    "a.AnimNode.LegIK.Enable": {
        "description": "Toggle LegIK node.",
        "value": 1.0
    },
    "a.AnimNode.LegIK.EnableTwoBone": {
        "description": "Enable Two Bone Code Path.",
        "value": 1.0
    },
    "a.AnimNode.LegIK.MaxIterations": {
        "description": "Leg IK MaxIterations override. 0 = node default, > 0 override.",
        "value": 0.0
    },
    "a.AnimNode.LegIK.PullDistribution": {
        "description": "Leg IK PullDistribution. 0 = foot, 0.5 = balanced, 1.f = hip",
        "value": 0.5
    },
    "a.AnimNode.LegIK.TargetReachStepPercent": {
        "description": "Leg IK TargetReachStepPercent.",
        "value": 0.699999988079071
    },
    "a.AnimNode.StateMachine.EnableRelevancyReset": {
        "description": "Reset State Machine when it becomes relevant",
        "value": 1.0
    },
    "a.DebugDrawBoneAxes": {
        "description": "When drawing bones (using Show Bones), draw bone axes.",
        "value": 0.0
    },
    "a.DebugDrawSimpleBones": {
        "description": "When drawing bones (using Show Bones), draw bones as simple lines.",
        "value": 0.0
    },
    "a.ForceParallelAnimUpdate": {
        "description": "If != 0, then we update animations on worker threads regardless of the setting on the project or anim blueprint.",
        "value": 0.0
    },
    "a.ParallelAnimEvaluation": {
        "description": "If 1, animation evaluation will be run across the task graph system. If 0, evaluation will run purely on the game thread",
        "value": 1.0
    },
    "a.ParallelAnimInterpolation": {
        "description": "If 1, animation interpolation will be run across the task graph system. If 0, interpolation will run purely on the game thread",
        "value": 1.0
    },
    "a.ParallelAnimUpdate": {
        "description": "If != 0, then we update animation blend tree, native update, asset players and montages (is possible) on worker threads.",
        "value": 1.0
    },
    "a.ParallelBlendPhysics": {
        "description": "If 1, physics blending will be run across the task graph system. If 0, blending will run purely on the game thread",
        "value": 1.0
    },
    "a.Sharing.DebugStates": {
        "description": "Values: 0/1/2/3\nControls whether and which animation sharing debug features are enabled.\n0: Turned off.\n1: Turns on active master-components and blend with material coloring, and printing state information for each actor above their capsule.\n2: Turns printing state information about currently active animation states, blend etc. Also enables line drawing from slave-components to currently assigned master components.",
        "value": 0.0
    },
    "a.Sharing.Enabled": {
        "command": true,
        "description": "Arguments: 0/1\nControls whether the animation sharing is enabled."
    },
    "a.SkinWeightProfile.AllowedFromLOD": {
        "description": "Override LOD index from which on the Skin Weight Profile can be applied",
        "value": -1.0
    },
    "a.SkinWeightProfile.DefaultLODOverride": {
        "description": "Override LOD index from which on the default Skin Weight Profile should override the Skeletal Mesh's default Skin Weights",
        "value": -1.0
    },
    "a.SkinWeightProfile.LoadByDefaultMode": {
        "description": "Enables/disables run-time optimization to override the original skin weights with a profile designated as the default to replace it. Can be used to optimize memory for specific platforms or devices-1 = disabled0 = static disabled1 = static enabled2 = dynamic disabled3 = dynamic enabled",
        "value": -1.0
    },
    "a.Streaming.ChunkSizeSeconds": {
        "description": "Size of streaming animation chunk in seconds, 0 or negative signifies only have 1 chunk",
        "value": 4.0
    },
    "a.Streaming.SpoofFailedChunkLoad": {
        "description": "Forces failing to load streamed animation chunks.\n0: Not Enabled, 1: Enabled",
        "value": 0.0
    },
    "a.StripFramesOnCompression": {
        "description": "1 = Strip every other frame on animations that have an even number of frames. 0 = off",
        "value": 0.0
    },
    "a.StripOddFramesWhenFrameStripping": {
        "description": "1 = When frame stripping apply to animations with an odd number of frames too. 0 = only even framed animations",
        "value": 0.0
    },
    "a.URO.DisableInterpolation": {
        "description": "Set to 1 to disable interpolation",
        "value": 0.0
    },
    "a.URO.Draw": {
        "description": "True to draw color coded boxes for anim rate.",
        "value": 0.0
    },
    "a.URO.Enable": {
        "description": "True to anim rate optimization.",
        "value": 1.0
    },
    "a.URO.ForceAnimRate": {
        "description": "Non-zero to force anim rate. 10 = eval anim every ten frames for those meshes that can do it. In some cases a frame is considered to be 30fps.",
        "value": 0.0
    },
    "a.URO.ForceInterpolation": {
        "description": "Set to 1 to force interpolation",
        "value": 0.0
    },
    "a.VisualizeLODs": {
        "description": "Visualize SkelMesh LODs",
        "value": 0.0
    },
    "ai.NavCollisionAvailable": {
        "description": "If set to 0 NavCollision won't be cooked and will be unavailable at runtime.\n",
        "value": 1.0
    },
    "ai.crowd.DebugSelectedActors": {
        "description": "Enable debug drawing for selected crowd agent.\n0: Disable, 1: Enable",
        "value": 0.0
    },
    "ai.crowd.DebugVisLog": {
        "description": "Enable detailed vislog recording for all crowd agents.\n0: Disable, 1: Enable",
        "value": 0.0
    },
    "ai.crowd.DrawDebugBoundaries": {
        "description": "Draw shared navmesh boundaries used by crowd simulation.\n0: Disable, 1: Enable",
        "value": 0.0
    },
    "ai.crowd.DrawDebugCollisionSegments": {
        "description": "Draw colliding navmesh edges, requires ai.crowd.DebugSelectedActors.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "ai.crowd.DrawDebugCorners": {
        "description": "Draw path corners data, requires ai.crowd.DebugSelectedActors.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "ai.crowd.DrawDebugNeighbors": {
        "description": "Draw current neighbors data, requires ai.crowd.DebugSelectedActors.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "ai.crowd.DrawDebugPath": {
        "description": "Draw active paths, requires ai.crowd.DebugSelectedActors.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "ai.crowd.DrawDebugPathOptimization": {
        "description": "Draw path optimization data, requires ai.crowd.DebugSelectedActors.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "ai.crowd.DrawDebugVelocityObstacles": {
        "description": "Draw velocity obstacle sampling, requires ai.crowd.DebugSelectedActors.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "ar.FaceComponentDebugMode": {
        "description": "Debug mode for AR face component, see EFaceComponentDebugMode",
        "value": 0.0
    },
    "ar.GeoAnchorComponentDebugMode": {
        "description": "Debug mode for AR Geo anchor component, see EGeoAnchorComponentDebugMode",
        "value": 0.0
    },
    "ar.ImageComponentDebugMode": {
        "description": "Debug mode for AR image component, see EImageComponentDebugMode",
        "value": 0.0
    },
    "ar.PlaneComponentDebugMode": {
        "description": "Debug mode for AR plane component, see EPlaneComponentDebugMode",
        "value": 0.0
    },
    "ar.PoseComponentDebugMode": {
        "description": "Debug mode for AR pose component, see EPoseComponentDebugMode",
        "value": 0.0
    },
    "ar.QRCodeComponentDebugMode": {
        "description": "Debug mode for AR QR code component, see EQRCodeComponentDebugMode",
        "value": 0.0
    },
    "au.3dVisualize.Enabled": {
        "description": "Whether or not audio visualization is enabled. \n0: Not Enabled, 1: Enabled",
        "value": 0.0
    },
    "au.AllowAudioSpatialization": {
        "description": "Controls if we allow spatialization of audio, normally this is enabled.  If disabled all audio won't be spatialized, but will have attenuation.\n0: Disable, >0: Enable",
        "value": 1.0
    },
    "au.AllowReverbForMultichannelSources": {
        "description": "Controls if we allow Reverb processing for sources with channel counts > 2.\n0: Disable, >0: Enable",
        "value": 1.0
    },
    "au.AllowUnsafeAudioMixerToggling": {
        "description": "If set to 1, will allow au.IsUsingAudioMixer to swap out the audio engine, even if there are systems in the world currently using the audio engine. \n0: disable usage of au.IsUsingAudioMixer when the audio device is actively in use, 1: enable usage of au.IsUsingAudioMixer.",
        "value": 0.0
    },
    "au.Ambisonics.VirtualIntermediateChannels": {
        "description": "Enables decoding to a virtual 7.1 speaker config before mixdown.\n0: Decode directly to output device configuration, 1: Enabled",
        "value": 1.0
    },
    "au.AnalysisTimeShift": {
        "description": "Shifts the timeline for baked analysis playback.\nValue: The time in seconds to shift the timeline.",
        "value": 0.0
    },
    "au.BakedAnalysisEnabled": {
        "description": "Enables or disables queries to baked analysis from audio component.\n",
        "value": 1.0
    },
    "au.BypassAllSubmixEffects": {
        "description": "When set to 1, all submix effects will be bypassed.\n1: Submix Effects are disabled.",
        "value": 0.0
    },
    "au.BypassAudioPlugins": {
        "description": "Bypasses any audio plugin processing.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.BypassPlayWhenSilent": {
        "description": "When set to 1, ignores the Play When Silent flag for non-procedural sources.\n0: Honor the Play When Silent flag, 1: stop all silent non-procedural sources.",
        "value": 0.0
    },
    "au.CommandBufferFlushWaitTimeMs": {
        "description": "How long to wait for the command buffer flush to complete.\n",
        "value": 1000.0
    },
    "au.Concurrency.MinVolumeScale": {
        "description": "Volume threshold considered silent for volume scaling (linear scale).\n",
        "value": 0.0010000000474974513
    },
    "au.DecompressionThreshold": {
        "description": "If non-zero, overrides the decompression threshold set in either the sound group or the platform's runtime settings.\nValue: Maximum duration we should fully decompress, in seconds.",
        "value": 0.0
    },
    "au.DefaultModulationPlugin": {
        "description": "Name of default modulation plugin to load and use (overridden by platform-specific implementation name in config.\n",
        "value": 0.0
    },
    "au.DisableADPCMSeekLock": {
        "description": "Disables ADPCM seek crit section fix for multiple seek requests per frame.\n",
        "value": 0.0
    },
    "au.DisableAppVolume": {
        "description": "Disables application volume when set to 1.\n0: App volume enabled, 1: App volume disabled",
        "value": 0.0
    },
    "au.DisableAutomaticPrecache": {
        "description": "When set to 1, this disables precaching on load or startup, it will only precache synchronously when playing.\n0: Use normal precaching logic, 1: disables all precaching except for synchronous calls.",
        "value": 0.0
    },
    "au.DisableBinauralSpatialization": {
        "description": "Disables binaural spatialization.\n",
        "value": 0.0
    },
    "au.DisableDeviceSwap": {
        "description": "Disable device swap handling code for Audio Mixer on Windows.\n0: Not Enabled, 1: Enabled",
        "value": 0.0
    },
    "au.DisableDistanceAttenuation": {
        "description": "Disables using any Distance Attenuation.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableEnvelopeFollowing": {
        "description": "Disables using the envlope follower for source envelope tracking.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableFiltering": {
        "description": "Disables using the per-source lowpass and highpass filter.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableHPFiltering": {
        "description": "Disables using the per-source highpass filter.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableLegacyReverb": {
        "description": "Disables reverb on legacy audio backends.\n0: Enabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableMotoSynth": {
        "description": "Disables the moto synth.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableOcclusion": {
        "description": "Disables (1) or enables (0) audio occlusion.\n",
        "value": 0.0
    },
    "au.DisableParallelSourceProcessing": {
        "description": "Disables using async tasks for processing sources.\n0: Not Disabled, 1: Disabled",
        "value": 1.0
    },
    "au.DisableQuadReverb": {
        "description": "Disables quad reverb in surround.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableReverbSubmix": {
        "description": "Disables the reverb submix.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableSourceEffects": {
        "description": "Disables using any source effects.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableStereoSpread": {
        "description": "When set to 1, ignores the 3D Stereo Spread property in attenuation settings and instead renders audio from a singular point.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableStoppingVoices": {
        "description": "Disables stopping voices feature.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.DisableSubmixEffectEQ": {
        "description": "Disables the eq submix.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.EnableBinauralAudioForAllSpatialSounds": {
        "description": "Toggles binaural audio rendering for all spatial sounds if binaural rendering is available.\n",
        "value": 0.0
    },
    "au.EnableDetailedWindowsDeviceLogging": {
        "description": "Enables detailed windows device logging.\n0: Not Enabled, 1: Enabled",
        "value": 0.0
    },
    "au.EnableOcclusionFilterScale": {
        "description": "Whether or not we scale occlusion by 0.25f to compensate for change in filter cutoff frequencies in audio mixer. \n0: Not Enabled, 1: Enabled",
        "value": 0.0
    },
    "au.EnableReverbStereoFlipForQuad": {
        "description": "Enables doing a stereo flip for quad reverb when in surround.\n0: Not Enabled, 1: Enabled",
        "value": 0.0
    },
    "au.ExtraAudioMixerDeviceLogging": {
        "description": "Enables extra logging for audio mixer device running \n0: no logging, 1: logging every 500 callbacks \n",
        "value": 0.0
    },
    "au.FadeOutTimeoutMSec": {
        "description": "Amount of time to wait for the FadeOut Event to fire. \n",
        "value": 2000.0
    },
    "au.FlushAudioRenderCommandsOnSuspend": {
        "description": "When set to 1, ensures that we pump through all pending commands to the audio thread and audio render thread on app suspension.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.FlushAudioRenderThreadOnGC": {
        "description": "When set to 1, every time the GC runs, we flush all pending audio render thread commands.\n",
        "value": 0.0
    },
    "au.FlushCommandBufferOnTimeout": {
        "description": "When set to 1, flushes audio render thread synchronously when our fence has timed out.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.ForceRealtimeDecompression": {
        "description": "When set to 1, this deliberately ensures that all audio assets are decompressed as they play, rather than fully on load.\n0: Allow full decompression on load, 1: force realtime decompression.",
        "value": 0.0
    },
    "au.ForceSyncAudioDecodes": {
        "description": "Disables using async tasks for processing sources.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.IsUsingAudioMixer": {
        "description": "Whether or not we're currently using the audio mixer. Change to dynamically toggle on/off. This will only take effect if an audio device is currently not in use, unless au.AllowUnsafeAudioMixerToggling is set to 1. Note: sounds will stop. Looping sounds won't automatically resume. \n0: Not Using Audio Mixer, 1: Using Audio Mixer",
        "value": 1.0
    },
    "au.LinearGainScalarForFinalOutut": {
        "description": "Linear gain scalar applied to the final float buffer to allow for hotfixable mitigation of clipping \nDefault is 1.0f \n",
        "value": 1.0
    },
    "au.LogRenderTimes": {
        "description": "Logs Audio Render Times.\n0: Not Log, 1: Log",
        "value": 0.0
    },
    "au.MaxConcurrentStreams": {
        "description": "Overrides the max concurrent streams.\n0: Not Overridden, >0 Overridden",
        "value": 0.0
    },
    "au.MaxRandomBranches": {
        "description": "Sets the max amount of branches to play from for any random node. The rest of the branches will be released from memory.\n0: No culling, Any other value: The amount of branches we should use as a maximum for any random node.",
        "value": 0.0
    },
    "au.MinLogTimeBetweenUnderrunWarnings": {
        "description": "Min time between underrun warnings (globally) in MS\nSet the time between each subsequent underrun log warning globaly (defaults to 10secs)",
        "value": 10000.0
    },
    "au.Modulation.SetPitchRange": {
        "command": true,
        "description": "Sets max final modulation range of pitch (in semitones). Default: 96 semitones (+/- 4 octaves)"
    },
    "au.NeverMuteNonRealtimeAudioDevices": {
        "description": "When set to 1, nonrealtime audio devices will be exempt from normal audio device muting (for example, when a window goes out of focus.\n0: Not Disabled, 1: Disabled",
        "value": 0.0
    },
    "au.NumPrecacheFrames": {
        "description": "When set to > 0, will use that value as the number of frames to precache audio buffers with.\n0: Use default value for precache frames, >0: Number of frames to precache.",
        "value": 0.0
    },
    "au.OverrunTimeoutMSec": {
        "description": "Amount of time to wait for the render thread to time out before swapping to the null device. \n",
        "value": 1000.0
    },
    "au.Quartz.MaxSubscribersToUpdatePerTick": {
        "description": "Limits the number of Quartz subscribers to update per Tick.\n<= 0: No Limit, >= 1: Limit",
        "value": -1.0
    },
    "au.RealtimeDecompressZeroDurationSounds": {
        "description": "When set to 1, we will fallback to realtime decoding any sound waves with an invalid duration..\n0: Fully decompress sounds with a duration of 0, 1: realtime decompress sounds with a duration of 0.",
        "value": 0.0
    },
    "au.RecoverRecordingOnShutdown": {
        "description": "When set to 1, we will attempt to bounce the recording to a wav file if the game is shutdown while a recording is in flight.\n0: Disabled, 1: Enabled",
        "value": 0.0
    },
    "au.RenderThreadPriority": {
        "description": "Sets audio render thread priority. Defaults to 3.\n0: Normal, 1: Above Normal, 2: Below Normal, 3: Highest, 4: Lowest, 5: Slightly Below Normal, 6: Time Critical",
        "value": 0.0
    },
    "au.ReportAudioDevices": {
        "command": true,
        "description": "This will log any active audio devices (instances of the audio engine) alive right now."
    },
    "au.SetAudioChannelCount": {
        "description": "Changes the audio channel count. Max value is clamped to the MaxChannelCount the audio engine was initialize with.\n0: Disable, >0: Enable",
        "value": 0.0
    },
    "au.SetAudioChannelScaleCount": {
        "description": "Changes the audio channel count by percentage.\n",
        "value": 1.0
    },
    "au.SoundDistanceOptimizationLength": {
        "description": "The maximum duration a sound must be in order to be a candidate to be culled due to one-shot distance optimization.\n",
        "value": 1.0
    },
    "au.SpamCommandQueue": {
        "command": true,
        "description": ""
    },
    "au.SpoofFailedStreamChunkLoad": {
        "description": "Forces failing to load streamed chunks.\n0: Not Enabled, 1: Enabled",
        "value": 0.0
    },
    "au.UnderrunTimeoutMSec": {
        "description": "Amount of time to wait for the render thread to generate the next buffer before submitting an underrun buffer. \n",
        "value": 5.0
    },
    "au.UseListenerOverrideForSpread": {
        "description": "Zero attenuation override distance stereo panning\n0: Use actual distance, 1: use listener override",
        "value": 0.0
    },
    "au.VirtualLoops.Enabled": {
        "description": "Enables or disables whether virtualizing is supported for audio loops.\n",
        "value": 1.0
    },
    "au.VirtualLoops.ForceUpdateListenerMoveDistance": {
        "description": "Sets distance threshold required to force an update to check for virtualized sounds to realize if listener moves in a single frame over the given distance.\n",
        "value": 2500.0
    },
    "au.VirtualLoops.PerfDistance": {
        "description": "Sets virtual loop distance to scale update rate between min and max beyond max audible distance of sound.\n",
        "value": 15000.0
    },
    "au.VirtualLoops.UpdateRate.Max": {
        "description": "Sets maximum rate to check if sound becomes audible again (at beyond sound's max audible distance + perf scaling distance).\n",
        "value": 3.0
    },
    "au.VirtualLoops.UpdateRate.Min": {
        "description": "Sets minimum rate to check if sound becomes audible again at sound's max audible distance.\n",
        "value": 0.10000000149011612
    },
    "au.WaitForSoundWaveToLoad": {
        "description": "When set to 1, we will refuse to play any sound unless the USoundWave has been loaded.\n0: Attempt to play back, 1: Wait for load.",
        "value": 1.0
    },
    "au.adpcm.ADPCMReadFailiureTimeout": {
        "description": "Sets the number of ADPCM decode attempts we'll try before stopping the sound wave altogether.\n",
        "value": 64.0
    },
    "au.adpcm.ChanceForIntentionalChunkMiss": {
        "description": "If this is set > 0 we will intentionally drop chunks. Used for debugging..\n",
        "value": 0.0
    },
    "au.adpcm.DisableSeekForwardOnReadMisses": {
        "description": "When there is a seek pending and this CVar is set to 0, we will scan forward in the file.\n",
        "value": 1.0
    },
    "au.adpcm.DisableSeeking": {
        "description": "Disables seeking with ADPCM.\n",
        "value": 0.0
    },
    "au.adpcm.OnlySeekForwardOneChunk": {
        "description": "When set to 1, we will not continue to seek forward after failing to load two chunks in a row.\n",
        "value": 1.0
    },
    "au.dsp.FFTMethod": {
        "description": "Determines whether we use an iterative FFT method or the DFT.\n0: Use Iterative FFT, 1:: Use DFT",
        "value": 0.0
    },
    "au.editor.CookOverrideCachingInterval": {
        "description": "This sets the max latency between when a cook override is changed in the project settings and when it is applied to new audio sources.\nn: Time between caching intervals, in seconds.",
        "value": 1.0
    },
    "au.editor.ForceAudioNonStreaming": {
        "description": "When set to 1, forces any audio played to be non-streaming May force a DDC miss.\n0: Honor the Play When Silent flag, 1: stop all silent non-procedural sources.",
        "value": 0.0
    },
    "au.motosynth.enablebitcrush": {
        "description": "Bit crushes moto synth source data to 8 bytes when registered to data manager.\n0: Disable, >0: Enable",
        "value": 0.0
    },
    "au.motosynth.enablememorylogging": {
        "description": "Enables logging of memory usage whenever new sources are registered and unregistered.\n0: Disable, >0: Enable",
        "value": 0.0
    },
    "au.motosynth.logmemory": {
        "command": true,
        "description": "Logs all memory used by moto synth right now."
    },
    "au.nrt.RenderEveryTick": {
        "description": "When set to 1, calls the RenderAudio call every tick.\nn: Number of frames to render.",
        "value": 1.0
    },
    "au.nrt.RenderFrameSize": {
        "description": "Selects the number of frames to render in a single callback .\nn: Number of frames to render.",
        "value": 256.0
    },
    "au.streamcache.BlockOnChunkLoadCompletion": {
        "description": "When set to 1, USoundWaves we will always attempt to synchronously load a chunk after a USoundWave request has finished.\n0: Don't try to block after a SoundWave has completed loading a chunk, 1: Block after a USoundWave's chunk request has completed.",
        "value": 0.0
    },
    "au.streamcache.DisableRetaining": {
        "description": "When set to 1, USoundWaves will not retain chunks of their own audio.\n0: Don't disable retaining, 1: retaining.",
        "value": 0.0
    },
    "au.streamcache.DispatchToGameThreadOnChunkRequest": {
        "description": "When set to 1, we will always dispatch a callback to the game thread whenever a USoundWave request has finished. This may cause chunks of audio to be evicted by the time we need them.\n0: as soon as the chunk is loaded, capture the audio chunk. 1: As soon as the chunk is loaded, dispatch a callback to the gamethread.",
        "value": 1.0
    },
    "au.streamcache.SoundWaveDefaultLoadingBehavior": {
        "description": "This can be set to define the default behavior when a USoundWave is loaded.\n0: Default (load on demand), 1: Retain audio data on load, 2: prime audio data on load, 3: load on demand (No audio data is loaded until a USoundWave is played or primed).",
        "value": 0.0
    },
    "au.streamcache.priming.BypassRetainFromSoundCues": {
        "description": "When set to 1, we ignore the loading behavior of sound classes set on a Sound Cue directly.\n",
        "value": 0.0
    },
    "au.streamcache.priming.PrimeDelayNodes": {
        "description": "When set to 1, sounds will be loaded into the cache automatically when a delay node is hit.\n",
        "value": 0.0
    },
    "au.streamcache.priming.PrimeRandomNodes": {
        "description": "When set to 1, sounds will be loaded into the cache automatically when a random node is hit.\n",
        "value": 0.0
    },
    "au.streamcaching.AlwaysLogCacheMisses": {
        "description": "when set to a nonzero value, all cache misses will be added to the audiomemreport.\n0: Don't log cache misses until au.streamcaching.StartProfiling is called. 1: Always log cache misses.",
        "value": 0.0
    },
    "au.streamcaching.BlockForPendingLoadOnCacheOverflow": {
        "description": "This cvar sets the default request priority for audio chunks that are about to play back but aren't in the cache.\n0: when we blow the cache we clear any soundwave retainers. 1: when we blow the cache we attempt to cancel a load in flight.",
        "value": 0.0
    },
    "au.streamcaching.ChunkSlotNumScalar": {
        "description": "This allows scaling the number of chunk slots pre-allocated.\n1.0: is the lower limit",
        "value": 1.0
    },
    "au.streamcaching.EnableTrimmingRetainedAudio": {
        "description": "When set > 0, we will trim retained audio when the stream cache goes over the memory limit.\n0: never trims retained audio, >0: will trim retained audio.",
        "value": 1.0
    },
    "au.streamcaching.FlushAudioCache": {
        "command": true,
        "description": "This will flush any non retained audio from the cache when Stream Caching is enabled."
    },
    "au.streamcaching.ForceBlockForLoad": {
        "description": "when set to a nonzero value, blocks GetLoadedChunk until the disk read is complete.\nn: Number of elements to display on screen.",
        "value": 0.0
    },
    "au.streamcaching.KeepCacheMissBufferOnFlush": {
        "description": "IF set to 1, this will maintain the buffer of recorded cache misses after calling AudioMemReport. Otherwise, calling audiomemreport will flush all previous recorded cache misses.\n1: All cache misses from the  whole session will show up in audiomemreport. 0: Only cache misses since the previous call to audiomemreport will show up in the current audiomemreport.",
        "value": 1.0
    },
    "au.streamcaching.MaxCachesToDisplay": {
        "description": "Sets the max amount of stream chunks to display on screen.\nn: Number of elements to display on screen.",
        "value": 128.0
    },
    "au.streamcaching.MemoryLimitTrimPercentage": {
        "description": "When set > 0.0, we will trim percentage of memory cache audio per trim call audio when the stream cache goes over the memory limit.\n0.0: trims only the amount needed to allocate a single chunk, >0: that percentage of memory limit.",
        "value": 0.10000000149011612
    },
    "au.streamcaching.MinimumCacheUsage": {
        "description": "This value is the minimum potential usage of the stream cache we feasibly want to support. Setting this to 0.25, for example, cause us to potentially be using 25% of our cache size when we start evicting chunks, worst cast scenario.\n0.0: limit the number of chunks to our (Cache Size / Max Chunk Size) [0.01-0.99]: Increase our number of chunks to limit disk IO when we have lots of small sounds playing.",
        "value": 0.8999999761581421
    },
    "au.streamcaching.NumSoundWavesToClearOnCacheOverflow": {
        "description": "When set > 0, we will attempt to release retainers for only that many sounds every time we have a cache overflow.\n0: reset all retained sounds on cache overflow, >0: evict this many sounds on any cache overflow.",
        "value": 0.0
    },
    "au.streamcaching.PlaybackRequestPriority": {
        "description": "This cvar sets the default request priority for audio chunks that are about to play back but aren't in the cache.\n0: High, 1: Normal, 2: Below Normal, 3: Low, 4: Min",
        "value": 0.0
    },
    "au.streamcaching.PrimeSoundOnAudioComponents": {
        "description": "When set to 1, automatically primes a USoundBase when a UAudioComponent is spawned with that sound, or when UAudioComponent::SetSound is called.\nValue: The time in seconds to shift the timeline.",
        "value": 0.0
    },
    "au.streamcaching.ReadRequestPriority": {
        "description": "This cvar sets the default request priority for audio chunks when Stream Caching is turned on.\n0: High, 1: Normal, 2: Below Normal, 3: Low, 4: Min",
        "value": 2.0
    },
    "au.streamcaching.ResizeAudioCacheTo": {
        "command": true,
        "description": "This will try to cull enough audio chunks to shrink the audio stream cache to the new size if neccessary, and keep the cache at that size."
    },
    "au.streamcaching.SaveAudiomemReportOnCacheOverflow": {
        "description": "When set to one, we print an audiomemreport when the cache has overflown.\n0: Disabled, 1: Enabled",
        "value": 0.0
    },
    "au.streamcaching.StartProfiling": {
        "command": true,
        "description": "This will start a performance-intensive profiling mode for this streaming manager. Profile stats can be output with audiomemreport."
    },
    "au.streamcaching.StopProfiling": {
        "command": true,
        "description": "This will start a performance-intensive profiling mode for this streaming manager. Profile stats can be output with audiomemreport."
    },
    "au.streamcaching.StreamCacheSizeOverrideMB": {
        "description": "This cvar can be set to override the size of the cache.\n0: use cache size from project settings. n: the new cache size in megabytes.",
        "value": 0.0
    },
    "au.streamcaching.TrimCacheWhenOverBudget": {
        "description": "when set to a nonzero value, TrimMemory will be called in AddOrTouchChunk to ensure we never go over budget.\nn: Number of elements to display on screen.",
        "value": 1.0
    },
    "au.streamcaching.UseObjectKeyInChunkKeyComparisons": {
        "description": "Enables the comparison of FObjectKeys when comparing Stream Cache Chunk Keys.  Without this FName collisions could occur if 2 SoundWaves have the same name.\n1: (default) Compare object keys.  0: Do not compare object keys.",
        "value": 1.0
    },
    "au.submix.clearbrokensubmixassets": {
        "description": "If fixed, will verify that we don't have a submix list a child submix that doesn't have it as it's parent, or vice versa.\n0: Disable, >0: Enable",
        "value": 0.0
    },
    "au.voip.AlwaysPlayVoiceComponent": {
        "description": "When set to 1, guarantees that voip components won't get deprioritized. \n0: Let voip components get killed, 1: force VOIP components to be higher priority than all other audio sources.",
        "value": 1.0
    },
    "au.vorbis.ReadFailiureTimeout": {
        "description": "When set to 1, we bail on decoding Ogg Vorbis sounds if we were not able to successfully decode them after several attempts.\n",
        "value": 1.0
    },
    "backchannel.logerrors": {
        "description": "Logs packet errors",
        "value": 1.0
    },
    "backchannel.logpackets": {
        "description": "Logs incoming packets",
        "value": 0.0
    },
    "bp.ComponentInstancingFastPathDisabled": {
        "description": "Disable the Blueprint component instancing fast path.",
        "value": 0.0
    },
    "bp.VerboseStats": {
        "description": "Create additional stats for Blueprint execution.\n",
        "value": 0.0
    },
    "c.ToggleGPUCrashedFlagDbg": {
        "command": true,
        "description": "Forcibly toggles the 'GPU Crashed' flag for testing crash analytics."
    },
    "con.DebugEarlyCheat": {
        "description": "IAmNoRealVariable",
        "value": 1.0
    },
    "con.DebugEarlyDefault": {
        "description": "IAmNoRealVariable",
        "value": 1.0
    },
    "con.DebugLateCheat": {
        "description": "IAmNoRealVariable",
        "value": 1.0
    },
    "con.DebugLateDefault": {
        "description": "IAmNoRealVariable",
        "value": 1.0
    },
    "con.MinLogVerbosity": {
        "description": "Allows to see the log in the in game console (by default deactivated to avoid spam and minor performance loss).\n 0: no logging other than console response (default)\n 1: Only fatal errors (no that useful)\n 2: additionally errors\n 3: additionally warnings\n 4: additionally display\n 5: additionally log\n..\n>=7: all",
        "value": 0.0
    },
    "console.position.enable": {
        "description": "Enable custom console positioning \n",
        "value": 0.0
    },
    "console.position.x": {
        "description": "Console X offset from left border \n",
        "value": 0.0
    },
    "console.position.y": {
        "description": "Console Y offset from bottom border \n",
        "value": 0.0
    },
    "cook.AllowCookedDataInEditorBuilds": {
        "description": "If true, allows cooked assets to be loaded in the editor.",
        "value": 0.0
    },
    "crn.quality": {
        "description": "Set the quality of the crunch texture compression. [0, 255], default: 128",
        "value": 128.0
    },
    "csv.BlockOnCaptureEnd": {
        "description": "When 1, blocks the game thread until the CSV file has been written completely when the capture is ended.\r\nWhen 0, the game thread is not blocked whilst the file is written.",
        "value": 1.0
    },
    "csv.CompressionMode": {
        "description": "Controls whether CSV files are compressed when written out.\r\n -1 = (Default) Use compression if the code which started the capture opted for it.\r\n  0 = Force disable compression. All files will be written as uncompressed .csv files.\r\n  1 = Force enable compression. All files will be written as compressed .csv.gz files.",
        "value": -1.0
    },
    "csv.ContinuousWrites": {
        "description": "When 1, completed CSV rows are converted to CSV format strings and appended to the write buffer whilst the capture is in progress.\r\nWhen 0, CSV rows are accumulated in memory as binary data, and only converted to strings and flushed to disk at the end of the capture.",
        "value": 0.0
    },
    "csv.Shipping.ContinuousWrites": {
        "description": "Only applies in shipping buids. If set, overrides csv.ContinousWrites.",
        "value": -1.0
    },
    "csv.WriteBufferSize": {
        "description": "When non-zero, defines the size of the write buffer to use whilst writing the CSV file.\r\nA non-zero value is required for GZip compressed output.",
        "value": 131072.0
    },
    "csv.statCounts": {
        "description": "If 1, outputs count stats",
        "value": 0.0
    },
    "d3d11.ZeroBufferSizeInMB": {
        "description": "The D3D11 RHI needs a static allocation of zeroes to use when streaming textures asynchronously. It should be large enough to support the largest mipmap you need to stream. The default is 4MB.",
        "value": 4.0
    },
    "d3d12.FastAllocator.MinPagesToRetain": {
        "description": "Minimum number of pages to retain. Pages below this limit will never be released. Pages above can be released after being unused for a certain number of frames.",
        "value": 5.0
    },
    "d3d12.ReadOnlyTextureAllocator.MaxPoolSize": {
        "description": "Maximum allocation granularity (in bytes) of each size list",
        "value": 20971520.0
    },
    "d3d12.ReadOnlyTextureAllocator.MinNumToPool": {
        "description": "Texture pool of each size list must be large enough to store thismany textures unless constrained by maximum allocation granularity",
        "value": 8.0
    },
    "d3d12.ReadOnlyTextureAllocator.MinPoolSize": {
        "description": "Minimum allocation granularity (in bytes) of each size list",
        "value": 4194304.0
    },
    "demo.AsyncLoadWorld": {
        "description": "If 1, we will use seamless server travel to load the replay world asynchronously",
        "value": 0.0
    },
    "demo.CheckpointSaveMaxMSPerFrameOverride": {
        "description": "If >= 0, this value will override the CheckpointSaveMaxMSPerFrame member variable, which is the maximum time allowed each frame to spend on saving a checkpoint. If 0, it will save the checkpoint in a single frame, regardless of how long it takes.",
        "value": -1.0
    },
    "demo.CheckpointUploadDelayInSeconds": {
        "description": "",
        "value": 30.0
    },
    "demo.ClientRecordAsyncEndOfFrame": {
        "description": "If true, TickFlush will be called on a thread in parallel with Slate.",
        "value": 0.0
    },
    "demo.CullDistanceOverride": {
        "description": "If > 0, will represent distance from any viewer where actors will stop being recorded.",
        "value": 0.0
    },
    "demo.DecreaseRepPrioritizeThreshold": {
        "description": "The % of Replicated to Prioritized actors at which prioritize time will be increased.",
        "value": 0.699999988079071
    },
    "demo.EnableCheckpoints": {
        "description": "Whether or not checkpoints save on the server",
        "value": 1.0
    },
    "demo.FastForwardDestroyTearOffActors": {
        "description": "If true, the driver will destroy any torn-off actors immediately while fast-forwarding a replay.",
        "value": 1.0
    },
    "demo.FastForwardIgnoreRPCs": {
        "description": "If true, RPCs will be discarded during playback fast forward.",
        "value": 1.0
    },
    "demo.FastForwardLevelsPausePlayback": {
        "description": "If true, pause channels and playback while fast forward levels task is running.",
        "value": 0.0
    },
    "demo.FastForwardSkipRepNotifies": {
        "description": "If true, the driver will optimize fast-forwarding by deferring calls to RepNotify functions until the fast-forward is complete. ",
        "value": 1.0
    },
    "demo.ForceDisableAsyncPackageMapLoading": {
        "description": "If true, async package map loading of network assets will be disabled.",
        "value": 0.0
    },
    "demo.GotoTimeInSeconds": {
        "description": "For testing only, jump to a particular time",
        "value": -1.0
    },
    "demo.IncreaseRepPrioritizeThreshold": {
        "description": "The % of Replicated to Prioritized actors at which prioritize time will be decreased.",
        "value": 0.8999999761581421
    },
    "demo.InternalPauseChannels": {
        "description": "If true, run standard logic for PauseChannels rather than letting the game handle it via FOnPauseChannelsDelegate.",
        "value": 1.0
    },
    "demo.JumpToEndOfLiveReplay": {
        "description": "If true, fast forward to a few seconds before the end when starting playback, if the replay is still being recorded.",
        "value": 1.0
    },
    "demo.LateActorDormancyCheck": {
        "description": "If true, check if an actor should become dormant as late as possible- when serializing it to the demo archive.",
        "value": 1.0
    },
    "demo.LoadCheckpointGarbageCollect": {
        "description": "If nonzero, CollectGarbage will be called during LoadCheckpoint after the old actors and connection are cleaned up.",
        "value": 1.0
    },
    "demo.Loop": {
        "description": "<1> : play replay from beginning once it reaches the end / <0> : stop replay at the end",
        "value": 0.0
    },
    "demo.LoopCount": {
        "description": "If > 1, will play the replay that many times before stopping.",
        "value": 0.0
    },
    "demo.MaximumRepPrioritizePercent": {
        "description": "Maximum percent of time that may be spent prioritizing actors, regardless of throttling.",
        "value": 0.800000011920929
    },
    "demo.MinRecordHz": {
        "description": "Minimum number of demo frames recorded per second (use with care)",
        "value": 0.0
    },
    "demo.MinimumRepPrioritizePercent": {
        "description": "Minimum percent of time that must be spent prioritizing actors, regardless of throttling.",
        "value": 0.30000001192092896
    },
    "demo.QueueCheckpointChannels": {
        "description": "If true, the driver will put all channels created during checkpoint loading into queuing mode, to amortize the cost of spawning new actors across multiple frames.",
        "value": 1.0
    },
    "demo.RecordHz": {
        "description": "Maximum number of demo frames recorded per second",
        "value": 8.0
    },
    "demo.RecordHzWhenNotRelevant": {
        "description": "Record at this frequency when actor is not relevant.",
        "value": 2.0
    },
    "demo.ReplayStreamerAutoDemoPrefix": {
        "description": "Prefix to use when generating automatic demo names.",
        "value": 0.0
    },
    "demo.ReplayStreamerAutoDemoUseDateTimePostfix": {
        "description": "When enabled, uses the current time as a postfix for automatic demo names instead of indices",
        "value": 0.0
    },
    "demo.SaveRollbackActorState": {
        "description": "If true, rollback actors will save some replicated state to apply when respawned.",
        "value": 1.0
    },
    "demo.SkipTime": {
        "description": "Skip fixed amount of network replay time (in seconds)",
        "value": 0.0
    },
    "demo.TimeDilation": {
        "description": "Override time dilation during demo playback (-1 = don't override)",
        "value": -1.0
    },
    "demo.UseAdaptiveReplayUpdateFrequency": {
        "description": "If 1, NetUpdateFrequency will be calculated based on how often actors actually write something when recording to a replay",
        "value": 1.0
    },
    "demo.UseNetRelevancy": {
        "description": "If 1, will enable relevancy checks and distance culling, using all connected clients as reference.",
        "value": 0.0
    },
    "demo.WithDeltaCheckpoints": {
        "description": "If true, record checkpoints as a delta from the previous checkpoint.",
        "value": 0.0
    },
    "demo.WithGameSpecificFrameData": {
        "description": "If true, allow game specific data to be recorded with each demo frame.",
        "value": 0.0
    },
    "demo.WithLevelStreamingFixes": {
        "description": "If 1, provides fixes for level streaming (but breaks backwards compatibility).",
        "value": 0.0
    },
    "demo.WithTimeBurnIn": {
        "description": "If true, adds an on screen message with the current DemoTime and Changelist.",
        "value": 0.0
    },
    "dp.AllowScalabilityGroupsToChangeAtRuntime": {
        "description": "If true, device profile scalability bucket cvars will be set with scalabilitypriority which allows them to be changed at runtime. Off by default.",
        "value": 0.0
    },
    "dp.Override": {
        "description": "DeviceProfile override - setting this will use the named DP as the active DP. In addition, it will restore any\n previous overrides before setting (does a dp.OverridePop before setting after the first time).\n The commandline -dp option will override this on startup, but not when setting this at runtime\n",
        "value": 0.0
    },
    "dp.Override.Restore": {
        "command": true,
        "description": "Restores any cvars set by dp.Override to their previous value"
    },
    "dumpticks": {
        "command": true,
        "description": "Dumps all tick functions registered with FTickTaskManager to log."
    },
    "fc.NumFileCacheBlocks": {
        "description": "Number of blocks in the global file cache object\n",
        "value": 256.0
    },
    "foliage.CullAll": {
        "description": "If greater than zero, everything is considered culled.",
        "value": 0.0
    },
    "foliage.CullAllInVertexShader": {
        "description": "Debugging, if this is greater than 0, cull all instances in the vertex shader.",
        "value": 0.0
    },
    "foliage.DensityScale": {
        "description": "Controls the amount of foliage to render. Foliage must opt-in to density scaling through the foliage type.",
        "value": 1.0
    },
    "foliage.DisableCull": {
        "description": "If greater than zero, no culling occurs based on frustum.",
        "value": 0.0
    },
    "foliage.DiscardDataOnLoad": {
        "description": "1: Discard foliage data on load if the foliage type has it enabled; 0: Keep foliage data regardless of whether the foliage type has it enabled or not (requires reloading level)",
        "value": 0.0
    },
    "foliage.DitheredLOD": {
        "description": "If greater than zero, dithered LOD is used, otherwise popping LOD is used.",
        "value": 1.0
    },
    "foliage.ForceLOD": {
        "description": "If greater than or equal to zero, forces the foliage LOD to that level.",
        "value": -1.0
    },
    "foliage.Freeze": {
        "command": true,
        "description": "Useful for debugging. Freezes the foliage culling and LOD."
    },
    "foliage.InstanceRuns": {
        "description": "Whether to use the InstanceRuns feature of FMeshBatch to compress foliage draw call data sent to the renderer.  Not supported by the Mesh Draw Command pipeline.",
        "value": 0.0
    },
    "foliage.LODDistanceScale": {
        "description": "Scale factor for the distance used in computing LOD for foliage.",
        "value": 1.0
    },
    "foliage.LogFoliageFrame": {
        "command": true,
        "description": "Useful for debugging. Logs all foliage rendered in a frame."
    },
    "foliage.MaxOcclusionQueriesPerComponent": {
        "description": "Controls the granularity of occlusion culling. 16-128 is a reasonable range.",
        "value": 16.0
    },
    "foliage.MaxTrianglesToRender": {
        "description": "This is an absolute limit on the number of foliage triangles to render in one traversal. This is used to prevent a silly LOD parameter mistake from causing the OS to kill the GPU.",
        "value": 100000000.0
    },
    "foliage.MinInstancesPerOcclusionQuery": {
        "description": "Controls the granualrity of occlusion culling. 1024 to 65536 is a reasonable range. This is not exact, actual minimum might be off by a factor of two.",
        "value": 256.0
    },
    "foliage.MinLOD": {
        "description": "Used to discard the top LODs for performance evaluation. -1: Disable all effects of this cvar.",
        "value": -1.0
    },
    "foliage.MinOcclusionQueriesPerComponent": {
        "description": "Controls the granularity of occlusion culling. 2 should be the Min.",
        "value": 6.0
    },
    "foliage.MinVertsToSplitNode": {
        "description": "Controls the accuracy between culling and LOD accuracy and culling and CPU performance.",
        "value": 8192.0
    },
    "foliage.MinimumScreenSize": {
        "description": "This controls the screen size at which we cull foliage instances entirely.",
        "value": 4.999999873689376e-06
    },
    "foliage.OnlyLOD": {
        "description": "If greater than or equal to zero, only renders the foliage LOD at that level.",
        "value": -1.0
    },
    "foliage.OverestimateLOD": {
        "description": "If greater than zero and dithered LOD is not used, then we use an overestimate of LOD instead of an underestimate.",
        "value": 0.0
    },
    "foliage.RandomLODRange": {
        "description": "Random distance added to each instance distance to compute LOD.",
        "value": 0.0
    },
    "foliage.RebuildFoliageTrees": {
        "command": true,
        "description": "Rebuild the trees for non-grass foliage."
    },
    "foliage.SplitFactor": {
        "description": "This controls the branching factor of the foliage tree.",
        "value": 16.0
    },
    "foliage.Test": {
        "command": true,
        "description": "Useful for debugging."
    },
    "foliage.ToggleVectorCull": {
        "command": true,
        "description": "Useful for debugging. Toggles the optimized cull."
    },
    "foliage.UnFreeze": {
        "command": true,
        "description": "Useful for debugging. Freezes the foliage culling and LOD."
    },
    "framegrabber.framelatency": {
        "description": "How many frames to wait before reading back a frame. 0 frames will work but cause a performance regression due to CPU and GPU syncing up.\n",
        "value": 0.0
    },
    "framepro.ScopeMinTimeMicroseconds": {
        "description": "IAmNoRealVariable",
        "value": 10.0
    },
    "fx.AllowFastPathFunctionLibrary": {
        "description": "If > 0 Allow the graph to insert custom fastpath operations into the graph.\n",
        "value": 0.0
    },
    "fx.DeferrPSCDeactivation": {
        "description": "If > 0, all deactivations on Particle System Components is deferred until next tick.",
        "value": 0.0
    },
    "fx.DumpGraphKeyGen": {
        "description": "If > 0 the key generation will be dumped to the log. \n",
        "value": 0.0
    },
    "fx.DumpPSCPoolInfo": {
        "command": true,
        "description": "Dump Particle System Pooling Info"
    },
    "fx.DumpPSCTickStateInfo": {
        "command": true,
        "description": "Dumps state information for all current Particle System Components."
    },
    "fx.DumpParticleData": {
        "description": "If > 0 current frame particle data will be dumped after simulation. \n",
        "value": 0.0
    },
    "fx.DumpSystemData": {
        "description": "If > 0, results of system simulations will be dumped to the log. \n",
        "value": 0.0
    },
    "fx.EnableCircularAnimTrailDump": {
        "description": "Controls logging for when circular links are discovered in anim trails.\n0 = No logging.\n1 = Minimal logging.\n2 = Verbose logging.",
        "value": 2.0
    },
    "fx.EnableEmitterMergeChangeIdLogging": {
        "description": "If > 0 verbose change id information will be logged to help with debuggin merge issues. \n",
        "value": 0.0
    },
    "fx.EnableMinimalGPUBuffers": {
        "description": "If > 0 we use new code to pass the gpu only data the VF actuially uses for redering, rather than the whole partilce buffer. \n",
        "value": 1.0
    },
    "fx.EnableNiagaraCRHandler": {
        "description": "If > 0 Niagara will push some state into the crash reporter. This is not free so should not be used unless actively tracking a crash in the wild. Even then it should only be enabled on the platforms needed etc. \n",
        "value": 0.0
    },
    "fx.EnableNiagaraMeshRendering": {
        "description": "If == 0, Niagara Mesh Renderers are disabled. \n",
        "value": 1.0
    },
    "fx.EnableNiagaraRibbonRendering": {
        "description": "If == 0, Niagara Ribbon Renderers are disabled. \n",
        "value": 1.0
    },
    "fx.EnableNiagaraRuntimeCycleCounts": {
        "description": "Toggle for runtime cylce counts tracking Niagara's frame time. \n",
        "value": 0.0
    },
    "fx.EnableNiagaraSpriteRendering": {
        "description": "If == 0, Niagara Sprite Renderers are disabled. \n",
        "value": 1.0
    },
    "fx.EnableVerboseNiagaraChangeIdLogging": {
        "description": "If > 0 Verbose change id logging info will be printed. \n",
        "value": 0.0
    },
    "fx.ExecVMScripts": {
        "description": "If > 0 VM scripts will be executed, otherwise they won't, useful for looking at the bytecode for a crashing compiled script. \n",
        "value": 1.0
    },
    "fx.FXAllowParticleMeshLODs": {
        "description": "If we allow particle meshes to use LODs or not",
        "value": 0.0
    },
    "fx.ForceCompileOnLoad": {
        "description": "If > 0 emitters will be forced to compile on load. \n",
        "value": 0.0
    },
    "fx.ForceMergeOnLoad": {
        "description": "If > 0 emitters will be forced to merge on load. \n",
        "value": 0.0
    },
    "fx.ForceNiagaraCompileToFail": {
        "description": "If > 0 emitters will go through the motions of a compile, but will never set valid bytecode. \n",
        "value": 0.0
    },
    "fx.GPUSimulationTextureSizeX": {
        "description": "GPU Particle simulation texture X dimension (default=1024); set in project renderer settings, potentially overridden by device profile.",
        "value": 1024.0
    },
    "fx.GPUSimulationTextureSizeY": {
        "description": "GPU Particle simulation texture Y dimension (default=1024); set in project renderer settings, potentially overridden by device profile.",
        "value": 1024.0
    },
    "fx.GPUSort.BufferSlack": {
        "description": "Slack ratio when resizing GPU sort buffers. Must be bigger than 1 (default=2)",
        "value": 2.0
    },
    "fx.GPUSort.FrameCountBeforeShrinking": {
        "description": "Number of consecutive frames where the GPU sort buffer is considered oversized before allowing shrinking. (default=100)",
        "value": 100.0
    },
    "fx.GPUSort.MinBufferSize": {
        "description": "Minimum GPU sort buffer size, in particles (default=8192)",
        "value": 8192.0
    },
    "fx.GPUSort.StressTest": {
        "description": "Force a stress test on the GPU sort by release persistent data every frame (default=0)",
        "value": 0.0
    },
    "fx.LastRenderTimeSafetyBias": {
        "description": "The time to bias the LastRenderTime value to allow for the delay from it being written by the RT.",
        "value": 0.10000000149011612
    },
    "fx.LogCompileIdGeneration": {
        "description": "If > 0 all compile id generation will be logged. If 2 or greater, log detailed info. \n",
        "value": 0.0
    },
    "fx.MaxNiagaraCPUParticlesPerEmitter": {
        "description": "The max number of supported CPU particles per emitter in Niagara. \n",
        "value": 1000000.0
    },
    "fx.MaxNiagaraGPUParticlesSpawnPerFrame": {
        "description": "The max number of GPU particles we expect to spawn in a single frame.\n",
        "value": 2000000.0
    },
    "fx.Niagara.AllowAsyncWorkToEndOfFrame": {
        "description": "Allow async work to continue until the end of the frame, if false it will complete within the tick group it's started in.",
        "value": 1.0
    },
    "fx.Niagara.AllowDeferredReset": {
        "description": "If we are running async work when a reset is requested we will instead queue for the finalize to perform, this avoid stalling the GameThread.",
        "value": 1.0
    },
    "fx.Niagara.AllowEventSpawnCombine": {
        "description": "Allows events spawning to be combined, 0=Disabled, 1=Allowed Based On Emitter, 2=Force On.",
        "value": 1.0
    },
    "fx.Niagara.AllowPrimedPools": {
        "description": "Allow Niagara pools to be primed.",
        "value": 1.0
    },
    "fx.Niagara.AllowVisibilityCullingForDynamicBounds": {
        "description": "Allow async work to continue until the end of the frame, if false it will complete within the tick group it's started in.",
        "value": 1.0
    },
    "fx.Niagara.BatchGPUTickSubmit": {
        "description": "The if non zero we allow GPU Ticks to be submitted to the Render Thread in batches.",
        "value": 1.0
    },
    "fx.Niagara.BoundsExpandByPercent": {
        "description": "The percentage we expand the bounds to avoid updating every frame.",
        "value": 0.10000000149011612
    },
    "fx.Niagara.ComponentRenderComponentCountWarning": {
        "description": "The max number of allowed components before a ui warning is shown in the component renderer.",
        "value": 50.0
    },
    "fx.Niagara.ComponentRenderPoolInactiveTimeLimit": {
        "description": "The time in seconds an inactive component can linger in the pool before being destroyed.",
        "value": 5.0
    },
    "fx.Niagara.ComponentWarnAsleepCullReaction": {
        "description": "When enabled we will warn if a NiagaraComponent completes naturally but has Asleep mode set for cullreaction.",
        "value": 1.0
    },
    "fx.Niagara.ComponentWarnNullAsset": {
        "description": "When enabled we will warn if a NiagaraComponent is activate with a null asset.  This is sometimes useful for tracking down components that can be removed.",
        "value": 0.0
    },
    "fx.Niagara.ConcurrentGPUTickInit": {
        "description": "The if non zero we allow GPU Ticks to be initialized in the System's concurrent tick rather than on the game thread.",
        "value": 1.0
    },
    "fx.Niagara.DumpNans": {
        "description": "If not 0 any NaNs will be dumped always.\n",
        "value": 0.0
    },
    "fx.Niagara.DumpNansOnce": {
        "description": "If not 0 any NaNs will be dumped for the first emitter that encounters NaNs.\n",
        "value": 0.0
    },
    "fx.Niagara.FailStaticMeshDataInterface": {
        "description": "When enabled we will fail out using static mesh data interfaces.",
        "value": 0.0
    },
    "fx.Niagara.ForceAutoPooling": {
        "description": "Forces auto pooling to be enabled on spawned components.",
        "value": 0.0
    },
    "fx.Niagara.ForceLastTickGroup": {
        "description": "Force Niagara ticks to be in the last tick group, this mirrors old behavour and can be useful to test for async overlapping issues.",
        "value": 0.0
    },
    "fx.Niagara.ForceWaitForCompilationOnActivate": {
        "description": "When a component is activated it will stall waiting for any pending shader compilation.",
        "value": 0.0
    },
    "fx.Niagara.GpuComputeDebug.FourComponentMode": {
        "description": "Adjust how we visualize four component types\n0 = Visualize RGB (defaut)\n1 = Visualize A\n",
        "value": 0.0
    },
    "fx.Niagara.GpuComputeDebug.MaxTextureHeight": {
        "description": "The maximum height we will visualize a texture at, this is to avoid things becoming too large on screen.",
        "value": 128.0
    },
    "fx.Niagara.GpuComputeDebug.ShowNaNInf": {
        "description": "When enabled will show NaNs as flashing colors.",
        "value": 1.0
    },
    "fx.Niagara.Grid2D.OverrideFormat": {
        "description": "Optional override for all grids to use this format.\n",
        "value": -1.0
    },
    "fx.Niagara.Grid2D.ResolutionMultiplier": {
        "description": "Optional global modifier to grid resolution\n",
        "value": 1.0
    },
    "fx.Niagara.LUT.OptimizeThreshold": {
        "description": "Error Threshold used when optimizing Curve LUTs, setting to 0.0 or below will result in no optimization\n",
        "value": 0.009999999776482582
    },
    "fx.Niagara.LUT.VerifyPostLoad": {
        "description": "Enable to verify LUTs match in PostLoad vs the Loaded Data\n",
        "value": 0.0
    },
    "fx.Niagara.MaxStatRecordedFrames": {
        "description": "The number of frames recorded for the stat performance display of niagara cpu and gpu scripts. \n",
        "value": 30.0
    },
    "fx.Niagara.NDIExport.GPUMaxReadbackCount": {
        "description": "Maximum buffer instance count for the GPU readback when in PerParticleMode, where <= 0 means ignore.",
        "value": 1000.0
    },
    "fx.Niagara.PruneEmittersOnCook": {
        "description": "If > 0 this platform will prune disabled emitters during cook. \n",
        "value": 1.0
    },
    "fx.Niagara.QualityLevel": {
        "description": "The quality level for Niagara Effects. \n",
        "value": 3.0
    },
    "fx.Niagara.Scalability.DistanceCulling": {
        "description": "When non-zero, high level scalability culling based on distance is enabled.",
        "value": 1.0
    },
    "fx.Niagara.Scalability.InstanceCountCulling": {
        "description": "When non-zero, high level scalability culling based on instance count is enabled.",
        "value": 1.0
    },
    "fx.Niagara.Scalability.MinMaxDistance": {
        "description": "Minimum value for Niagara's Max distance value. Primariy to prevent divide by zero issues and ensure a sensible distance value for sorted significance culling.",
        "value": 1.0
    },
    "fx.Niagara.Scalability.VisibilityCulling": {
        "description": "When non-zero, high level scalability culling based on visibility is enabled.",
        "value": 1.0
    },
    "fx.Niagara.SetOverridePlatformName": {
        "command": true,
        "description": "Sets which platform we should override with, no args means reset to default"
    },
    "fx.Niagara.ShowAllocationWarnings": {
        "description": "If not 0 then frequent reallocations and over-allocations of particle memory will cause warnings in the log.\n",
        "value": 0.0
    },
    "fx.Niagara.Solo.AllowAsyncWorkToEndOfFrame": {
        "description": "Allow async work to continue until the end of the frame for solo Niagara instances, if false it will complete within the tick group it started in.",
        "value": 1.0
    },
    "fx.Niagara.Solo.TickEarly": {
        "description": "When enabled will tick kin the first available tick group.",
        "value": 1.0
    },
    "fx.Niagara.TaskPriorities.Background": {
        "command": true,
        "description": "Task Prority When Set to Background"
    },
    "fx.Niagara.TaskPriorities.High": {
        "command": true,
        "description": "Task Prority When Set to High"
    },
    "fx.Niagara.TaskPriorities.Low": {
        "command": true,
        "description": "Task Prority When Set to Low"
    },
    "fx.Niagara.TaskPriorities.Normal": {
        "command": true,
        "description": "Task Prority When Set to Normal"
    },
    "fx.Niagara.TaskPriority.Dump": {
        "command": true,
        "description": "Dump currently set priorities"
    },
    "fx.Niagara.TaskPriority.SystemInstanceTask": {
        "description": "Task priority to use for Niagara System Instance Task",
        "value": 1.0
    },
    "fx.Niagara.TaskPriority.SystemSimulationSpawnPendingTask": {
        "description": "Task priority to use for Niagara System Simulation Spawning Pending Task",
        "value": 1.0
    },
    "fx.Niagara.TaskPriority.SystemSimulationTask": {
        "description": "Task priority to use for Niagara System Simulation Task",
        "value": 1.0
    },
    "fx.Niagara.TaskPriority.SystemSimulationWaitAll": {
        "description": "Task priority to use for Niagara System Simulation Wait All Task",
        "value": 1.0
    },
    "fx.Niagara.UseEmitterSuppressList": {
        "description": "When an emitter is activated we will check the surpession list.",
        "value": 0.0
    },
    "fx.Niagara.UseFastSetUserParametersToDefaultValues": {
        "description": "When a component is activated we will check the surpession list.",
        "value": 1.0
    },
    "fx.Niagara.UseLegacySystemSimContexts": {
        "description": "If > 0, Niagara will use legacy system simulation contexts which would force the whole simulation solo if there were per instance DI calls in the system scripts. \n",
        "value": 0.0
    },
    "fx.Niagara.UseSupressActivateList": {
        "description": "When a component is activated we will check the surpession list.",
        "value": 0.0
    },
    "fx.Niagara.WaitOnPreGC": {
        "description": "Toggles whether Niagara will wait for all async tasks to complete before any GC calls.",
        "value": 1.0
    },
    "fx.Niagara.WarnComponentRenderCount": {
        "description": "The max number of components that a single system can spawn before a log warning is shown.",
        "value": 50.0
    },
    "fx.Niagara.WorldManager.SpawnPerTickGroup": {
        "description": "Will attempt to spawn new systems earlier (default enabled).",
        "value": 1.0
    },
    "fx.Niagara.WorldManager.UsePostActorMark": {
        "description": "Should we use the post actor mark list to reduce the set we iterate over (default enabled).",
        "value": 1.0
    },
    "fx.NiagaraAllowComputeShaders": {
        "description": "If true, allow the usage compute shaders within Niagara.",
        "value": 1.0
    },
    "fx.NiagaraAllowGPUParticles": {
        "description": "If true, allow the usage of GPU particles for Niagara.",
        "value": 1.0
    },
    "fx.NiagaraAllowRuntimeScalabilityChanges": {
        "description": "If > 0 this platform allows niagara scalability level changes at runtime. \n",
        "value": 1.0
    },
    "fx.NiagaraAllowTickBeforeRender": {
        "description": "If 1, Niagara GPU systems that don't rely on view data will be rendered in sync\nwith the current frame simulation instead of the last frame one. (default=1)\n",
        "value": 1.0
    },
    "fx.NiagaraDataBufferMinSize": {
        "description": "Niagara data buffer minimum allocation size in bytes (Default=512).",
        "value": 512.0
    },
    "fx.NiagaraDataBufferShrinkFactor": {
        "description": "Niagara data buffer size threshold for shrinking. (Default=3) \nThe buffer will be reallocated when the used size becomes 1/F of the allocated size.",
        "value": 3.0
    },
    "fx.NiagaraDebugForcedMaxGPUBufferElements": {
        "description": "Force the maximum buffer size supported by the GPU to this value, for debugging purposes.",
        "value": 0.0
    },
    "fx.NiagaraForceSystemsToCookOutRapidIterationOnLoad": {
        "description": "When enabled UNiagaraSystem's bBakeOutRapidIteration will be forced to true on PostLoad of the system.",
        "value": 0.0
    },
    "fx.NiagaraGPUDataBufferChunkSize": {
        "description": "Niagara GPU data buffer allocation chunk size used to round GPU allocations in bytes, must be power of 2 (Default=4096)\n",
        "value": 4096.0
    },
    "fx.NiagaraGPUDataBufferShrinkFactor": {
        "description": "Niagara GPU data buffer size threshold for shrinking. (Default=2) \nThe buffer will be reallocated when the used size becomes 1/F of the allocated size. \n",
        "value": 2.0
    },
    "fx.NiagaraGlobalSystemCountScale": {
        "description": "A global scale on system count thresholds for culling in Niagara. \n",
        "value": 1.0
    },
    "fx.NiagaraGpuLowLatencyTranslucencyEnabled": {
        "description": "When enabled translucent materials can use the current frames simulation data no matter which tick pass Niagara uses.\nThis can result in an additional data buffer being required but will reduce any latency when using view uniform buffer / depth buffer / distance fields / etc",
        "value": 0.0
    },
    "fx.NiagaraGpuMaxQueuedRenderFrames": {
        "description": "Number of frames we all to pass before we start to discard GPU ticks.\n",
        "value": 10.0
    },
    "fx.NiagaraGpuProfilingEnabled": {
        "description": "Used by the profiling tool in the system overview to enable or disable gathering of gpu stats.\n",
        "value": 0.0
    },
    "fx.NiagaraGpuSubmitCommandHint": {
        "description": "If non-zero, a hint will be issued between the set number of dispatches within sequence of shader stages.\n",
        "value": 10.0
    },
    "fx.NiagaraLogDDCStatusForSystems": {
        "description": "When enabled UNiagaraSystems will log out when their subscripts are pulled from the DDC or not.",
        "value": 0.0
    },
    "fx.NiagaraMaxStatInstanceReports": {
        "description": "The max number of different instances from which stat reports are aggregated.",
        "value": 20.0
    },
    "fx.NiagaraOverlapCompute": {
        "description": "0 - Disable compute dispatch overlap, this will result in poor performance due to resource barriers between each dispatch call, but can be used to debug resource transition issues.\n1 - (Default) Enable compute dispatch overlap where possible, this increases GPU utilization.\n",
        "value": 1.0
    },
    "fx.NiagaraRuntimeCycleHistorySize": {
        "description": "How many frames history to use in Niagara's runtime performance trackers. \n",
        "value": 15.0
    },
    "fx.NiagaraScalabilityUpdateTime_High": {
        "description": "Time in seconds between updates to scalability states for Niagara systems set to update at High frequency. \n",
        "value": 0.25
    },
    "fx.NiagaraScalabilityUpdateTime_Low": {
        "description": "Time in seconds between updates to scalability states for Niagara systems set to update at Low frequency. \n",
        "value": 1.0
    },
    "fx.NiagaraScalabilityUpdateTime_Medium": {
        "description": "Time in seconds between updates to scalability states for Niagara systems set to update at Medium frequency. \n",
        "value": 0.5
    },
    "fx.NumFramesBetweenRuntimePerfSamples": {
        "description": "How many frames between each sample of Niagara runtime perf. \n",
        "value": 5.0
    },
    "fx.PSCMan.Dump": {
        "command": true,
        "description": "Dumps state information for all current Particle System Managers."
    },
    "fx.PSCMan.Enable": {
        "description": "If PSC world manager is enabled.",
        "value": 1.0
    },
    "fx.ParallelSystemInstanceTick": {
        "description": "If > 0, system post tick is parallelized. \n",
        "value": 1.0
    },
    "fx.ParallelSystemInstanceTickBatchSize": {
        "description": "The number of system instances to process per async task. \n",
        "value": 4.0
    },
    "fx.ParallelSystemSimTick": {
        "description": "If > 0, system post tick is parallelized. \n",
        "value": 1.0
    },
    "fx.ParticleCollisionIgnoreInvisibleTime": {
        "description": "The time a particle system component has to be invisible for to have all collision ignored. \n",
        "value": 0.10000000149011612
    },
    "fx.ParticleManagerAsyncBatchSize": {
        "description": "How many PSCs the ParticleWorldManager should tick per async task.",
        "value": 8.0
    },
    "fx.PruneEmittersOnCookByDetailMode": {
        "description": "Whether to eliminate all emitters that don't match the detail mode.\nThis will only work if scalability settings affecting detail mode can not be changed at runtime (depends on platform).\n",
        "value": 0.0
    },
    "fx.QualityLevelSpawnRateScaleReferenceLevel": {
        "description": "Controls the reference level for quality level based spawn rate scaling. This is the FX quality level\nat which spawn rate is not scaled down; Spawn rate scaling will happen by each emitter's\nQualityLevelSpawnRateScale value for each reduction in level below the reference level.\n\nDefault = 2. Value should range from 0 to the maximum FX quality level.",
        "value": 2.0
    },
    "fx.ScalabilityManParallelThreshold": {
        "description": "Number of instances required for a niagara significance manger to go parallel for it's update. \n",
        "value": 50.0
    },
    "fx.SkipVectorVMBackendOptimizations": {
        "description": "If 1, skip HLSLCC's backend optimization passes during VectorVM compilation. \n",
        "value": 1.0
    },
    "fx.SuppressNiagaraSystems": {
        "description": "If > 0 Niagara particle systems will not be activated. \n",
        "value": 0.0
    },
    "fx.SystemSimTransferParamsParallelThreshold": {
        "description": "The number of system instances required for the transfer parameters portion of the system tick to go wide. \n",
        "value": 64.0
    },
    "fx.SystemUpdateOnSpawn": {
        "description": "If > 0, system simulations are given a small update after spawn. \n",
        "value": 1.0
    },
    "fx.TriggerDebugCrash": {
        "description": "If > 0 we deliberately crash to test Crash Reporter integration.",
        "value": 0.0
    },
    "fx.WaitForAsyncStallWarnThresholdMS": {
        "description": "If we stall in WaitForAsync for longer than this threshold then we emit a stall warning message.",
        "value": 0.20000000298023224
    },
    "g.TimeToBlockOnRenderFence": {
        "description": "Number of milliseconds the game thread should block when waiting on a render thread fence.",
        "value": 1.0
    },
    "g.TimeoutForBlockOnRenderFence": {
        "description": "Number of milliseconds the game thread should wait before failing when waiting on a render thread fence.",
        "value": 120000.0
    },
    "g.bEnablePendingCleanupObjectsCommandBatching": {
        "description": "Enable batching PendingCleanupObjects destruction.",
        "value": 1.961817850054744e-44
    },
    "gc.ActorClusteringEnabled": {
        "description": "Whether to allow levels to create actor clusters for GC.",
        "value": 0.0
    },
    "gc.AllowParallelGC": {
        "description": "Used to control parallel GC.",
        "value": 1.0
    },
    "gc.AssetClustreringEnabled": {
        "description": "If true, the engine will attempt to create clusters from asset files.",
        "value": 1.0
    },
    "gc.BlueprintClusteringEnabled": {
        "description": "Whether to allow Blueprint classes to create GC clusters.",
        "value": 0.0
    },
    "gc.CollectGarbageEveryFrame": {
        "description": "Used to debug garbage collection...Collects garbage every frame if the value is > 0.",
        "value": 0.0
    },
    "gc.CreateGCClusters": {
        "description": "If true, the engine will attempt to create clusters of objects for better garbage collection performance.",
        "value": 1.0
    },
    "gc.DumpPoolStats": {
        "command": true,
        "description": "Dumps count and size of GC Pools"
    },
    "gc.FlushStreamingOnGC": {
        "description": "If enabled, streaming will be flushed each time garbage collection is triggered.",
        "value": 0.0
    },
    "gc.IncrementalBeginDestroyEnabled": {
        "description": "If true, the engine will destroy objects incrementally using time limit each frame",
        "value": 1.0
    },
    "gc.LowMemory.MemoryThresholdMB": {
        "description": "Memory threshold for low memory GC mode, in MB",
        "value": 0.0
    },
    "gc.LowMemory.TimeBetweenPurgingPendingKillObjects": {
        "description": "Time in seconds (game time) we should wait between purging object references to objects that are pending kill when we're low on memory",
        "value": 30.0
    },
    "gc.LowMemory.TimeBetweenPurgingPendingLevels": {
        "description": "Time in seconds (game time) we should wait between GC when we're low on memory and there are levels pending unload",
        "value": 15.0
    },
    "gc.MaxObjectsInEditor": {
        "description": "Placeholder console variable, currently not used in runtime.",
        "value": 25165824.0
    },
    "gc.MaxObjectsInGame": {
        "description": "Placeholder console variable, currently not used in runtime.",
        "value": 0.0
    },
    "gc.MaxObjectsNotConsideredByGC": {
        "description": "Placeholder console variable, currently not used in runtime.",
        "value": 1.0
    },
    "gc.MinDesiredObjectsPerSubTask": {
        "description": "Minimum number of objects to spawn a GC sub-task for.",
        "value": 128.0
    },
    "gc.MinGCClusterSize": {
        "description": "Minimum GC cluster size",
        "value": 5.0
    },
    "gc.MultithreadedDestructionEnabled": {
        "description": "If true, the engine will free objects' memory from a worker thread",
        "value": 1.0
    },
    "gc.NumRetriesBeforeForcingGC": {
        "description": "Maximum number of times GC can be skipped if worker threads are currently modifying UObject state.",
        "value": 10.0
    },
    "gc.SizeOfPermanentObjectPool": {
        "description": "Placeholder console variable, currently not used in runtime.",
        "value": 0.0
    },
    "gc.TimeBetweenPurgingPendingKillObjects": {
        "description": "Time in seconds (game time) we should wait between purging object references to objects that are pending kill.",
        "value": 61.099998474121094
    },
    "gc.TimeBetweenPurgingPendingKillObjectsOnIdleServerMultiplier": {
        "description": "Multiplier to apply to time between purging pending kill objects when on an idle server.",
        "value": 10.0
    },
    "gc.UseDisregardForGCOnDedicatedServers": {
        "description": "If false, DisregardForGC will be disabled for dedicated servers.",
        "value": 0.0
    },
    "grass.CullDistanceScale": {
        "description": "Multiplier on all grass cull distances.",
        "value": 1.0
    },
    "grass.CullSubsections": {
        "description": "1: Cull each foliage component; 0: Cull only based on the landscape component.",
        "value": 1.0
    },
    "grass.DisableDynamicShadows": {
        "description": "0: Dynamic shadows from grass follow the grass type bCastDynamicShadow flag; 1: Dynamic shadows are disabled for all grass",
        "value": 0.0
    },
    "grass.DisableGPUCull": {
        "description": "For debugging. Set this to zero to see where the grass is generated. Useful for tweaking the guard bands.",
        "value": 0.0
    },
    "grass.DiscardDataOnLoad": {
        "description": "1: Discard grass data on load (disables grass); 0: Keep grass data (requires reloading level)",
        "value": 0.0
    },
    "grass.DumpExclusionBoxes": {
        "command": true,
        "description": "Print the exclusion boxes, debugging."
    },
    "grass.Enable": {
        "description": "1: Enable Grass; 0: Disable Grass",
        "value": 1.0
    },
    "grass.FlushCache": {
        "command": true,
        "description": "Flush the grass cache, debugging."
    },
    "grass.FlushCachePIE": {
        "command": true,
        "description": "Flush the grass cache, debugging."
    },
    "grass.GuardBandDiscardMultiplier": {
        "description": "Used to control discarding in the grass system. Approximate range, 1-4. Multiplied by the cull distance to control when we discard grass components.",
        "value": 1.399999976158142
    },
    "grass.GuardBandMultiplier": {
        "description": "Used to control discarding in the grass system. Approximate range, 1-4. Multiplied by the cull distance to control when we add grass components.",
        "value": 1.2999999523162842
    },
    "grass.IgnoreExcludeBoxes": {
        "description": "For debugging. Ignores any exclusion boxes.",
        "value": 0.0
    },
    "grass.MaxAsyncTasks": {
        "description": "Used to control the number of hierarchical components created at a time.",
        "value": 4.0
    },
    "grass.MaxCreatePerFrame": {
        "description": "Maximum number of Grass components to create per frame",
        "value": 1.0
    },
    "grass.MaxInstancesPerComponent": {
        "description": "Used to control the number of hierarchical components created. More can be more efficient, but can be hitchy as new components come into range",
        "value": 65536.0
    },
    "grass.MinFramesToKeepGrass": {
        "description": "Minimum number of frames before cached grass can be discarded; used to prevent thrashing.",
        "value": 30.0
    },
    "grass.MinTimeToKeepGrass": {
        "description": "Minimum number of seconds before cached grass can be discarded; used to prevent thrashing.",
        "value": 5.0
    },
    "grass.PrerenderGrassmaps": {
        "description": "1: Pre-render grass maps for all components in the editor; 0: Generate grass maps on demand while moving through the editor",
        "value": 1.0
    },
    "grass.TickInterval": {
        "description": "Number of frames between grass ticks.",
        "value": 1.0
    },
    "grass.UseHaltonDistribution": {
        "description": "Used to control the distribution of grass instances. If non-zero, use a halton sequence.",
        "value": 0.0
    },
    "grass.UseStreamingManagerForCameras": {
        "description": "1: Use Streaming Manager; 0: Use ViewLocationsRenderedLastFrame",
        "value": 1.0
    },
    "grass.densityScale": {
        "description": "Multiplier on all grass densities.",
        "value": 1.0
    },
    "health.logHealthSnapshot": {
        "description": "Log health snapshot)\n",
        "value": 1.0
    },
    "httpReplay.ChunkUploadDelayInSeconds": {
        "description": "",
        "value": 10.0
    },
    "httpReplay.MaxCacheSize": {
        "description": "",
        "value": 10485760.0
    },
    "httpReplay.MetaFilterOverride": {
        "description": "",
        "value": 0.0
    },
    "input.DisableHaptics": {
        "description": "If greater than zero, no haptic feedback is processed.",
        "value": 0.0
    },
    "localReplay.AllowLiveStreamDelete": {
        "description": "",
        "value": 1.0
    },
    "localReplay.ChunkUploadDelayInSeconds": {
        "description": "",
        "value": 20.0
    },
    "localReplay.MaxBufferedStreamChunks": {
        "description": "",
        "value": 10.0
    },
    "localReplay.MaxCacheSize": {
        "description": "",
        "value": 10485760.0
    },
    "localReplay.ReplayRecordingMinSpace": {
        "description": "Minimum space needed to start recording a replay.",
        "value": 20971520.0
    },
    "lod.TemporalLag": {
        "description": "This controls the the time lag for temporal LOD, in seconds.",
        "value": 0.5
    },
    "log.Category": {
        "description": "Defines if the categoy is included in each line in the log file and in what form.\n  0 = Do not log category\n  2 = Log the category (default)",
        "value": 1.0
    },
    "log.Timestamp": {
        "description": "Defines if time is included in each line in the log file and in what form. Layout: [time][frame mod 1000]\n  0 = Do not display log timestamps\n  1 = Log time stamps in UTC and frame time (default) e.g. [2015.11.25-21.28.50:803][376]\n  2 = Log timestamps in seconds elapsed since GStartTime e.g. [0130.29][420]  3 = Log timestamps in local time and frame time e.g. [2017.08.04-17.59.50:803][420]  4 = Log timestamps with the engine's timecode and frame time e.g. [17:59:50:18][420]",
        "value": 1.0
    },
    "log.flushInterval": {
        "description": "Logging interval in seconds",
        "value": 0.20000000298023224
    },
    "log.flushInterval.Shipping": {
        "description": "Logging interval in shipping. If set, this overrides archive.FlushInterval",
        "value": 0.0
    },
    "ls.PrintNumLandscapeShadows": {
        "command": true,
        "description": "Prints the number of landscape components that cast shadows."
    },
    "mallocleak.clear": {
        "command": true,
        "description": "Clears recorded allocation info"
    },
    "mallocleak.report": {
        "command": true,
        "description": "Writes malloc leak reports "
    },
    "mallocleak.start": {
        "command": true,
        "description": "Starts tracking allocations. Args -report=[secs] -size=[filter]"
    },
    "mallocleak.stop": {
        "command": true,
        "description": "Stops tracking allocations"
    },
    "memory.logGenericPlatformMemoryStats": {
        "description": "Report Platform Memory Stats)\n",
        "value": 1.0
    },
    "mmio.enable": {
        "description": "If > 0, then enable memory mapped IO on platforms that support it.",
        "value": 1.0
    },
    "n.GNavmeshSynchronousTileGeneration": {
        "description": "",
        "value": 0.0
    },
    "n.IpNetDriverMaxFrameTimeBeforeAlert": {
        "description": "Time to spend processing networking data in a single frame before an alert is raised (in seconds)\nIt may get called multiple times in a single frame if additional processing after a previous alert exceeds the threshold again\n default: 1 s",
        "value": 1.0
    },
    "n.IpNetDriverMaxFrameTimeBeforeLogging": {
        "description": "Time to spend processing networking data in a single frame before an output log warning is printed (in seconds)\n default: 10 s",
        "value": 10.0
    },
    "n.VerifyPeer": {
        "description": "Sets libcurl's CURLOPT_SSL_VERIFYPEER option to verify authenticity of the peer's certificate.\n  0 = disable (allows self-signed certificates)\n  1 = enable [default]",
        "value": 1.0
    },
    "net.ActorChannelPool": {
        "description": "If nonzero, actor channels will be pooled to save memory and object creation cost.",
        "value": 1.0
    },
    "net.ActorReport": {
        "command": true,
        "description": ""
    },
    "net.AllowAsyncLoading": {
        "description": "Allow async loading of unloaded assets referenced in packets. If false the client will hitch and immediately load the asset, if true the packet will be delayed while the asset is async loaded. net.DelayUnmappedRPCs can be enabled to delay RPCs relying on async loading assets.",
        "value": 0.0
    },
    "net.AllowClientRemapCacheObject": {
        "description": "When enabled, we will allow clients to remap read only cache objects and keep the same NetGUID.",
        "value": 1.961817850054744e-44
    },
    "net.AllowEncryption": {
        "description": "If true, the engine will attempt to load an encryption PacketHandler component and fill in the EncryptionToken parameter of the NMT_Hello message based on the ?EncryptionToken= URL option and call callbacks if it's non-empty.",
        "value": 1.0
    },
    "net.AllowReliableMulticastToNonRelevantChannels": {
        "description": "Allow Reliable Server Multicasts to be sent to non-Relevant Actors, as long as their is an existing ActorChannel.",
        "value": 1.0
    },
    "net.CheckNoLoadPackages": {
        "description": "If enabled, check the no load flag in GetObjectFromNetGUID before forcing a sync load on packages that are not marked IsFullyLoaded",
        "value": 1.961817850054744e-44
    },
    "net.ContextDebug": {
        "description": "Debugging option to set a context string during replication",
        "value": 0.0
    },
    "net.ControlChannelDestructionInfo": {
        "description": "If enabled, send destruction info updates via the control channel instead of creating a new actor channel.0: Old behavior, use an actor channel. 1: New behavior, use the control channel",
        "value": 0.0
    },
    "net.DebugDraw": {
        "description": "Draws debug information for network dormancy and relevancy\n1 Enables network debug drawing. 0 disables.",
        "value": 0.0
    },
    "net.DebugDrawCullDistance": {
        "description": "Cull distance for net.DebugDraw. World UnitsMax world units an actor can be away from the local view to draw its dormancy status. Zero disables culling",
        "value": 0.0
    },
    "net.DelayUnmappedRPCs": {
        "description": "If true delay received RPCs with unmapped object references until they are received or loaded, if false RPCs will execute immediately with null parameters. This can be used with net.AllowAsyncLoading to avoid null asset parameters during async loads.",
        "value": 0.0
    },
    "net.DeleteDormantActor": {
        "command": true,
        "description": "Lists open actor channels"
    },
    "net.DelinquencyNumberOfTopOffendersToTrack": {
        "description": "When > 0 , this will be the number of 'TopOffenders' that are tracked by the PackageMap and GuidCache for Queued Actors and Async Loads respectively. net.TrackAsyncLoadingGUIDThreshold / net.TrackQueuedActorThreshold still dictate whether or not any of these items are tracked.",
        "value": 10.0
    },
    "net.DisableIPv6": {
        "description": "If true, IPv6 will not resolve and its usage will be avoided when possible",
        "value": 1.0
    },
    "net.DisableRemapScriptActors": {
        "description": "When set, disables name remapping of compiled script actors (for networking)",
        "value": 0.0
    },
    "net.DisconnectSimulatedConnections": {
        "command": true,
        "description": "Disconnects some simulated connections (0 = all)"
    },
    "net.DoPacketOrderCorrection": {
        "description": "Whether or not to try to fix 'out of order' packet sequences, by caching packets and waiting for the missing sequence.",
        "value": 0.0
    },
    "net.DoPropertyChecksum": {
        "description": "When true and ENABLE_PROPERTY_CHECKSUMS is defined, checksums of replicated properties are compared on client and server",
        "value": 0.0
    },
    "net.DormancyEnable": {
        "description": "Enables Network Dormancy System for reducing CPU and bandwidth overhead of infrequently updated actors\n1 Enables network dormancy. 0 disables network dormancy.",
        "value": 1.0
    },
    "net.DormancyHysteresis": {
        "description": "When > 0, represents the time we'll wait before letting a channel become fully dormant (in seconds). This can prevent churn when objects are going in and out of dormant more frequently than normal.",
        "value": 0.0
    },
    "net.DormancyValidate": {
        "description": "Validates that dormant actors do not change state while in a dormant state (on server only)0: Dont validate. 1: Validate on wake up. 2: Validate on each net update",
        "value": 0.0
    },
    "net.DumpRelevantActors": {
        "command": true,
        "description": "Dumps information on relevant actors during next network update"
    },
    "net.EnableDetailedScopeCounters": {
        "description": "Enables detailed networking scope cycle counters. There are often lots of these which can negatively impact performance.",
        "value": 1.0
    },
    "net.FilterGuidRemapping": {
        "description": "Remove destroyed and parent guids from unmapped list",
        "value": 1.0
    },
    "net.IgnoreNetworkChecksumMismatch": {
        "description": "If true, the integrity checksum on packagemap objects will be ignored, which can cause issues with out of sync data",
        "value": 0.0
    },
    "net.InstantReplayProcessQueuedBunchesMillisecondLimit": {
        "description": "Time threshold for processing queued bunches during instant replays. If it takes longer than this in a single frame, wait until the next frame to continue processing queued bunches. For unlimited time, set to 0.",
        "value": 8.0
    },
    "net.IpConnectionDisableResolution": {
        "description": "If enabled, any future ip connections will not use resolution methods.",
        "value": 0.0
    },
    "net.IpConnectionUseSendTasks": {
        "description": "If true, the IpConnection will call the socket's SendTo function in a task graph task so that it can run off the game thread.",
        "value": 0.0
    },
    "net.IpNetDriverReceiveThreadPollTimeMS": {
        "description": "If net.IpNetDriverUseReceiveThread is true, the number of milliseconds to use as the timeout value for FSocket::Wait on the receive thread. A negative value means to wait indefinitely (FSocket::Shutdown should cancel it though).",
        "value": 250.0
    },
    "net.IpNetDriverReceiveThreadQueueMaxPackets": {
        "description": "If net.IpNetDriverUseReceiveThread is true, the maximum number of packets that can be waiting in the queue. Additional packets received will be dropped.",
        "value": 1024.0
    },
    "net.IpNetDriverUseReceiveThread": {
        "description": "If true, the IpNetDriver will call the socket's RecvFrom function on a separate thread (not the game thread)",
        "value": 0.0
    },
    "net.ListActorChannels": {
        "command": true,
        "description": "Lists open actor channels"
    },
    "net.ListNetGUIDExports": {
        "command": true,
        "description": "Lists open actor channels"
    },
    "net.ListNetGUIDs": {
        "command": true,
        "description": "Lists NetGUIDs for actors"
    },
    "net.MagicHeader": {
        "description": "String representing binary bits which are prepended to every packet sent by the game. Max length: 32 bits.",
        "value": 0.0
    },
    "net.MaxChannelSize": {
        "description": "The maximum number of network channels allowed across the entire server",
        "value": 32767.0
    },
    "net.MaxClientGuidRemaps": {
        "description": "Max client resolves of unmapped network guids per tick",
        "value": 100.0
    },
    "net.MaxConnectionsToTickPerServerFrame": {
        "description": "When non-zero, the maximum number of channels that will have changed replicated to them per server update",
        "value": 0.0
    },
    "net.MaxConstructedPartialBunchSizeBytes": {
        "description": "The maximum size allowed for Partial Bunches.",
        "value": 65536.0
    },
    "net.MaxNetStringSize": {
        "description": "Maximum allowed size for strings sent/received by the netcode (in bytes).",
        "value": 16777216.0
    },
    "net.MaxNumberOfAllowedTArrayChangesPerUpdate": {
        "description": "",
        "value": 2048.0
    },
    "net.MaxNumberOfAllowedTArrayDeletionsPerUpdate": {
        "description": "",
        "value": 2048.0
    },
    "net.MaxPlayersOverride": {
        "description": "If greater than 0, will override the standard max players count. Useful for testing full servers.",
        "value": 0.0
    },
    "net.MaxRPCPerNetUpdate": {
        "description": "Maximum number of unreliable multicast RPC calls allowed per net update, additional ones will be dropped",
        "value": 2.0
    },
    "net.Montage.Debug": {
        "description": "Prints Replication information about AnimMontages\n 0: no print.\n 1: Print AnimMontage info on client side as they are played.",
        "value": 0.0
    },
    "net.NetServerMoveTimestampExpiredWarningThreshold": {
        "description": "Tolerance for ServerMove() to warn when client moves are expired more than this time threshold behind the server.",
        "value": 1.0
    },
    "net.OptimizedRemapping": {
        "description": "Uses optimized path to remap unmapped network guids",
        "value": 1.0
    },
    "net.PackageMap.DebugAll": {
        "description": "Debugs PackageMap serialization of all objects",
        "value": 0.0
    },
    "net.PackageMap.DebugObject": {
        "description": "Debugs PackageMap serialization of objectPartial name of object to debug",
        "value": 0.0
    },
    "net.PackageMap.LongLoadThreshhold": {
        "description": "Threshhold time in seconds for printing long load warnings in object serialization",
        "value": 0.019999999552965164
    },
    "net.PacketOrderCorrectionEnableThreshold": {
        "description": "The number of 'out of order' packet sequences that need to occur, before correction is enabled.",
        "value": 1.0
    },
    "net.PacketOrderMaxCachedPackets": {
        "description": "(NOTE: Must be power of 2!) The maximum number of packets to cache while waiting for missing packet sequences, before treating missing packets as lost.",
        "value": 32.0
    },
    "net.PacketOrderMaxMissingPackets": {
        "description": "The maximum number of missed packet sequences that is allowed, before treating missing packets as lost.",
        "value": 3.0
    },
    "net.PartialBunchReliableThreshold": {
        "description": "If a bunch is broken up into this many partial bunches are more, we will send it reliable even if the original bunch was not reliable. Partial bunches are atonmic and must all make it over to be used",
        "value": 0.0
    },
    "net.PingExcludeFrameTime": {
        "description": "If true, game frame times are subtracted from calculated ping to approximate actual network ping",
        "value": 0.0
    },
    "net.PingUsePacketRecvTime": {
        "description": "Use OS or Receive Thread packet receive time, for calculating the ping. Excludes frame time.",
        "value": 0.0
    },
    "net.ProcessQueuedBunchesMillisecondLimit": {
        "description": "Time threshold for processing queued bunches. If it takes longer than this in a single frame, wait until the next frame to continue processing queued bunches. For unlimited time, set to 0.",
        "value": 30.0
    },
    "net.QuantizeActorLocationOnSpawn": {
        "description": "When enabled, we will quantize Location for newly spawned actors to a single decimal of precision.",
        "value": 1.961817850054744e-44
    },
    "net.QuantizeActorScaleOnSpawn": {
        "description": "When enabled, we will quantize Scale for newly spawned actors to a single decimal of precision.",
        "value": 1.961817850054744e-44
    },
    "net.QuantizeActorVelocityOnSpawn": {
        "description": "When enabled, we will quantize Velocity for newly spawned actors to a single decimal of precision.",
        "value": 1.961817850054744e-44
    },
    "net.RPC.Debug": {
        "description": "Print all RPC bunches sent over the network\n 0: no print.\n 1: Print bunches as they are sent.",
        "value": 0.0
    },
    "net.RandomizeSequence": {
        "description": "Randomize initial packet sequence, can provide some obfuscation",
        "value": 1.0
    },
    "net.RcvThreadSleepTimeForWaitableErrorsInSeconds": {
        "description": "Time the receive thread will sleep when a waitable error is returned by a socket operation.",
        "value": 0.0
    },
    "net.RecvMultiCapacity": {
        "description": "When RecvMulti is enabled, this is the number of packets it is allocated to handle per call - bigger is better (especially under a DDoS), but keep an eye on memory cost.",
        "value": 2048.0
    },
    "net.Reliable.Debug": {
        "description": "Print all reliable bunches sent over the network\n 0: no print.\n 1: Print bunches as they are sent.\n 2: Print reliable bunch buffer each net update",
        "value": 0.0
    },
    "net.RelinkMappedReferences": {
        "description": "",
        "value": 1.0
    },
    "net.Replication.DebugProperty": {
        "description": "Debugs Replication of property by name, this should be set to the partial name of the property to debug",
        "value": 0.0
    },
    "net.ReservedNetGuidSize": {
        "description": "Reserved size in bytes for NetGUID serialization, used as a placeholder for later serialization",
        "value": 512.0
    },
    "net.ShareInitialCompareState": {
        "description": "If true and net.ShareShadowState is enabled, attempt to also share initial replication compares across connections.",
        "value": 0.0
    },
    "net.ShareSerializedData": {
        "description": "If true, enable shared serialization system used by replication to reduce CPU usage when multiple clients need the same data",
        "value": 1.0
    },
    "net.ShareShadowState": {
        "description": "If true, work done to compare properties will be shared across connections",
        "value": 1.0
    },
    "net.SimulateConnections": {
        "command": true,
        "description": "Starts a Simulated Net Driver"
    },
    "net.SkipReplicatorForDestructionInfos": {
        "description": "If enabled, skip creation of object replicator in SetChannelActor when we know there is no content payload and we're going to immediately destroy the actor.",
        "value": 1.0
    },
    "net.SupportFastArrayDelta": {
        "description": "Whether or not Fast Array Struct Delta Serialization is enabled.",
        "value": 1.0
    },
    "net.TickAllOpenChannels": {
        "description": "If nonzero, each net connection will tick all of its open channels every tick. Leaving this off will improve performance.",
        "value": 0.0
    },
    "net.TrackAsyncLoadingGUIDThreshold": {
        "description": "When > 0, any objects that take longer than the threshold to async load will be tracked. Threshold in seconds, @see FNetGUIDCache::ConsumeDelinquencyAnalytics. Used for Debugging and Analytics",
        "value": 0.0
    },
    "net.TrackAsyncLoadingGUIDThresholdOwner": {
        "description": "When > 0, if the Net Connection's owning Controller or Pawn is waiting on Async Loads for longer than this threshold, we will fire a CSV Event to track it. Used for Debugging and Profiling",
        "value": 0.0
    },
    "net.TrackNetSerializeObjectReferences": {
        "description": "If true, we will create small layouts for Net Serialize Structs if they have Object Properties. This can prevent some Shadow State GC crashes.",
        "value": 1.961817850054744e-44
    },
    "net.TrackQueuedActorThreshold": {
        "description": "When > 0, any actors that spend longer than the threshold with queued bunches will be tracked. Threshold in seconds, @see UPackageMap::ConsumeDelinquencyAnalytics. Used for Debugging and Analytics",
        "value": 0.0
    },
    "net.TrackQueuedActorThresholdOwner": {
        "description": "When > 0, if the Net Connection's owning Controller or Pawn has Queued Bunches for longer than this threshold, we will fire a CSV Event to track it. Used for Debugging and Profiling",
        "value": 0.0
    },
    "net.UseAdaptiveNetUpdateFrequency": {
        "description": "If 1, NetUpdateFrequency will be calculated based on how often actors actually send something when replicating",
        "value": 0.0
    },
    "net.UseRecvMulti": {
        "description": "If true, and if running on a Unix/Linux platform, multiple packets will be retrieved from the socket with one syscall, improving performance and also allowing retrieval of timestamp information.",
        "value": 0.0
    },
    "net.UseRecvTimestamps": {
        "description": "If true and if net.UseRecvMulti is also true, on a Unix/Linux platform, the kernel timestamp will be retrieved for each packet received, providing more accurate ping calculations.",
        "value": 0.0
    },
    "net.ValidateReplicatedPropertyRegistration": {
        "description": "Warns if replicated properties were not registered in GetLifetimeReplicatedProps.",
        "value": 0.0
    },
    "net.VerifyShareSerializedData": {
        "description": "Debug option to verify shared serialization data during replication",
        "value": 0.0
    },
    "networkversionoverride": {
        "description": "Sets network version used for multiplayer ",
        "value": 0.0
    },
    "niagara.CreateShadersOnLoad": {
        "description": "Whether to create Niagara's simulation shaders on load, which can reduce hitching, but use more memory.  Otherwise they will be created as needed.",
        "value": 0.0
    },
    "niagara.ShowShaderCompilerWarnings": {
        "description": "When set to 1, will display all warnings from Niagara shader compiles.",
        "value": 0.0
    },
    "oculus.mr.CastingLantency": {
        "description": "Casting Latency",
        "value": 0.0
    },
    "oculus.mr.ChromaKeyColor_B": {
        "description": "Chroma Key Color B",
        "value": 0.0
    },
    "oculus.mr.ChromaKeyColor_G": {
        "description": "Chroma Key Color G",
        "value": 255.0
    },
    "oculus.mr.ChromaKeyColor_R": {
        "description": "Chroma Key Color R",
        "value": 0.0
    },
    "oculus.mr.ChromaKeySimilarity": {
        "description": "Chroma Key Similarity",
        "value": 0.6000000238418579
    },
    "oculus.mr.ChromaKeySmoothRange": {
        "description": "Chroma Key Smooth Range",
        "value": 0.029999999329447746
    },
    "oculus.mr.ChromaKeySpillRange": {
        "description": "Chroma Key Spill Range",
        "value": 0.03999999910593033
    },
    "oculus.mr.ExternalCompositionPostProcess": {
        "description": "Enable MR external composition post process: 0=Off, 1=On",
        "value": 0.0
    },
    "oculus.mr.OverrideParameters": {
        "description": "Use the Mixed Reality console variables",
        "value": 0.0
    },
    "oss.PlatformOverride": {
        "description": "Overrides the detected platform of this client for various debugging\nValid values WIN MAC PSN XBL IOS AND LIN SWT OTHER",
        "value": 0.0
    },
    "p.AABBMaxChildrenInLeaf": {
        "description": "",
        "value": 500.0
    },
    "p.AABBMaxTreeDepth": {
        "description": "",
        "value": 200.0
    },
    "p.AllowCachedOverlaps": {
        "description": "Primitive Component physics\n0: disable cached overlaps, 1: enable (default)",
        "value": 1.0
    },
    "p.AllowDestroyNonNetworkActors": {
        "description": "When enabled, allows Clients in Networked Games to destroy non-networked actors (AActor::Role == ROLE_None). Does not change behavior on Servers or Standalone games.",
        "value": 1.0
    },
    "p.AllowNotForDedServerPhysicsAssets": {
        "description": "Allow 'Not For Dedicated Server' flag on PhysicsAssets\n0: ignore flag, 1: obey flag (default)",
        "value": 1.0
    },
    "p.AlwaysCreatePhysicsStateConversionHack": {
        "description": "Hack to convert actors with query and ignore all to always create physics.",
        "value": 0.0
    },
    "p.AlwaysHardSnap": {
        "description": "",
        "value": 0.0
    },
    "p.AlwaysResetPhysics": {
        "description": "",
        "value": 0.0
    },
    "p.AngleLerp": {
        "description": "",
        "value": -1.0
    },
    "p.AngularEtherDragOverride": {
        "description": "Set an override angular ether drag value. -1.f to disable",
        "value": -1.0
    },
    "p.AngularVelocityCoefficient": {
        "description": "",
        "value": -1.0
    },
    "p.AnimDynamics": {
        "description": "Enables/Disables anim dynamics node updates.",
        "value": 1.0
    },
    "p.AnimDynamicsAdaptiveSubstep": {
        "description": "Enables/disables adaptive substepping. Adaptive substepping will substep the simulation when it is necessary and maintain a debt buffer for time, always trying to utilise as much time as possible.",
        "value": 0.0
    },
    "p.AnimDynamicsLODThreshold": {
        "description": "Max LOD that anim dynamics is allowed to run on. Provides a global threshold that overrides per-node the LODThreshold property. -1 means no override.",
        "value": -1.0
    },
    "p.AnimDynamicsNumDebtFrames": {
        "description": "Number of frames to maintain as time debt when using adaptive substepping, this should be at least 1 or the time debt will never be cleared.",
        "value": 5.0
    },
    "p.AnimDynamicsRestrictLOD": {
        "description": "Forces anim dynamics to be enabled for only a specified LOD, -1 to enable on all LODs.",
        "value": -1.0
    },
    "p.AnimDynamicsWind": {
        "description": "Enables/Disables anim dynamics wind forces globally.",
        "value": 1.0
    },
    "p.BPTreeOfGrids": {
        "description": "Whether to use a seperate tree of grids for bp",
        "value": 1.0
    },
    "p.BatchPhysXTasksSize": {
        "description": "Number of tasks to batch together (max 8). 1 will go as wide as possible, but more overhead on small tasks",
        "value": 3.0
    },
    "p.BoundingVolumeNumCells": {
        "description": "",
        "value": 35.0
    },
    "p.BoundsThicknessMultiplier": {
        "description": "",
        "value": 1.0
    },
    "p.BroadphaseType": {
        "description": "",
        "value": 3.0
    },
    "p.Chaos.AxialSpring.ParallelConstraintCount": {
        "description": "If we have more constraints than this, use parallel-for in Apply.",
        "value": 100.0
    },
    "p.Chaos.CCD.AllowedDepthBoundsScale": {
        "description": "When rolling back to TOI, allow (smallest bound's extent) * AllowedDepthBoundsScale, instead of rolling back to exact TOI w/ penetration = 0.",
        "value": 0.05000000074505806
    },
    "p.Chaos.CCD.DepthThreshold": {
        "description": "When returning to TOI, leave this much contact depth (as a fraction of MinBounds)",
        "value": 0.05000000074505806
    },
    "p.Chaos.CCD.EnableThreshold": {
        "description": "If distance moved is greater than this times the minimum object dimension, use CCD",
        "value": -1.0
    },
    "p.Chaos.CCD.EnableThresholdBoundsScale": {
        "description": "CCD is used when object position is changing > smallest bound's extent * BoundsScale. 0 will always Use CCD. Values < 0 disables CCD.",
        "value": 0.4000000059604645
    },
    "p.Chaos.Collision.AABBBoundsCheck": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.AntiJitterContactMovementAllowance": {
        "description": "If a contact is close to where it was during a previous iteration, we will assume it is the same contact that moved (to reduce jitter). Expressed as the fraction of movement distance and Centre of Mass distance to the contact point",
        "value": 0.05000000074505806
    },
    "p.Chaos.Collision.CheckManifoldComplete": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.ClipTolerance": {
        "description": "",
        "value": 0.10000000149011612
    },
    "p.Chaos.Collision.ConvexMarginType": {
        "description": "How the handle margins on convex shapes. 0 - No margin; 1 - External margin; 2 - Internal margin (WIP)",
        "value": 0.0
    },
    "p.Chaos.Collision.EnergyClampEnabled": {
        "description": "Whether to use energy clamping in collision apply step",
        "value": 1.0
    },
    "p.Chaos.Collision.ForceApplyType": {
        "description": "Force Apply step to use Velocity(1) or Position(2) modes",
        "value": 0.0
    },
    "p.Chaos.Collision.ISPC": {
        "description": "Whether to use ISPC optimizations in the Collision Solver",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.Manifold.BoxAsConvex": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.Manifold.ImpulseTolerance": {
        "description": "",
        "value": 9.999999747378752e-05
    },
    "p.Chaos.Collision.Manifold.MatchNormalTolerance": {
        "description": "A tolerance on the normal dot product used to determine if two contact points are the same",
        "value": 0.019999999552965164
    },
    "p.Chaos.Collision.Manifold.MatchPositionTolerance": {
        "description": "A tolerance as a fraction of object size used to determine if two contact points are the same",
        "value": 0.30000001192092896
    },
    "p.Chaos.Collision.Manifold.MaxPushOutStiffness": {
        "description": "",
        "value": 0.5
    },
    "p.Chaos.Collision.Manifold.MinArraySize": {
        "description": "",
        "value": 0.0
    },
    "p.Chaos.Collision.Manifold.MinPushOutStiffness": {
        "description": "",
        "value": 0.5
    },
    "p.Chaos.Collision.Manifold.PlaneContactNormalEpsilon": {
        "description": "Normal tolerance used to distinguish face contacts from edge-edge contacts",
        "value": 0.0010000000474974513
    },
    "p.Chaos.Collision.Manifold.PositionTolerance": {
        "description": "",
        "value": 9.999999747378752e-05
    },
    "p.Chaos.Collision.Manifold.PushOut.EnableShockPropagationHack": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.Manifold.PushOut.NegativePushOut": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.Manifold.PushOut.PositionCorrection": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.Manifold.PushOut.Restitution": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.Manifold.PushOut.StaticFriction": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.Manifold.PushOut.VelocityCorrectionMode": {
        "description": "0 = No Velocity Correction; 1 = Normal Velocity Correction; 2 = Normal + Tangential Velocity Correction",
        "value": 2.0
    },
    "p.Chaos.Collision.Manifold.UpdateMatchedContact": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.ManifoldFaceAngle": {
        "description": "Angle above which a face is rejected and we switch to point collision",
        "value": 5.0
    },
    "p.Chaos.Collision.ManifoldPositionTolerance": {
        "description": "",
        "value": 0.5
    },
    "p.Chaos.Collision.ManifoldRotationTolerance": {
        "description": "",
        "value": 0.05000000074505806
    },
    "p.Chaos.Collision.ManifoldToleranceRebuild": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.PhiResampleThreshold": {
        "description": "",
        "value": 0.0010000000474974513
    },
    "p.Chaos.Collision.PrevVelocityRestitutionEnabled": {
        "description": "If enabled restitution will be calculated on previous frame velocities instead of current frame velocities",
        "value": 0.0
    },
    "p.Chaos.Collision.RelaxationEnabled": {
        "description": "Whether to reduce applied impulses during iterations for improved solver stability but reduced convergence",
        "value": 0.0
    },
    "p.Chaos.Collision.SphereBoundsCheck": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.UseAccumulatedImpulseClipSolve": {
        "description": "Use experimental Accumulated impulse clipped contact solve",
        "value": 0.0
    },
    "p.Chaos.Collision.UseManifoldsTest": {
        "description": "Enable/Disable use of manifoldes in collision.",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Collision.UseShockPropagation": {
        "description": "",
        "value": 1.0
    },
    "p.Chaos.Constraints.AlwaysAddSweptConstraints": {
        "description": "Since GJKContactPointSwept returns infinity for it's contact data when not hitting anything, some contacts are discarded prematurely. This flag will cause contact points considered for sweeps to never be discarded.",
        "value": 0.0
    },
    "p.Chaos.Constraints.DetailedStats": {
        "description": "When set to 1, will enable more detailed stats.",
        "value": 0.0
    },
    "p.Chaos.Constraints.GJKContactPointSweptPhiCap": {
        "description": "When GJKContactPointSwept does not touch a surface, rather than returning an invalid contact point with Phi = FLOAT_MAX, we clamp Phi to CullDistance - Epsilon so that the contact doesn't get immediately thrown out. This protects us from the case of throwing out contacts that we are sweeping parallel to and will need during swept iterations in resolution.",
        "value": 1.0
    },
    "p.Chaos.Constraints.GJKContactPointSweptPhiCapEpsilon": {
        "description": "The epislon value to use when capping Phi in GJKContactPointSwept.",
        "value": 9.999999747378752e-05
    },
    "p.Chaos.ConvexGeometryCheckEnable": {
        "description": "Perform convex geometry complexity check for Chaos physics.",
        "value": 0.0
    },
    "p.Chaos.ConvexParticlesWarningThreshold": {
        "description": "Threshold beyond which we warn about collision geometry complexity.",
        "value": 50.0
    },
    "p.Chaos.DebugDrawMode": {
        "description": "Where to send debug draw commands. 0 = UE Debug Draw; 1 = VisLog; 2 = Both",
        "value": 0.0
    },
    "p.Chaos.DedicatedThreadEnabled": {
        "description": "Enables a dedicated physics task/thread for Chaos tasks.0: Disabled1: Enabled",
        "value": 1.0
    },
    "p.Chaos.DumpHierElementBuckets": {
        "description": "Distribution buckets for dump hierarchy stats command",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.BoundsExtension": {
        "description": "Bounds are grown by this fraction of their size (should be >= 0.0)",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Collision.CullDistance": {
        "description": "CullDistance",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Collision.DeferNarrowPhase": {
        "description": "Create contacts for all broadphase pairs, perform NarrowPhase later.",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Collision.Enabled": {
        "description": "Enable/Disable collisions in Immediate Physics.",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Collision.PairIterations": {
        "description": "Override collision pair iterations (if >= 0)",
        "value": -1.0
    },
    "p.Chaos.ImmPhys.Collision.Priority": {
        "description": "Set the Collision constraint sort order (Joints have priority 0)",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Collision.PushOutPairIterations": {
        "description": "Override collision push-out pair iterations (if >= 0)",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Collision.RestitutionEnabled": {
        "description": "Collision Restitution Enable/Disable",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Collision.RestitutionThresholdMultiplier": {
        "description": "Collision Restitution Threshold (Acceleration) = Multiplier * Gravity",
        "value": 3.0
    },
    "p.Chaos.ImmPhys.Collision.UseManifolds": {
        "description": "Enable/Disable use of manifoldes in collision.",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.DeltaTimeCount": {
        "description": "The number of ticks over which the moving average is calculated",
        "value": 100.0
    },
    "p.Chaos.ImmPhys.FixedStepTime": {
        "description": "Override fixed step time mode: fixed step time (if positive); variable time mode (if zero); asset defined (if negative)",
        "value": -1.0
    },
    "p.Chaos.ImmPhys.FixedStepTolerance": {
        "description": "Tiem remainder required to add a new step (fraction of FixedStepTime)",
        "value": 0.05000000074505806
    },
    "p.Chaos.ImmPhys.InitialStepTime": {
        "description": "Initial step time (then calculated from rolling average)",
        "value": 0.032999999821186066
    },
    "p.Chaos.ImmPhys.Iterations": {
        "description": "Override number of constraint solver loops in immediate physics (if >= 0)",
        "value": -1.0
    },
    "p.Chaos.ImmPhys.Joint.AngleTolerance": {
        "description": "PositionTolerance.",
        "value": 0.0010000000474974513
    },
    "p.Chaos.ImmPhys.Joint.AngularDriveDamping": {
        "description": "6Dof joint drive damping override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.AngularDriveStiffness": {
        "description": "6Dof joint drive stiffness override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.AngularProjection": {
        "description": "6Dof joint projection amount override (if >= 0).",
        "value": -1.0
    },
    "p.Chaos.ImmPhys.Joint.EnableDrives": {
        "description": "EnableDrives.",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Joint.EnableSwingLimits": {
        "description": "EnableSwingLimits.",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Joint.EnableTwistLimits": {
        "description": "EnableTwistLimits.",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Joint.LinearDriveDamping": {
        "description": "6Dof joint drive damping override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.LinearDriveStiffness": {
        "description": "6Dof joint drive stiffness override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.LinearProjection": {
        "description": "6Dof joint projection amount override (if >= 0).",
        "value": -1.0
    },
    "p.Chaos.ImmPhys.Joint.MaxInertiaRatio": {
        "description": "6Dof joint MaxInertiaRatio (if > 0)",
        "value": 5.0
    },
    "p.Chaos.ImmPhys.Joint.MinParentMassRatio": {
        "description": "6Dof joint MinParentMassRatio (if > 0)",
        "value": 0.20000000298023224
    },
    "p.Chaos.ImmPhys.Joint.PairIterations": {
        "description": "Override joint pair iterations (if >= 0)",
        "value": -1.0
    },
    "p.Chaos.ImmPhys.Joint.PositionTolerance": {
        "description": "PositionTolerance.",
        "value": 0.02500000037252903
    },
    "p.Chaos.ImmPhys.Joint.PushOutPairIterations": {
        "description": "Override joint push-out pair iterations (if >= 0)",
        "value": -1.0
    },
    "p.Chaos.ImmPhys.Joint.SoftLinearStiffness": {
        "description": "6Dof joint soft linear stiffness override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.SoftSwingDamping": {
        "description": "6Dof joint SoftSwing damping override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.SoftSwingStiffness": {
        "description": "6Dof joint SoftSwing stiffness override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.SoftTwistDamping": {
        "description": "6Dof joint SoftTwist damping override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.SoftTwistStiffness": {
        "description": "6Dof joint SoftTwist stiffness override (if > 0).",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.Joint.Stiffness": {
        "description": "6Dof joint stiffness override (if > 0).",
        "value": 1.0
    },
    "p.Chaos.ImmPhys.Joint.SwingTwistAngleTolerance": {
        "description": "SwingTwistAngleTolerance.",
        "value": 9.999999974752427e-07
    },
    "p.Chaos.ImmPhys.MinStepTime": {
        "description": "If non-zero, then if step time is lower than this, go into fixed step mode with this timestep.",
        "value": 0.009999999776482582
    },
    "p.Chaos.ImmPhys.NumSteps": {
        "description": "Override num steps (if not zero)",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.PushOutIterations": {
        "description": "Override number of solver push-out loops (if >= 0)",
        "value": -1.0
    },
    "p.Chaos.ImmPhys.StepTime": {
        "description": "Override step time (if not zero)",
        "value": 0.0
    },
    "p.Chaos.ImmPhys.UsePositionSolver": {
        "description": "Use position based collision solver for Immediate Physics (default true)",
        "value": 1.0
    },
    "p.Chaos.Joint.Batching": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Joint.DegenerateRotationLimit": {
        "description": "Cosine of the swing angle that is considered degerenerate (default Cos(176deg))",
        "value": -0.9980000257492065
    },
    "p.Chaos.Joint.DisableSoftLimits": {
        "description": "Disable soft limits (for debugging only)",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Joint.EarlyOut": {
        "description": "Whether to iterating when joints report being solved",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Joint.EnableMatrixSolve": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Joint.MaxBatchSize": {
        "description": "",
        "value": 1000.0
    },
    "p.Chaos.Joint.MultiDimension": {
        "description": "",
        "value": 1.0
    },
    "p.Chaos.Joint.VelProjectionAlpha": {
        "description": "How much of the velocity correction to apply during projection. Equivalent to (1-damping) for projection velocity delta",
        "value": 0.10000000149011612
    },
    "p.Chaos.JointConstraint.AngularBreakScale": {
        "description": "Conversion factory for Angular Break Theshold.",
        "value": 1.0
    },
    "p.Chaos.JointConstraint.AngularDriveDampingScale": {
        "description": "Conversion factor for Angular drive damping.",
        "value": 1.5
    },
    "p.Chaos.JointConstraint.AngularDriveStiffnessScale": {
        "description": "Conversion factor for Angular drive stiffness.",
        "value": 1.5
    },
    "p.Chaos.JointConstraint.JointStiffness": {
        "description": "Hard-joint solver stiffness.",
        "value": 1.0
    },
    "p.Chaos.JointConstraint.LinaearDriveDampingScale": {
        "description": "Conversion factor for Linear drive damping.",
        "value": 1.0
    },
    "p.Chaos.JointConstraint.LinearBreakScale": {
        "description": "Conversion factory for Linear Break Theshold.",
        "value": 1.0
    },
    "p.Chaos.JointConstraint.LinearDriveStiffnessScale": {
        "description": "Conversion factor for Linear drive stiffness.",
        "value": 1.0
    },
    "p.Chaos.JointConstraint.SoftAngularDampingScale": {
        "description": "Conversion factor for soft-joint damping.",
        "value": 1000.0
    },
    "p.Chaos.JointConstraint.SoftAngularForceMode": {
        "description": "Soft Angular constraint force mode (0: Acceleration; 1: Force",
        "value": 0.0
    },
    "p.Chaos.JointConstraint.SoftAngularStiffnessScale": {
        "description": "Conversion factor for soft-joint stiffness.",
        "value": 100000.0
    },
    "p.Chaos.JointConstraint.SoftLinearDampingScale": {
        "description": "Conversion factor for soft-joint damping.",
        "value": 1.2000000476837158
    },
    "p.Chaos.JointConstraint.SoftLinearForceMode": {
        "description": "Soft Linear constraint force mode (0: Acceleration; 1: Force",
        "value": 0.0
    },
    "p.Chaos.JointConstraint.SoftLinearStiffnessScale": {
        "description": "Conversion factor for soft-joint stiffness.",
        "value": 1.5
    },
    "p.Chaos.MinEvolution.IntegrateMode": {
        "description": "",
        "value": 0.0
    },
    "p.Chaos.MinEvolution.RewindLerp": {
        "description": "If rewinding (fixed dt mode) use Backwards-Lerp as opposed to Backwards Velocity",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.OneSidedHeightField": {
        "description": "When enabled, extra steps will ensure that FHeightField::GJKContactPointImp never results in internal-facing contact data.",
        "value": 1.0
    },
    "p.Chaos.PBDEvolution.FastPositionBasedFriction": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.PBDEvolution.MinParallelBatchSize": {
        "description": "",
        "value": 300.0
    },
    "p.Chaos.PBDEvolution.UseNestedParallelFor": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.PerformGeometryReduction": {
        "description": "Perform convex geometry simplification to increase performance in Chaos physics.",
        "value": 0.0
    },
    "p.Chaos.Simulation.ApplySolverProjectSettings": {
        "description": "Whether to apply the solver project settings on spawning a solver",
        "value": 1.0
    },
    "p.Chaos.SmoothedPositionLerpRate": {
        "description": "The interpolation rate for the smoothed position calculation. Used for sleeping.",
        "value": 0.10000000149011612
    },
    "p.Chaos.Solver.CleanupCommandsOnDestruction": {
        "description": "Whether or not to run internal command queue cleanup on solver destruction (0 = no cleanup, >0 = cleanup all commands)",
        "value": 1.0
    },
    "p.Chaos.Solver.Collision.CullDistance": {
        "description": "Override cull distance (if >= 0)",
        "value": -1.0
    },
    "p.Chaos.Solver.Collision.DeferNarrowPhase": {
        "description": "Create contacts for all broadphase pairs, perform NarrowPhase later.",
        "value": 0.0
    },
    "p.Chaos.Solver.Collision.Iterations": {
        "description": "Override number of collision iterations per solver iteration (-1 to use config)",
        "value": -1.0
    },
    "p.Chaos.Solver.Collision.PushOutIterations": {
        "description": "Override number of collision iterations per solver iteration (-1 to use config)",
        "value": -1.0
    },
    "p.Chaos.Solver.Collision.UseIncrementalManifolds": {
        "description": "Enable/Disable use of incremental manifolds.",
        "value": 1.0
    },
    "p.Chaos.Solver.Collision.UseManifolds": {
        "description": "Enable/Disable use of manifoldes in collision.",
        "value": 0.0
    },
    "p.Chaos.Solver.Collision.UseOneShotManifolds": {
        "description": "Enable/Disable use of OneShot manifolds where available. If enabled Incremental manifold setting will be ignored",
        "value": 1.0
    },
    "p.Chaos.Solver.Iterations": {
        "description": "Override umber of solver iterations (-1 to use config)",
        "value": -1.0
    },
    "p.Chaos.Solver.Joint.PairIterations": {
        "description": "Override number of iterations per joint pair during a solver iteration (-1 to use config)",
        "value": -1.0
    },
    "p.Chaos.Solver.Joint.PushOutPairIterations": {
        "description": "Override number of push out iterations per joint during a solver iteration (-1 to use config)",
        "value": -1.0
    },
    "p.Chaos.Solver.ParticlePoolNumFrameUntilShrink": {
        "description": "Num Frame until we can potentially shrink the pool",
        "value": 30.0
    },
    "p.Chaos.Solver.PushoutIterations": {
        "description": "Override number of solver pushout iterations (-1 to use config)",
        "value": -1.0
    },
    "p.Chaos.Solver.SleepEnabled": {
        "description": "",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Solver.UseParticlePool": {
        "description": "Whether or not to use dirty particle pool (Optim)",
        "value": 1.961817850054744e-44
    },
    "p.Chaos.Thread.DesiredHz": {
        "description": "Desired update rate of the dedicated physics thread in Hz/FPS (Default 60.0f)",
        "value": 60.0
    },
    "p.Chaos.Thread.WaitThreshold": {
        "description": "Desired wait time in ms before the game thread stops waiting to sync physics and just takes the last result. (default 16ms)",
        "value": 0.0
    },
    "p.Chaos.Timestep.VariableCapped.Cap": {
        "description": "Time in seconds to set as the cap when using a ranged timestep for Chaos.",
        "value": 0.06669999659061432
    },
    "p.Chaos.VisualDebuggerEnable": {
        "description": "Enable/Disable pushing/saving data to the visual debugger",
        "value": 1.0
    },
    "p.ChaosCloth.LegacyDisablesAccurateWind": {
        "description": "Whether using the Legacy wind model switches off the accurate wind model, or adds up to it",
        "value": 1.961817850054744e-44
    },
    "p.ChaosNumContactIterationsOverride": {
        "description": "Override for num contact iterations if >= 0. [def:-1]",
        "value": -1.0
    },
    "p.ChaosNumPushOutIterationsOverride": {
        "description": "Override for num push out iterations if >= 0 [def:-1]",
        "value": -1.0
    },
    "p.ChaosRigidsEvolutionApplyAllowEarlyOut": {
        "description": "Allow Chaos Rigids Evolution apply iterations to early out when resolved.[def:1]",
        "value": 1.0
    },
    "p.ChaosRigidsEvolutionApplyPushoutAllowEarlyOut": {
        "description": "Allow Chaos Rigids Evolution apply-pushout iterations to early out when resolved.[def:1]",
        "value": 1.0
    },
    "p.ChaosSolverCollisionDefaultAngularSleepThreshold": {
        "description": "Default angular threshold for sleeping.[def:0.0087]",
        "value": 0.008700000122189522
    },
    "p.ChaosSolverCollisionDefaultLinearSleepThreshold": {
        "description": "Default linear threshold for sleeping.[def:0.001]",
        "value": 0.0010000000474974513
    },
    "p.ChaosSolverCollisionDefaultSleepCounterThreshold": {
        "description": "Default counter threshold for sleeping.[def:20]",
        "value": 20.0
    },
    "p.ChaosSolverCollisionDefaultUseMaterialSleepThresholds": {
        "description": "Enable material support for sleeping thresholds[def:true]",
        "value": 1.961817850054744e-44
    },
    "p.CharacterStuckWarningPeriod": {
        "description": "How often (in seconds) we are allowed to log a message about being stuck in geometry.\n<0: Disable, >=0: Enable and log this often, in seconds.",
        "value": -1.0
    },
    "p.ChildrenInheritVelocity": {
        "description": "Whether children inherit parent collision velocity when declustering. 0 has no impact velocity like glass, 1 has full impact velocity like brick",
        "value": 1.0
    },
    "p.ClosestIntersectionStepSizeMultiplier": {
        "description": "When raycasting we use this multiplier to substep the travel distance along the ray. Smaller number gives better accuracy at higher cost",
        "value": 0.5
    },
    "p.Cloth.DefaultClothingSimulationFactoryClass": {
        "description": "The class name of the default clothing simulation factory.\nKnown providers are:\nClothingSimulationFactoryNv\n",
        "value": 0.0
    },
    "p.Cloth.MaxDeltaTimeTeleportMultiplier": {
        "description": "A multiplier of the MaxPhysicsDelta time at which we will automatically just teleport cloth to its new location\n default: 1.5",
        "value": 1.5
    },
    "p.ClothPhysics": {
        "description": "If 1, physics cloth will be used for simulation.",
        "value": 1.0
    },
    "p.ClothPhysics.UseTaskThread": {
        "description": "If 1, run cloth on the task thread. If 0, run on game thread.",
        "value": 1.0
    },
    "p.ClothPhysics.WaitForParallelClothTask": {
        "description": "If 1, always wait for cloth task completion in the Cloth Tick function. If 0, wait at end-of-frame updates instead if allowed by component settings",
        "value": 0.0
    },
    "p.ClusterDistanceThreshold": {
        "description": "How close a cluster child must be to a contact to break off",
        "value": 100.0
    },
    "p.ClusterSnapDistance": {
        "description": "",
        "value": 1.0
    },
    "p.CollisionAngularFriction": {
        "description": "Collision angular friction for all contacts if >= 0",
        "value": -1.0
    },
    "p.CollisionBoundsVelocityInflation": {
        "description": "Collision velocity inflation for speculatibe contact generation.[def:2.0]",
        "value": 2.0
    },
    "p.CollisionCanAlwaysDisableContacts": {
        "description": "Collision culling will always be able to permanently disable contacts",
        "value": 0.0
    },
    "p.CollisionCanNeverDisableContacts": {
        "description": "Collision culling will never be able to permanently disable contacts",
        "value": 0.0
    },
    "p.CollisionCullDistance": {
        "description": "Collision culling distance override if >= 0",
        "value": -1.0
    },
    "p.CollisionDisableCulledContacts": {
        "description": "Allow the PBDRigidsEvolutionGBF collision constraints to throw out contacts mid solve if they are culled.",
        "value": 0.0
    },
    "p.CollisionFriction": {
        "description": "Collision friction for all contacts if >= 0",
        "value": -1.0
    },
    "p.CollisionParticlesBVHDepth": {
        "description": "The maximum depth for collision particles bvh",
        "value": 4.0
    },
    "p.CollisionParticlesMax": {
        "description": "Maximum number of particles after simplicial pruning",
        "value": 2000.0
    },
    "p.CollisionParticlesMin": {
        "description": "Minimum number of particles after simplicial pruning (assuming it started with more)",
        "value": 10.0
    },
    "p.CollisionParticlesPerObjectFractionDefault": {
        "description": "Fraction of verts",
        "value": 1.0
    },
    "p.CollisionParticlesSpatialDivision": {
        "description": "Spatial bucketing to cull collision particles.",
        "value": 10.0
    },
    "p.CollisionParticlesUseImplicitCulling": {
        "description": "Use the implicit to cull interior vertices.",
        "value": 0.0
    },
    "p.CollisionRestitution": {
        "description": "Collision restitution for all contacts if >= 0",
        "value": -1.0
    },
    "p.CollisionRestitutionThreshold": {
        "description": "Collision restitution threshold override if >= 0 (units of acceleration)",
        "value": -1.0
    },
    "p.ComputeClusterCollisionStrains": {
        "description": "Whether to use collision constraints when processing clustering.",
        "value": 1.0
    },
    "p.ConstraintAngularDampingScale": {
        "description": "The multiplier of constraint angular damping in simulation. Default: 100000",
        "value": 100000.0
    },
    "p.ConstraintAngularStiffnessScale": {
        "description": "The multiplier of constraint angular stiffness in simulation. Default: 100000",
        "value": 100000.0
    },
    "p.ConstraintBPBVHDepth": {
        "description": "The maximum depth for constraint bvh",
        "value": 2.0
    },
    "p.ConstraintLinearDampingScale": {
        "description": "The multiplier of constraint linear damping in simulation. Default: 1",
        "value": 1.0
    },
    "p.ConstraintLinearStiffnessScale": {
        "description": "The multiplier of constraint linear stiffness in simulation. Default: 1",
        "value": 1.0
    },
    "p.ContactOffsetFactor": {
        "description": "Multiplied by min dimension of object to calculate how close objects get before generating contacts. < 0 implies use project settings. Default: 0.01",
        "value": -1.0
    },
    "p.DeactivateClusterChildren": {
        "description": "If children should be decativated when broken and put into another cluster.",
        "value": 0.0
    },
    "p.DefaultCollisionFriction": {
        "description": "Collision friction default value if no materials are found.",
        "value": 0.0
    },
    "p.DefaultCollisionRestitution": {
        "description": "Collision restitution default value if no materials are found.",
        "value": 0.0
    },
    "p.DisableQueryOnlyActors": {
        "description": "If QueryOnly is used, actors are marked as simulation disabled. This is NOT compatible with origin shifting at the moment.",
        "value": 0.0
    },
    "p.DisableThreshold2": {
        "description": "Disable threshold frames to transition to sleeping",
        "value": 5.0
    },
    "p.EnableCollisions": {
        "description": "Enable/Disable collisions on the Chaos solver.",
        "value": 1.0
    },
    "p.EnableDynamicPerBodyFilterHacks": {
        "description": "Enables/Disables the use of a set of game focused hacks - allowing users to modify skel body collision dynamically (changes the behavior of per-body collision filtering).",
        "value": 0.0
    },
    "p.EnableFastOverlapCheck": {
        "description": "Enable fast overlap check against sweep hits, avoiding UpdateOverlaps (for the swept component).",
        "value": 1.0
    },
    "p.EnableKinematicDeferralPrePhysicsCondition": {
        "description": "If is 1, and deferral would've been disallowed due to EUpdateTransformFlags, allow if in PrePhysics tick. If 0, condition is unchanged.",
        "value": 1.0
    },
    "p.EnableKinematicDeferralStartPhysicsCondition": {
        "description": "If is 1, allow kinematics to be deferred in start physics (probably only called from replication tick). If 0, no deferral in startphysics.",
        "value": 1.0
    },
    "p.EnableMultiplayerWorldOriginRebasing": {
        "description": "Enable world origin rebasing for multiplayer, meaning that servers and clients can have different world origin locations.",
        "value": 0.0
    },
    "p.EncroachEpsilon": {
        "description": "Epsilon value used during encroachment checking for shape components\n0: use full sized shape. > 0: shrink shape size by this amount (world units)",
        "value": 0.15000000596046448
    },
    "p.ErrorAccumulationDistanceSq": {
        "description": "",
        "value": -1.0
    },
    "p.ErrorAccumulationSeconds": {
        "description": "",
        "value": -1.0
    },
    "p.ErrorAccumulationSimilarity": {
        "description": "",
        "value": -1.0
    },
    "p.ErrorPerAngularDifference": {
        "description": "",
        "value": -1.0
    },
    "p.ErrorPerLinearDifference": {
        "description": "",
        "value": -1.0
    },
    "p.FindAllIntersectionsSingleThreaded": {
        "description": "",
        "value": 1.0
    },
    "p.FixBadAccelerationStructureRemoval": {
        "description": "",
        "value": 1.0
    },
    "p.FixReplayOverSampling": {
        "description": "If 1, remove invalid replay samples that can occur due to oversampling (sampling at higher rate than physics is being ticked)",
        "value": 1.0
    },
    "p.ForceJumpPeakSubstep": {
        "description": "If 1, force a jump substep to always reach the peak position of a jump, which can often be cut off as framerate lowers.",
        "value": 1.0
    },
    "p.ForceMbpClient": {
        "description": "Forces all created scenes to use MBP on client builds",
        "value": 0.0
    },
    "p.ForceMbpServer": {
        "description": "Forces all created scenes to use MBP on server builds",
        "value": 0.0
    },
    "p.ForceNoKKPairs": {
        "description": "Disables kinematic-kinematic pairs. This is required when using APEX destruction to correctly generate chunk pairs - when not using destruction this speeds up the broadphase by early rejecting KK pairs.",
        "value": 0.0
    },
    "p.ForceNoKSPairs": {
        "description": "Disables kinematic-static pairs. This makes converting from static to dynamic a little slower - but provides better broadphase performance because we early reject those pairs.",
        "value": 0.0
    },
    "p.ForceStandardSQ": {
        "description": "If enabled, we force the standard scene query even if custom SQ structure is enabled",
        "value": 0.0
    },
    "p.GeometryCollectionCollideAll": {
        "description": "Bypass the collision matrix and make geometry collections collide against everything",
        "value": 1.961817850054744e-44
    },
    "p.GeometryCollectionDisableGravity": {
        "description": "Disable gravity for geometry collections",
        "value": 1.961817850054744e-44
    },
    "p.GeometryCollectionNavigationSizeThreshold": {
        "description": "Size in CM used as a threshold for whether a geometry in the collection is collected and exported for navigation purposes. Measured as the diagonal of the leaf node bounds.",
        "value": 20.0
    },
    "p.HackAngularDrag2": {
        "description": "Angular drag used to slow down objects. This is a hack and should not be relied on as a feature.",
        "value": 0.0
    },
    "p.HackLinearDrag2": {
        "description": "Linear drag used to slow down objects. This is a hack and should not be relied on as a feature.",
        "value": 0.0
    },
    "p.HackMaxAngularVelocity": {
        "description": "Max cap on angular velocity: rad/s. This is only a temp solution and should not be relied on as a feature. -1.f to disable",
        "value": 1000.0
    },
    "p.HackMaxVelocity2": {
        "description": "Max cap on velocity: cm/s. This is only a temp solution and should not be relied on as a feature. -1.f to disable",
        "value": -1.0
    },
    "p.HitDistanceTolerance": {
        "description": "Tolerance for hit distance for overlap test in PrimitiveComponent movement.\nHits that are less than this distance are ignored.",
        "value": 0.0
    },
    "p.IgnoreAnalyticCollisionsOverride": {
        "description": "Overrides the default for ignroing analytic collsions.",
        "value": 0.0
    },
    "p.InitialOverlapTolerance": {
        "description": "Tolerance for initial overlapping test in PrimitiveComponent movement.\nNormals within this tolerance are ignored if moving out of the object.\nDot product of movement direction and surface normal.",
        "value": 0.0
    },
    "p.IterationsPerTimeSlice": {
        "description": "",
        "value": 4000.0
    },
    "p.LevelSetAvgAngleErrorTolerance": {
        "description": "Average error in of the mesh normal and computed normal on the level set.",
        "value": 1.0
    },
    "p.LevelSetAvgDistErrorTolerance": {
        "description": "Error tolerance for average distance between the triangles and generated levelset.  Note this is a fraction of the average bounding box dimensions.",
        "value": 1.0
    },
    "p.LevelSetFailureOnHighError": {
        "description": "Set level sets with high error to null in the solver",
        "value": 0.0
    },
    "p.LevelSetMaxDistErrorTolerance": {
        "description": "Max error for the highest error triangle generated from a levelset.  Note this is a fraction of the average bounding box dimensions.",
        "value": 1.0
    },
    "p.LevelSetOutputFailedDebugData": {
        "description": "Output debug obj files for level set and mesh when error tolerances are too high",
        "value": 0.0
    },
    "p.LevelsetGhostCells": {
        "description": "Increase the level set grid by this many ghost cells",
        "value": 1.0
    },
    "p.LevelsetOverlapCapsuleSamples": {
        "description": "Number of spiral points to generate for levelset-capsule overlaps",
        "value": 24.0
    },
    "p.LevelsetOverlapSphereSamples": {
        "description": "Number of spiral points to generate for levelset-sphere overlaps",
        "value": 16.0
    },
    "p.LinearEtherDragOverride": {
        "description": "Set an override linear ether drag value. -1.f to disable",
        "value": -1.0
    },
    "p.LinearVelocityCoefficient": {
        "description": "",
        "value": -1.0
    },
    "p.MassPropertiesFromMultiChildProxy": {
        "description": "",
        "value": 1.0
    },
    "p.MaxBoundsForTree": {
        "description": "The max bounds before moving object into a large objects structure. Only applies on object registration",
        "value": 10000.0
    },
    "p.MaxChildrenInLeaf": {
        "description": "",
        "value": 5.0
    },
    "p.MaxContactOffset": {
        "description": "Max value of contact offset, which controls how close objects get before generating contacts. < 0 implies use project settings. Default: 1.0",
        "value": -1.0
    },
    "p.MaxDirtyElements": {
        "description": "The max number of dirty elements. This forces a flush which is very expensive",
        "value": 10000.0
    },
    "p.MaxLevelsetDimension": {
        "description": "The maximum number of cells on a single level set axis",
        "value": 20.0
    },
    "p.MaxLinearHardSnapDistance": {
        "description": "",
        "value": -1.0
    },
    "p.MaxPayloadSize": {
        "description": "",
        "value": 100000.0
    },
    "p.MaxRestoredStateError": {
        "description": "",
        "value": -1.0
    },
    "p.MaxTreeDepth": {
        "description": "",
        "value": 200.0
    },
    "p.MinBoundsThickness": {
        "description": "",
        "value": 0.10000000149011612
    },
    "p.MinChildrenForMultiProxy": {
        "description": "Min number of children needed for multi child proxy optimization",
        "value": 1.0
    },
    "p.MinCleanedPointsBeforeRemovingInternals": {
        "description": "If we only have this many clean points, don't bother removing internal points as the object is likely very small",
        "value": 10.0
    },
    "p.MinLevelsetDimension": {
        "description": "The minimum number of cells on a single level set axis",
        "value": 4.0
    },
    "p.MinLevelsetSize": {
        "description": "The minimum size on the smallest axis to use a level set",
        "value": 50.0
    },
    "p.MoveClustersWhenDeactivated": {
        "description": "If clusters should be moved when deactivated.",
        "value": 0.0
    },
    "p.MoveIgnoreFirstBlockingOverlap": {
        "description": "Whether to ignore the first blocking overlap in SafeMoveUpdatedComponent (if moving out from object and starting in penetration).\nThe 'p.InitialOverlapTolerance' setting determines the 'move out' rules, but by default we always try to depenetrate first (not ignore the hit).\n0: Disable (do not ignore), 1: Enable (ignore)",
        "value": 0.0
    },
    "p.NetEnableListenServerSmoothing": {
        "description": "Whether to enable mesh smoothing on listen servers for the local view of remote clients.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "p.NetEnableMoveCombining": {
        "description": "Whether to enable move combining on the client to reduce bandwidth by combining similar moves.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "p.NetEnableMoveCombiningOnStaticBaseChange": {
        "description": "Whether to allow combining client moves when moving between static geometry.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "p.NetEnableSkipProxyPredictionOnNetUpdate": {
        "description": "Whether to allow proxies to skip prediction on frames with a network position update, if bNetworkSkipProxyPredictionOnNetUpdate is also true on the movement component.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "p.NetMoveCombiningAttachedLocationTolerance": {
        "description": "Tolerance for relative location attachment change when combining moves. Small tolerances allow for very slight jitter due to transform updates.",
        "value": 0.009999999776482582
    },
    "p.NetMoveCombiningAttachedRotationTolerance": {
        "description": "Tolerance for relative rotation attachment change when combining moves. Small tolerances allow for very slight jitter due to transform updates.",
        "value": 0.009999999776482582
    },
    "p.NetPackedMovementMaxBits": {
        "description": "Max number of bits allowed in each packed movement RPC. Used to protect against bad data causing the server to allocate too much memory.\n",
        "value": 2048.0
    },
    "p.NetPingExtrapolation": {
        "description": "",
        "value": -1.0
    },
    "p.NetPingLimit": {
        "description": "",
        "value": -1.0
    },
    "p.NetStationaryRotationTolerance": {
        "description": "Tolerance for GetClientNetSendDeltaTime() to remain throttled when small control rotation changes occur.",
        "value": 0.10000000149011612
    },
    "p.NetUseClientTimestampForReplicatedTransform": {
        "description": "If enabled, use client timestamp changes to track the replicated transform timestamp, otherwise uses server tick time as the timestamp.\nGame session usually needs to be restarted if this is changed at runtime.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "p.NetUsePackedMovementRPCs": {
        "description": "Whether to use newer movement RPC parameter packed serialization. If disabled, old deprecated movement RPCs will be used instead.\n0: Disable, 1: Enable",
        "value": 1.0
    },
    "p.NormalAveraging2": {
        "description": "",
        "value": 0.0
    },
    "p.OverrideMbpNumSubdivisionsClient": {
        "description": "Override for number of subdivisions to perform when building MBP regions on a client, note regions are only generated when a scene is created - this will not update the scene if it's already running (0 = No override, 1>16 - Override number)",
        "value": 0.0
    },
    "p.OverrideMbpNumSubdivisionsServer": {
        "description": "Override for number of subdivisions to perform when building MBP regions on a server, note regions are only generated when a scene is created - this will not update the scene if it's already running (0 = No override, 1>16 - Override number)",
        "value": 0.0
    },
    "p.PenetrationOverlapCheckInflation": {
        "description": "Inflation added to object when checking if a location is free of blocking collision.\nDistance added to inflation in penetration overlap check.",
        "value": 0.10000000149011612
    },
    "p.PenetrationPullbackDistance": {
        "description": "Pull out from penetration of an object by this extra distance.\nDistance added to penetration fix-ups.",
        "value": 0.125
    },
    "p.PhysXTreeRebuildRate": {
        "command": true,
        "description": "Utility function to change PhysXTreeRebuildRate, useful when profiling fetchResults vs scene queries."
    },
    "p.PhysicsAnimBlendUpdatesPhysX": {
        "description": "Whether to update the physx simulation with the results of physics animation blending",
        "value": 1.0
    },
    "p.PositionLerp": {
        "description": "",
        "value": -1.0
    },
    "p.RK4SpringInterpolator.MaxIter": {
        "description": "RK4 Spring Interpolator's max number of iterations",
        "value": 4.0
    },
    "p.RK4SpringInterpolator.UpdateRate": {
        "description": "RK4 Spring Interpolator's rate of update",
        "value": 60.0
    },
    "p.RagdollPhysics": {
        "description": "If 1, ragdoll physics will be used. Otherwise just root body is simulated",
        "value": 1.0
    },
    "p.RemoveFarBodiesFromBVH": {
        "description": "Removes bodies far from the scene from the bvh\n0: Kept, 1: Removed",
        "value": 0.0
    },
    "p.ReplayLerpAcceleration": {
        "description": "",
        "value": 0.0
    },
    "p.ReplayUseInterpolation": {
        "description": "",
        "value": 0.0
    },
    "p.ReportTooManyChildrenNum": {
        "description": "Issue warning if more than this many children exist in a single cluster",
        "value": -1.0
    },
    "p.RewindCaptureNumFrames": {
        "description": "The number of frames to capture rewind for. Requires restart of solver",
        "value": -1.0
    },
    "p.RigidBodyLODThreshold": {
        "description": "Max LOD that rigid body node is allowed to run on. Provides a global threshold that overrides per-node the LODThreshold property. -1 means no override.",
        "value": -1.0
    },
    "p.RigidBodyNode": {
        "description": "Enables/disables the whole rigid body node system. When disabled, avoids all allocations and runtime costs. Can be used to disable RB Nodes on low-end platforms.",
        "value": 1.0
    },
    "p.RigidBodyNode.EnableComponentAcceleration": {
        "description": "Enable/Disable the simple acceleration transfer system for component- or bone-space simulation",
        "value": 1.961817850054744e-44
    },
    "p.RigidBodyNode.EnableSimulation": {
        "description": "Runtime Enable/Disable RB Node Simulation for debugging and testing (node is initialized and bodies and constraints are created, even when disabled.)",
        "value": 1.0
    },
    "p.RigidBodyNode.EnableTimeBasedReset": {
        "description": "If true, Rigid Body nodes are reset when they have not been updated for a while (default true)",
        "value": 1.961817850054744e-44
    },
    "p.RigidBodyNode.MaxSubSteps": {
        "description": "Set the maximum number of simulation steps in the update loop",
        "value": 4.0
    },
    "p.RigidBodyNode.Space.ExternalLinearDrag.X": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 0.0
    },
    "p.RigidBodyNode.Space.ExternalLinearDrag.Y": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 0.0
    },
    "p.RigidBodyNode.Space.ExternalLinearDrag.Z": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 0.0
    },
    "p.RigidBodyNode.Space.ExternalLinearVelocity.X": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 0.0
    },
    "p.RigidBodyNode.Space.ExternalLinearVelocity.Y": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 0.0
    },
    "p.RigidBodyNode.Space.ExternalLinearVelocity.Z": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 0.0
    },
    "p.RigidBodyNode.Space.MasterAlpha": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 0.0
    },
    "p.RigidBodyNode.Space.MaxAngularAcceleration": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 10000.0
    },
    "p.RigidBodyNode.Space.MaxAngularVelocity": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 10000.0
    },
    "p.RigidBodyNode.Space.MaxLinearAcceleration": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 10000.0
    },
    "p.RigidBodyNode.Space.MaxLinearVelocity": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 10000.0
    },
    "p.RigidBodyNode.Space.Override": {
        "description": "Force-enable the advanced simulation space movement forces",
        "value": 1.961817850054744e-44
    },
    "p.RigidBodyNode.Space.VelocityScaleZ": {
        "description": "RBAN SimSpaceSettings overrides",
        "value": 1.0
    },
    "p.RigidBodyNode.WorldObjectExpiry": {
        "description": "World objects are removed from the simulation if not detected after this many tests",
        "value": 4.0
    },
    "p.SampleMinParticlesForAcceleration": {
        "description": "The minimum number of particles needed before using an acceleration structure when sampling",
        "value": 2048.0
    },
    "p.SerializeEvolution": {
        "description": "",
        "value": 0.0
    },
    "p.SimCollisionEnabled": {
        "description": "If 0 no sim collision will be used",
        "value": 1.0
    },
    "p.SkipPhysicsReplication": {
        "description": "",
        "value": 0.0
    },
    "p.SkipSkeletalRepOptimization": {
        "description": "If true, we don't move the skeletal mesh component during replication. This is ok because the skeletal mesh already polls physx after its results",
        "value": 1.0
    },
    "p.SkipUpdateOverlapsOptimEnabled": {
        "description": "If enabled, we cache whether we need to call UpdateOverlaps on certain components",
        "value": 1.0
    },
    "p.ToleranceScale_Length": {
        "description": "The approximate size of objects in the simulation. Default: 100",
        "value": 100.0
    },
    "p.ToleranceScale_Speed": {
        "description": "The typical magnitude of velocities of objects in simulation. Default: 1000",
        "value": 1000.0
    },
    "p.TriMeshBufferOverflowCounter": {
        "description": "Loop logging counter - set to -1 to disable logging",
        "value": -1.0
    },
    "p.UnionsHaveCollisionParticles": {
        "description": "",
        "value": 0.0
    },
    "p.UseAccumulationArray": {
        "description": "",
        "value": 1.0
    },
    "p.UseConnectivity": {
        "description": "Whether to use connectivity graph when breaking up clusters",
        "value": 1.0
    },
    "p.UseLevelsetCollision": {
        "description": "Whether unioned objects use levelsets",
        "value": 0.0
    },
    "p.UseMultiChildProxy": {
        "description": "Whether to merge multiple children into a single collision proxy when one is available",
        "value": 1.0
    },
    "p.UseResimCache": {
        "description": "Whether resim uses cache to skip work, requires recreating world to take effect",
        "value": 0.0
    },
    "p.aabbtree.updatedirtyelementpayloads": {
        "description": "Allow AABB tree elements to update internal payload data when they recieve a payload update",
        "value": 1.0
    },
    "p.bUseUnifiedHeightfield": {
        "description": "Whether to use the PhysX unified heightfield. This feature of PhysX makes landscape collision consistent with triangle meshes but the thickness parameter is not supported for unified heightfields. 1 enables and 0 disables. Default: 1",
        "value": 1.0
    },
    "p.chaos.AllowCreatePhysxBodies": {
        "description": " 0 is off, 1 is on (default)",
        "value": 1.0
    },
    "p.chaos.DebugDrawAwake": {
        "description": "Draw particles that are awake",
        "value": 0.0
    },
    "p.chaos.MinContactSpeedForStrainEval": {
        "description": "Minimum speed at the contact before accumulating for strain eval ",
        "value": 1.0
    },
    "p.chaos.MinImpulseForStrainEval": {
        "description": "Minimum accumulated impulse before accumulating for strain eval ",
        "value": 65.33333587646484
    },
    "p.chaos.UseContactSpeedForStrainEval": {
        "description": "Whether to use contact speed to discard contacts when updating cluster strain (true: use speed, false: use impulse)",
        "value": 1.961817850054744e-44
    },
    "p.chaos.dumphierarcystats": {
        "command": true,
        "description": "Outputs current collision hierarchy stats to the output log"
    },
    "p.checkbox": {
        "description": "",
        "value": 1.0
    },
    "p.gc.ArrowScale": {
        "description": "Geometry Collection debug draw, arrow size for normals.\nDefault = 2.5.",
        "value": 2.5
    },
    "p.gc.AxisScale": {
        "description": "Geometry Collection debug draw, size of the axis used for visualizing all transforms.\nDefault = 20.",
        "value": 20.0
    },
    "p.gc.CollisionAtOrigin": {
        "description": "Geometry Collection debug draw, show any collision volume at the origin, in local space.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.DebugDrawClustering": {
        "description": "Geometry Collection debug draw, show debug visualization for all clustered children associated to the current rigid body id selection.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.DebugDrawHierarchy": {
        "description": "Geometry Collection debug draw, show debug visualization for the top level node rather than the bottom leaf nodes of a cluster's hierarchy..\nDefault = 0",
        "value": 0.0
    },
    "p.gc.DebugDrawWholeCollection": {
        "description": "Geometry Collection debug draw, show debug visualization for the rest of the geometry collection related to the current rigid body id selection.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.HideGeometry": {
        "description": "Geometry Collection debug draw, geometry visibility setting, select the part of the geometry to hide in order to better visualize the debug information.\n0: Do not hide any geometries.\n1: Hide the geometry associated to the rigid bodies selected for collision display.\n2: Hide the geometry associated to the selected rigid bodies.\n3: Hide the entire geometry collection associated to the selected rigid bodies.\n4: Hide all geometry collections.\nDefault = 1",
        "value": 1.0
    },
    "p.gc.LineThickness": {
        "description": "Geometry Collection debug draw, line thickness.\nDefault = 1.",
        "value": 1.0
    },
    "p.gc.NormalScale": {
        "description": "Geometry Collection debug draw, normal size.\nDefault = 10.",
        "value": 10.0
    },
    "p.gc.PointThickness": {
        "description": "Geometry Collection debug draw, point thickness.\nDefault = 6.",
        "value": 6.0
    },
    "p.gc.ReportHighParticleFraction": {
        "description": "Report any objects with particle fraction above this threshold",
        "value": -1.0
    },
    "p.gc.ReportNoLevelsetCluster": {
        "description": "Report any cluster objects without levelsets",
        "value": 0.0
    },
    "p.gc.SelectedRigidBodyId": {
        "description": "Geometry Collection debug draw, visualize debug informations for the selected rigid body ids.\nDefault = -1",
        "value": -1.0
    },
    "p.gc.SelectedRigidBodySolver": {
        "description": "Geometry Collection debug draw, visualize debug informations for the selected rigid body solver.\nDefault = None",
        "value": 0.0
    },
    "p.gc.ShowBoundingBox": {
        "description": "Geometry Collection debug draw, show the bounding box for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowConnectivityEdges": {
        "description": "Geometry Collection debug draw, show the connectivity edges for the rigid body's associated cluster nodes.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowFaceIndices": {
        "description": "Geometry Collection debug draw, show the face indices for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowFaceNormals": {
        "description": "Geometry Collection debug draw, show the face normals for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowFaces": {
        "description": "Geometry Collection debug draw, show the faces for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowGeometryIndex": {
        "description": "Geometry Collection debug draw, show the geometry index for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowGeometryTransform": {
        "description": "Geometry Collection debug draw, show the geometry transform for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowLevel": {
        "description": "Geometry Collection debug draw, show the hierarchical level for the selected rigid body's associated cluster nodes.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowParent": {
        "description": "Geometry Collection debug draw, show a link from the selected rigid body's associated cluster nodes to their parent's nodes.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowRigidBodyCollision": {
        "description": "Geometry Collection debug draw, show the selected's rigid body's collision volume.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowRigidBodyForce": {
        "description": "Geometry Collection debug draw, show the selected's rigid body's applied force and torque.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowRigidBodyId": {
        "description": "Geometry Collection debug draw, show the rigid body id(s).\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowRigidBodyInertia": {
        "description": "Geometry Collection debug draw, show the selected's rigid body's inertia tensor box.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowRigidBodyInfos": {
        "description": "Geometry Collection debug draw, show the selected's rigid body's information.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowRigidBodyTransform": {
        "description": "Geometry Collection debug draw, show the selected's rigid body's transform.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowRigidBodyVelocity": {
        "description": "Geometry Collection debug draw, show the selected's rigid body's linear and angular velocities.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowSingleFace": {
        "description": "Geometry Collection debug draw, enable single face visualization for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowTransform": {
        "description": "Geometry Collection debug draw, show the transform for the selected rigid body's associated cluster nodes.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowTransformIndex": {
        "description": "Geometry Collection debug draw, show the transform index for the selected rigid body's associated cluster nodes.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowVertexIndices": {
        "description": "Geometry Collection debug draw, show the vertex index for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowVertexNormals": {
        "description": "Geometry Collection debug draw, show the vertex normals for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.ShowVertices": {
        "description": "Geometry Collection debug draw, show the vertices for the selected rigid body's associated geometries.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.SingleFaceIndex": {
        "description": "Geometry Collection debug draw, the index of the single face to visualize.\nDefault = 0",
        "value": 0.0
    },
    "p.gc.TextScale": {
        "description": "Geometry Collection debug draw, text scale.\nDefault = 1.",
        "value": 1.0
    },
    "p.gc.TextShadow": {
        "description": "Geometry Collection debug draw, text shadow under indices for better readability.\nDefault = 1.",
        "value": 1.0
    },
    "p.gc.UseActiveVisualization": {
        "description": "Geometry Collection debug draw, adapt visualization depending of the cluster nodes' hierarchical level..\nDefault = 1.",
        "value": 1.0
    },
    "p.gc.logcachereduction": {
        "description": "Logs amount of data removed from a cache after processing",
        "value": 0.0
    },
    "p.simDelay": {
        "description": "",
        "value": 0.0
    },
    "pak.DumpBlocks": {
        "command": true,
        "description": "Debug command to spew the outstanding blocks."
    },
    "pak.WaitPrecache": {
        "command": true,
        "description": "Debug command to wait on the pak precache."
    },
    "pakcache.CachePerPakFile": {
        "description": "if > 0, then each pak file will have it's own cache",
        "value": 0.0
    },
    "pakcache.Enable": {
        "description": "If > 0, then enable the pak cache.",
        "value": 1.0
    },
    "pakcache.EnableNoCaching": {
        "description": "if > 0, then we'll allow a read requests pak cache memory to be ditched early",
        "value": 0.0
    },
    "pakcache.MaxBlockMemory": {
        "description": "A soft memory budget in MB for the max memory used for precaching, that we'll try and adhere to ",
        "value": 128.0
    },
    "pakcache.MaxRequestSizeToLowerLevellKB": {
        "description": "Controls the maximum size (in KB) of IO requests submitted to the OS filesystem.",
        "value": 1024.0
    },
    "pakcache.MaxRequestsToLowerLevel": {
        "description": "Controls the maximum number of IO requests submitted to the OS filesystem at one time. Limited by PAK_CACHE_MAX_REQUESTS.",
        "value": 2.0
    },
    "pakcache.NumUnreferencedBlocksToCache": {
        "description": "Controls the maximum number of unreferenced blocks to keep. This is a classic disk cache and the maxmimum wasted memory is pakcache.MaxRequestSizeToLowerLevellKB * pakcache.NumUnreferencedBlocksToCache.",
        "value": 10.0
    },
    "pakcache.TimeToTrim": {
        "description": "Controls how long to hold onto a cached but unreferenced block for.",
        "value": 0.0
    },
    "pakcache.UseNewTrim": {
        "description": "if > 0, then we'll use a round robin per pak file trim",
        "value": 0.0
    },
    "r.AMDD3D11MultiThreadedDevice": {
        "description": "If true, creates a multithreaded D3D11 device on AMD hardware (workaround for driver bug)\nChanges will only take effect in new game/editor instances - can't be changed at runtime.\n",
        "value": 0.0
    },
    "r.AMDDisableAsyncTextureCreation": {
        "description": "If true, uses synchronous texture creation on AMD hardware (workaround for driver bug)\nChanges will only take effect in new game/editor instances - can't be changed at runtime.\n",
        "value": 0.0
    },
    "r.AOApplyToStaticIndirect": {
        "description": "Whether to apply DFAO as indirect shadowing even to static indirect sources (lightmaps + stationary skylight + reflection captures)",
        "value": 0.0
    },
    "r.AOAsyncBuildQueue": {
        "description": "Whether to asynchronously build distance field volume data from meshes.",
        "value": 1.0
    },
    "r.AOAverageObjectsPerCullTile": {
        "description": "Determines how much memory should be allocated in distance field object culling data structures.  Too much = memory waste, too little = flickering due to buffer overflow.",
        "value": 512.0
    },
    "r.AOClearHistory": {
        "description": "",
        "value": 0.0
    },
    "r.AOComputeShaderNormalCalculation": {
        "description": "Whether to use the compute shader version of the distance field normal computation.",
        "value": 0.0
    },
    "r.AOGlobalDFClipmapDistanceExponent": {
        "description": "Exponent used to derive each clipmap's size, together with r.AOInnerGlobalDFClipmapDistance.",
        "value": 2.0
    },
    "r.AOGlobalDFResolution": {
        "description": "Resolution of the global distance field.  Higher values increase fidelity but also increase memory and composition cost.",
        "value": 128.0
    },
    "r.AOGlobalDFStartDistance": {
        "description": "World space distance along a cone trace to switch to using the global distance field instead of the object distance fields.\nThis has to be large enough to hide the low res nature of the global distance field, but smaller values result in faster cone tracing.",
        "value": 100.0
    },
    "r.AOGlobalDistanceField": {
        "description": "Whether to use a global distance field to optimize occlusion cone traces.\nThe global distance field is created by compositing object distance fields into clipmaps as the viewer moves through the level.",
        "value": 1.0
    },
    "r.AOGlobalDistanceFieldCacheMostlyStaticSeparately": {
        "description": "Whether to cache mostly static primitives separately from movable primitives, which reduces global DF update cost when a movable primitive is modified.  Adds another 12Mb of volume textures.",
        "value": 1.0
    },
    "r.AOGlobalDistanceFieldForceFullUpdate": {
        "description": "Whether to force full global distance field update every frame.",
        "value": 0.0
    },
    "r.AOGlobalDistanceFieldLogModifiedPrimitives": {
        "description": "Whether to log primitive modifications (add, remove, updatetransform) that caused an update of the global distance field.\nThis can be useful for tracking down why updating the global distance field is always costing a lot, since it should be mostly cached.",
        "value": 0.0
    },
    "r.AOGlobalDistanceFieldPartialUpdates": {
        "description": "Whether to allow partial updates of the global distance field.  When profiling it's useful to disable this and get the worst case composition time that happens on camera cuts.",
        "value": 1.0
    },
    "r.AOGlobalDistanceFieldRepresentHeightfields": {
        "description": "Whether to put landscape in the global distance field.  Changing this won't propagate until the global distance field gets recached (fly away and back).",
        "value": 1.0
    },
    "r.AOGlobalDistanceFieldStaggeredUpdates": {
        "description": "Whether to allow the larger clipmaps to be updated less frequently.",
        "value": 1.0
    },
    "r.AOHeightfieldOcclusion": {
        "description": "Whether to compute AO from heightfields (landscape)",
        "value": 0.0
    },
    "r.AOHistoryDistanceThreshold": {
        "description": "World space distance threshold needed to discard last frame's DFAO results.  Lower values reduce ghosting from characters when near a wall but increase flickering artifacts.",
        "value": 30.0
    },
    "r.AOHistoryStabilityPass": {
        "description": "Whether to gather stable results to fill in holes in the temporal reprojection.  Adds some GPU cost but improves temporal stability with foliage.",
        "value": 1.0
    },
    "r.AOHistoryWeight": {
        "description": "Amount of last frame's AO to lerp into the final result.  Higher values increase stability, lower values have less streaking under occluder movement.",
        "value": 0.8500000238418579
    },
    "r.AOJitterConeDirections": {
        "description": "",
        "value": 0.0
    },
    "r.AOListMemory": {
        "command": true,
        "description": ""
    },
    "r.AOListMeshDistanceFields": {
        "command": true,
        "description": ""
    },
    "r.AOLogObjectBufferReallocation": {
        "description": "",
        "value": 0.0
    },
    "r.AOMaxObjectBoundingRadius": {
        "description": "Objects larger than this will not contribute to AO calculations, to improve performance.",
        "value": 50000.0
    },
    "r.AOMaxViewDistance": {
        "description": "The maximum distance that AO will be computed at.",
        "value": 20000.0
    },
    "r.AOObjectDistanceField": {
        "description": "Determines whether object distance fields are used to compute ambient occlusion.\nOnly global distance field will be used when this option is disabled.\n",
        "value": 1.0
    },
    "r.AOOverwriteSceneColor": {
        "description": "",
        "value": 0.0
    },
    "r.AOQuality": {
        "description": "Defines the distance field AO method which allows to adjust for quality or performance.\n 0:off, 1:medium, 2:high (default)",
        "value": 2.0
    },
    "r.AOSampleSet": {
        "description": "0 = Original set, 1 = Relaxed set",
        "value": 1.0
    },
    "r.AOScatterTileCulling": {
        "description": "Whether to use the rasterizer for binning occluder objects into screenspace tiles.",
        "value": 1.0
    },
    "r.AOSpecularOcclusionMode": {
        "description": "Determines how specular should be occluded by DFAO\n0: Apply non-directional AO to specular.\n1: (default) Intersect the reflection cone with the unoccluded cone produced by DFAO.  This gives more accurate occlusion than 0, but can bring out DFAO sampling artifacts.\n",
        "value": 1.0
    },
    "r.AOStepExponentScale": {
        "description": "Exponent used to distribute AO samples along a cone direction.",
        "value": 0.5
    },
    "r.AOUpdateGlobalDistanceField": {
        "description": "Whether to update the global distance field, useful for debugging.",
        "value": 1.0
    },
    "r.AOUseHistory": {
        "description": "Whether to apply a temporal filter to the distance field AO, which reduces flickering but also adds trails when occluders are moving.",
        "value": 1.0
    },
    "r.AOUseJitter": {
        "description": "Whether to use 4x temporal supersampling with Screen Grid DFAO.  When jitter is disabled, a shorter history can be used but there will be more spatial aliasing.",
        "value": 1.0
    },
    "r.AOViewFadeDistanceScale": {
        "description": "Distance over which AO will fade out as it approaches r.AOMaxViewDistance, as a fraction of r.AOMaxViewDistance.",
        "value": 0.699999988079071
    },
    "r.AllowCachedUniformExpressions": {
        "description": "Allow uniform expressions to be cached.",
        "value": 1.0
    },
    "r.AllowClearLightSceneExtentsOnly": {
        "description": "",
        "value": 1.0
    },
    "r.AllowDepthBoundsTest": {
        "description": "If true, use enable depth bounds test when rendering defered lights.",
        "value": 1.0
    },
    "r.AllowGlobalClipPlane": {
        "description": "Enables mesh shaders to support a global clip plane, needed for planar reflections, which adds about 15% BasePass GPU cost on PS4.",
        "value": 0.0
    },
    "r.AllowHDR": {
        "description": "Creates an HDR compatible swap-chain and enables HDR display output.0: Disabled (default)\n1: Allow HDR, if supported by the platform and display \n",
        "value": 0.0
    },
    "r.AllowLandscapeShadows": {
        "description": "Allow Landscape Shadows",
        "value": 1.0
    },
    "r.AllowMultiGPUInEditor": {
        "description": "Enable experimental multi-GPU support in editor",
        "value": 0.0
    },
    "r.AllowOcclusionQueries": {
        "description": "If zero, occlusion queries will not be used to cull primitives.",
        "value": 1.0
    },
    "r.AllowPointLightCubemapShadows": {
        "description": "When 0, will prevent point light cube map shadows from being used and the light will be unshadowed.",
        "value": 1.0
    },
    "r.AllowPrecomputedVisibility": {
        "description": "If zero, precomputed visibility will not be used to cull primitives.",
        "value": 1.0
    },
    "r.AllowSimpleLights": {
        "description": "If true, we allow simple (ie particle) lights",
        "value": 1.0
    },
    "r.AllowStaticLighting": {
        "description": "Whether to allow any static lighting to be generated and used, like lightmaps and shadowmaps.\nGames that only use dynamic lighting should set this to 0 to save some static lighting overhead.",
        "value": 1.0
    },
    "r.AllowSubPrimitiveQueries": {
        "description": "Enables sub primitive queries, currently only used by hierarchical instanced static meshes. 1: Enable, 0 Disabled. When disabled, one query is used for the entire proxy.",
        "value": 1.0
    },
    "r.AllowTexture2DArrayCreation": {
        "description": "Enable UTexture2DArray assets",
        "value": 1.0
    },
    "r.AlsoUseSphereForFrustumCull": {
        "description": "Performance tweak. If > 0, then use a sphere cull before and in addition to a box for frustum culling.",
        "value": 0.0
    },
    "r.AmbientOcclusion.AsyncComputeBudget": {
        "description": "Defines which level of EAsyncComputeBudget to use for balancing AsyncCompute work against Gfx work.\nOnly matters if the compute version of SSAO is active (requires CS support, enabled by cvar, single pass, no normals)\nThis is a low level developer tweak to get best performance on hardware that supports AsyncCompute.\n 0: least AsyncCompute\n 1: .. (default)\n 2: .. \n 3: .. \n 4: most AsyncCompute",
        "value": 1.0
    },
    "r.AmbientOcclusion.Compute": {
        "description": "If SSAO should use ComputeShader (not available on all platforms) or PixelShader.\nThe [Async] Compute Shader version is WIP, not optimized, requires hardware support (not mobile/DX10/OpenGL3),\ndoes not use normals which allows it to run right after EarlyZPass (better performance when used with AyncCompute)\nAyncCompute is currently only functional on PS4.\n 0: PixelShader (default)\n 1: (WIP) Use ComputeShader if possible, otherwise fall back to '0'\n 2: (WIP) Use AsyncCompute if efficient, otherwise fall back to '1'\n 3: (WIP) Use AsyncCompute if possible, otherwise fall back to '1'",
        "value": 0.0
    },
    "r.AmbientOcclusion.Compute.Smooth": {
        "description": "Whether to smooth SSAO output when TAA is disabled",
        "value": 1.0
    },
    "r.AmbientOcclusion.Denoiser": {
        "description": "Choose the denoising algorithm.\n 0: Disabled;\n 1: Forces the default denoiser of the renderer;\n 2: GScreenSpaceDenoiser witch may be overriden by a third party plugin (default).",
        "value": 2.0
    },
    "r.AmbientOcclusion.Denoiser.HistoryConvolution.KernelSpreadFactor": {
        "description": "Multiplication factor applied on the kernel sample offset (default = 7).",
        "value": 7.0
    },
    "r.AmbientOcclusion.Denoiser.HistoryConvolution.SampleCount": {
        "description": "Number of samples to use for history post filter (default = 16).",
        "value": 1.0
    },
    "r.AmbientOcclusion.Denoiser.KernelSpreadFactor": {
        "description": "Spread factor of the preconvolution passes.",
        "value": 4.0
    },
    "r.AmbientOcclusion.Denoiser.PreConvolution": {
        "description": "Number of pre-convolution passes (default = 1).",
        "value": 2.0
    },
    "r.AmbientOcclusion.Denoiser.ReconstructionSamples": {
        "description": "Maximum number of samples for the reconstruction pass (default = 16).",
        "value": 16.0
    },
    "r.AmbientOcclusion.Denoiser.TemporalAccumulation": {
        "description": "Accumulates the samples over multiple frames.",
        "value": 1.0
    },
    "r.AmbientOcclusion.DepthBoundsTest": {
        "description": "Whether to use depth bounds test to cull distant pixels during AO pass. This option is only valid when pixel shader path is used (r.AmbientOcclusion.Compute=0), without upsampling.",
        "value": 1.0
    },
    "r.AmbientOcclusion.FadeRadiusScale": {
        "description": "Allows to scale the ambient occlusion fade radius (SSAO).\n 0.01:smallest .. 1.0:normal (default), <1:smaller, >1:larger",
        "value": 1.0
    },
    "r.AmbientOcclusion.Method": {
        "description": "Select between SSAO methods \n 0: SSAO (default)\n 1: GTAO\n ",
        "value": 0.0
    },
    "r.AmbientOcclusionLevels": {
        "description": "Defines how many mip levels are using during the ambient occlusion calculation. This is useful when tweaking the algorithm.\n<0: decide based on the quality setting in the postprocess settings/volume and r.AmbientOcclusionMaxQuality (default)\n 0: none (disable AmbientOcclusion)\n 1: one\n 2: two (costs extra performance, soft addition)\n 3: three (larger radius cost less but can flicker)",
        "value": -1.0
    },
    "r.AmbientOcclusionMaxQuality": {
        "description": "Defines the max clamping value from the post process volume's quality level for ScreenSpace Ambient Occlusion\n     100: don't override quality level from the post process volume (default)\n   0..99: clamp down quality level from the post process volume to the maximum set by this cvar\n -100..0: Enforces a different quality (the absolute value) even if the postprocessvolume asks for a lower quality.",
        "value": 100.0
    },
    "r.AmbientOcclusionMipLevelFactor": {
        "description": "Controls mipmap level according to the SSAO step id\n 0: always look into the HZB mipmap level 0 (memory cache trashing)\n 0.5: sample count depends on post process settings (default)\n 1: Go into higher mipmap level (quality loss)",
        "value": 0.4000000059604645
    },
    "r.AmbientOcclusionRadiusScale": {
        "description": "Allows to scale the ambient occlusion radius (SSAO).\n 0:off, 1.0:normal, <1:smaller, >1:larger",
        "value": 1.0
    },
    "r.AmbientOcclusionStaticFraction": {
        "description": "Allows to override the Ambient Occlusion Static Fraction (see post process volume). Fractions are between 0 and 1.\n<0: use default setting (default -1)\n 0: no effect on static lighting, 0 is free meaning no extra rendering pass\n 1: AO affects the stat lighting",
        "value": -1.0
    },
    "r.Android.DisableASTCSupport": {
        "description": "Disable support for ASTC Texture compression if OpenGL driver supports it. (Android Only)\n  0 = ASTC texture compression will be used if driver supports it [default]\n  1 = ASTC texture compression will not be used.",
        "value": 0.0
    },
    "r.Android.DisableOpenGLES31Support": {
        "description": "Disable support for OpenGLES 3.1 API. (Android Only)\n  0 = OpenGLES 3.1 API will be used (providing device and project supports it) [default]\n  1 = OpenGLES 3.1 will be disabled, Vulkan will be used.",
        "value": 0.0
    },
    "r.Android.DisableVulkanSM5Support": {
        "description": "Disable support for vulkan API. (Android Only)\n  0 = Vulkan SM5 API will be used (providing device and project supports it) [default]\n  1 = Vulkan SM5 will be disabled, Vulkan or OpenGL fall back will be used.",
        "value": 0.0
    },
    "r.Android.DisableVulkanSupport": {
        "description": "Disable support for vulkan API. (Android Only)\n  0 = vulkan API will be used (providing device and project supports it) [default]\n  1 = vulkan will be disabled, opengl fall back will be used.",
        "value": 0.0
    },
    "r.Android.OverrideExternalTextureSupport": {
        "description": "Override external texture support for OpenGLES API. (Android Only)\n  0 = normal detection used [default]\n  1 = disable external texture support\n  2 = force ImageExternal100 (version #100 with GL_OES_EGL_image_external)\n  3 = force ImageExternal300 (version #300 with GL_OES_EGL_image_external)\n  4 = force ImageExternalESSL300 (version #300 with GL_OES_EGL_image_external_essl3)",
        "value": 0.0
    },
    "r.AndroidDisableThreadedRendering": {
        "description": "Sets whether or not to allow threaded rendering for a particular Android device profile.\n\t0 = Allow threaded rendering [default]\n\t1 = Disable creation of render thread on startup",
        "value": 0.0
    },
    "r.AndroidDisableThreadedRenderingFirstLoad": {
        "description": "Sets whether or not to allow threaded rendering for a particular Android device profile on the initial load.\n\t0 = Allow threaded rendering on the initial load [default]\n\t1 = Disable threaded rendering on the initial load",
        "value": 0.0
    },
    "r.AnisotropicMaterials": {
        "description": "Whether anisotropic BRDF is used for material with anisotropy.",
        "value": 1.0
    },
    "r.AsyncCreateLightPrimitiveInteractions": {
        "description": "Whether to create LPIs asynchronously.",
        "value": 1.0
    },
    "r.AsyncPipelineCompile": {
        "description": "0 to Create PSOs at the moment they are requested\n1 to Create Pipeline State Objects asynchronously(default)",
        "value": 1.0
    },
    "r.Atmosphere": {
        "description": "Defines atmosphere will render or not. Only changed by r.Atmosphere console command.\nEnable/Disable Atmosphere, Load/Unload related data.\n 0: off (To save GPU memory)\n 1: on (default)",
        "value": 1.0
    },
    "r.BasePassForceOutputsVelocity": {
        "description": "Force the base pass to compute motion vector, regardless of FPrimitiveUniformShaderParameters.0: Disabled (default)1: Enabled",
        "value": 0.0
    },
    "r.BasePassOutputsVelocity": {
        "description": "Enables rendering WPO velocities on the base pass.\n 0: Renders in a separate pass/rendertarget, all movable static meshes + dynamic.\n 1: Renders during the regular base pass adding an extra GBuffer, but allowing motion blur on materials with Time-based WPO.",
        "value": 0.0
    },
    "r.BasePassWriteDepthEvenWithFullPrepass": {
        "description": "0 to allow a readonly base pass, which skips an MSAA depth resolve, and allows masked materials to get EarlyZ (writing to depth while doing clip() disables EarlyZ) (default)\n1 to force depth writes in the base pass.  Useful for debugging when the prepass and base pass don't match what they render.",
        "value": 0.0
    },
    "r.BlackBorders": {
        "description": "To draw black borders around the rendered image\n(prevents artifacts from post processing passes that read outside of the image e.g. PostProcessAA)\nin pixels, 0:off",
        "value": 0.0
    },
    "r.Bloom.Cross": {
        "description": "Experimental feature to give bloom kernel a more bright center sample (values between 1 and 3 work without causing aliasing)\nExisting bloom get lowered to match the same brightness\n<0 for a anisomorphic lens flare look (X only)\n 0 off (default)\n>0 for a cross look (X and Y)",
        "value": 0.0
    },
    "r.Bloom.HalfResolutionFFT": {
        "description": "Experimental half-resolution FFT Bloom convolution. \n 0: Standard full resolution convolution bloom. 1: Half-resolution convolution that excludes the center of the kernel.\n",
        "value": 0.0
    },
    "r.BloomQuality": {
        "description": " 0: off, no performance impact.\n 1: average quality, least performance impact.\n 2: average quality, least performance impact.\n 3: good quality.\n 4: good quality.\n 5: Best quality, most significant performance impact. (default)\n>5: force experimental higher quality on mobile (can be quite slow on some hardware)",
        "value": 5.0
    },
    "r.BufferVisualizationDumpFrames": {
        "description": "When screenshots or movies dumps are requested, also save out dumps of the current buffer visualization materials\n0:off (default)\n1:on",
        "value": 0.0
    },
    "r.BufferVisualizationDumpFramesAsHDR": {
        "description": "When saving out buffer visualization materials in a HDR capable format\n0: Do not override default save format.\n1: Force HDR format for buffer visualization materials.",
        "value": 0.0
    },
    "r.Cache.DrawDirectionalShadowing": {
        "description": "Whether to draw direct shadowing sample points as generated by Lightmass.\n0 is off (default), 1 is on",
        "value": 0.0
    },
    "r.Cache.DrawInterpolationPoints": {
        "description": "Whether to draw positions that indirect lighting is interpolated at when they are updated, which are stored in the cache.\nProbably need 'r.CacheUpdateEveryFrame 1' as well to be useful, otherwise points will flicker as they update.\n0 is off (default), 1 is on",
        "value": 0.0
    },
    "r.Cache.DrawLightingSamples": {
        "description": "Whether to draw indirect lighting sample points as generated by Lightmass.\n0 is off (default), 1 is on",
        "value": 0.0
    },
    "r.Cache.LightingCacheDimension": {
        "description": "Dimensions of the lighting cache.  This should be a multiple of r.LightingCacheMovableObjectAllocationSize for least waste.",
        "value": 64.0
    },
    "r.Cache.LightingCacheMovableObjectAllocationSize": {
        "description": "Resolution of the interpolation sample volume used to light a dynamic object.  \nValues of 1 or 2 will result in a single interpolation sample per object which does not provide continuous lighting under movement, so interpolation is done over time.  \nValues of 3 or more support the necessary padding to provide continuous results under movement.",
        "value": 5.0
    },
    "r.Cache.LimitQuerySize": {
        "description": "0 is off, 1 is on (default)",
        "value": 1.0
    },
    "r.Cache.QueryNodeLevel": {
        "description": "Level of the lighting sample octree whose node's extents should be the target size for queries into the octree.\nPrimitive blocks will be broken up into multiple octree queries if they are larger than this.0 is the root, 12 is the leaf level",
        "value": 3.0
    },
    "r.Cache.ReduceSHRinging": {
        "description": "Whether to modify indirect lighting cache SH samples to reduce ringing.  0 is off, 1 is on (default)",
        "value": 1.0
    },
    "r.Cache.SampleTransitionSpeed": {
        "description": "When using single sample lighting, controls the speed of the transition between two point samples (fade over time).",
        "value": 800.0
    },
    "r.Cache.UpdateEveryFrame": {
        "description": "Whether to update indirect lighting cache allocations every frame, even if they would have been cached.  0 is off (default), 1 is on",
        "value": 0.0
    },
    "r.Cache.UpdatePrimsTaskEnabled": {
        "description": "Enable threading for ILC primitive update.  Will overlap with the rest the end of InitViews.",
        "value": 1.0
    },
    "r.CalcLocalPlayerCachedLODDistanceFactor": {
        "description": "Should we calculate a LOD Distance Factor based on the current FOV.  Should not be necessary since LOD is already based on screen size.\n",
        "value": 1.0
    },
    "r.CameraCutTranslationThreshold": {
        "description": "The maximum camera translation disatance in centimeters allowed between two frames before a camera cut is automatically inserted.",
        "value": 10000.0
    },
    "r.CapsuleDirectShadows": {
        "description": "Whether to allow capsule direct shadowing on skinned components with bCastCapsuleDirectShadow enabled.",
        "value": 1.0
    },
    "r.CapsuleIndirectConeAngle": {
        "description": "Light source angle used when the indirect shadow direction is derived from precomputed indirect lighting (no stationary skylight present)",
        "value": 0.39269909262657166
    },
    "r.CapsuleIndirectShadows": {
        "description": "Whether to allow capsule indirect shadowing on skinned components with bCastCapsuleIndirectShadow enabled.",
        "value": 1.0
    },
    "r.CapsuleMaxDirectOcclusionDistance": {
        "description": "Maximum cast distance for direct shadows from capsules.  This has a big impact on performance.",
        "value": 400.0
    },
    "r.CapsuleMaxIndirectOcclusionDistance": {
        "description": "Maximum cast distance for indirect shadows from capsules.  This has a big impact on performance.",
        "value": 200.0
    },
    "r.CapsuleMinSkyAngle": {
        "description": "Minimum light source angle derived from the precomputed unoccluded sky vector (stationary skylight present)",
        "value": 15.0
    },
    "r.CapsuleShadowFadeAngleFromVertical": {
        "description": "Angle from vertical up to start fading out the indirect shadow, to avoid self shadowing artifacts.",
        "value": 1.0471975803375244
    },
    "r.CapsuleShadows": {
        "description": "Whether to allow capsule shadowing on skinned components with bCastCapsuleDirectShadow or bCastCapsuleIndirectShadow enabled.",
        "value": 1.0
    },
    "r.CapsuleShadowsFullResolution": {
        "description": "Whether to compute capsule shadows at full resolution.",
        "value": 0.0
    },
    "r.CapsuleSkyAngleScale": {
        "description": "Scales the light source angle derived from the precomputed unoccluded sky vector (stationary skylight present)",
        "value": 0.6000000238418579
    },
    "r.CatmullRomEndParamOffset": {
        "description": "The parameter offset for catmul rom end points.",
        "value": 0.10000000149011612
    },
    "r.CheckSRVTransitions": {
        "description": "Tests that render targets are properly transitioned to SRV when SRVs are set.",
        "value": 0.0
    },
    "r.ClearCoatNormal": {
        "description": "0 to disable clear coat normal.\n 0: off\n 1: on",
        "value": 0.0
    },
    "r.ClearSceneMethod": {
        "description": "Select how the g-buffer is cleared in game mode (only affects deferred shading).\n 0: No clear\n 1: RHIClear (default)\n 2: Quad at max z",
        "value": 1.0
    },
    "r.Color.Max": {
        "description": "Allows to define where the value 1.0 in the color channels is mapped to after color grading.\nValue should be around 1, smaller values darken the highlights, larger values move more colors towards white, Default: 1",
        "value": 1.0
    },
    "r.Color.Mid": {
        "description": "Allows to define where the value 0.5 in the color channels is mapped to after color grading (This is similar to a gamma correction).\nValue should be around 0.5, smaller values darken the mid tones, larger values brighten the mid tones, Default: 0.5",
        "value": 0.5
    },
    "r.Color.Min": {
        "description": "Allows to define where the value 0 in the color channels is mapped to after color grading.\nThe value should be around 0, positive: a gray scale is added to the darks, negative: more dark values become black, Default: 0",
        "value": 0.0
    },
    "r.CompileMaterialsForShaderFormat": {
        "description": "When enabled, compile materials for this shader format in addition to those for the running platform.\nNote that these shaders are compiled and immediately tossed. This is only useful when directly inspecting output via r.DebugDumpShaderInfo.",
        "value": 0.0
    },
    "r.CompileShadersForDevelopment": {
        "description": "Setting this to 0 allows to ship a game with more optimized shaders as some\neditor and development features are not longer compiled into the shaders.\n Note: This should be done when shipping but it's not done automatically yet (feature need to mature\n       and shaders will compile slower as shader caching from development isn't shared).\nCannot be changed at runtime - can be put into BaseEngine.ini\n 0: off, shader can run a bit faster\n 1: on (Default)",
        "value": 1.0
    },
    "r.CompositionForceRenderTargetLoad": {
        "description": "0: default engine behaviour\n1: force ERenderTargetLoadAction::ELoad for all render targets",
        "value": 0.0
    },
    "r.CompositionGraphOrder": {
        "description": "Defines in which order the nodes in the CompositionGraph are executed (affects postprocess and some lighting).\nOption 1 provides more control, which can be useful for preserving ESRAM, avoid GPU sync, cluster up compute shaders for performance and control AsyncCompute.\n 0: tree order starting with the root, first all inputs then dependencies (classic UE4, unconnected nodes are not getting executed)\n 1: RegisterPass() call order, unless the dependencies (input and additional) require a different order (might become new default as it provides more control, executes all registered nodes)",
        "value": 1.0
    },
    "r.ContactShadows": {
        "description": " 0: disabled.\n 1: enabled.\n",
        "value": 1.0
    },
    "r.ContactShadows.NonShadowCastingIntensity": {
        "description": "Intensity of contact shadows from objects with cast contact shadows disabled. Usually 0 (off).\n",
        "value": 0.0
    },
    "r.CookOutUnusedDetailModeComponents": {
        "description": "If set, components which are not relevant for the current detail mode will be cooked out.\n 0: keep components even if not relevant for the current detail mode.\n 1: cook out components not relevant for the current detail mode.\n",
        "value": 0.0
    },
    "r.CopyLockedViews": {
        "command": true,
        "description": "Copies all locked views in to a string that r.LockView will accept to reload them."
    },
    "r.CreateShadersOnLoad": {
        "description": "Whether to create shaders on load, which can reduce hitching, but use more memory.  Otherwise they will be created as needed.",
        "value": 0.0
    },
    "r.CustomDepth": {
        "description": "0: feature is disabled\n1: feature is enabled, texture is created on demand\n2: feature is enabled, texture is not released until required (should be the project setting if the feature should not stall)\n3: feature is enabled, stencil writes are enabled, texture is not released until required (should be the project setting if the feature should not stall)",
        "value": 1.0
    },
    "r.CustomDepth.Order": {
        "description": "When CustomDepth (and CustomStencil) is getting rendered\n  0: Before GBuffer (can be more efficient with AsyncCompute, allows using it in DBuffer pass, no GBuffer blending decals allow GBuffer compression)\n  1: After Base Pass (default)",
        "value": 1.0
    },
    "r.CustomDepthTemporalAAJitter": {
        "description": "If disabled the Engine will remove the TemporalAA Jitter from the Custom Depth Pass. Only has effect when TemporalAA is used.",
        "value": 1.0
    },
    "r.CustomUnsafeZones": {
        "description": "Allows you to set custom unsafe zones. Define them based on Portrait (P) or Landscape (L) for a device oriented 'upright'.Unsafe zones may be either fixed or free, depending on if they move along with the rotation of the device.Format is (P:fixed[x1, y1][width, height]), semicolon-separated for each custom unsafe zone. +Values add from 0, -Values subtract from Height or Width",
        "value": 0.0
    },
    "r.D3D.CheckedForTypedUAVs": {
        "description": "Whether to disallow usage of typed UAV loads, as they are unavailable in Windows 7 D3D 11.0.\n 0: Allow usage of typed UAV loads.\n 1: Disallow usage of typed UAV loads. (default)",
        "value": 1.0
    },
    "r.D3D.ForceDXC": {
        "description": "Forces DirectX Shader Compiler (DXC) to be used for all D3D shaders. Shaders compiled with this option are only compatible with D3D12.\n 0: Disable (default)\n 1: Force new compiler for all shaders",
        "value": 0.0
    },
    "r.D3D.ForceShaderConductorDXCRewrite": {
        "description": "Forces rewriting using ShaderConductor when DXC is enabled.\n 0: Do not rewrite (default)\n 1: Force ShaderConductor rewrite",
        "value": 0.0
    },
    "r.D3D.RemoveUnusedInterpolators": {
        "description": "Enables removing unused interpolators mode when compiling pipelines for D3D.\n -1: Do not actually remove, but make the app think it did (for debugging)\n 0: Disable (default)\n 1: Enable removing unused",
        "value": 1.0
    },
    "r.D3D11.AutoFlushUAV": {
        "description": "If enabled, use NVAPI (Nvidia), AGS (AMD) or Intel Extensions (Intel) to not flush between dispatches/draw calls 1: on (default)\n 0: off",
        "value": 1.0
    },
    "r.D3D11.Depth24Bit": {
        "description": "0: Use 32-bit float depth buffer\n1: Use 24-bit fixed point depth buffer(default)\n",
        "value": 0.0
    },
    "r.D3D11.UseAllowTearing": {
        "description": "Enable new dxgi flip mode with d3d11",
        "value": 1.0
    },
    "r.D3D11.UseSharedKeyMutex": {
        "description": "If 1, BUF_Shared vertex / index buffer and TexCreate_Shared texture will be created\nwith the D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX flag instead of D3D11_RESOURCE_MISC_SHARED (default).\n",
        "value": 0.0
    },
    "r.D3D12.Depth24Bit": {
        "description": "0: Use 32-bit float depth buffer\n1: Use 24-bit fixed point depth buffer(default)\n",
        "value": 0.0
    },
    "r.D3D12.ExecuteCommandListTask": {
        "description": "0: Execute command lists on RHI Thread instead of separate task!\n1: Execute command lists on task created from RHIThread to offload expensive work (default)\n",
        "value": 0.0
    },
    "r.D3D12.GPUCrashDebuggingMode": {
        "description": "Enable GPU crash debugging: tracks the current GPU state and logs information what operations the GPU executed last.\nOptionally generate a GPU crash dump as well (on nVidia hardware only)):\n 0: GPU crash debugging disabled (default in shipping and test builds)\n 1: Minimal overhead GPU crash debugging (default in development builds)\n 2: Enable all available GPU crash debugging options (DRED, Aftermath, ...)\n",
        "value": 0.0
    },
    "r.D3D12.GPUTimeout": {
        "description": "0: Disable GPU Timeout; use with care as it could freeze your PC!\n1: Enable GPU Timeout; operation taking long on the GPU will fail(default)\n",
        "value": 1.0
    },
    "r.D3D12.RayTracing.AllowCompaction": {
        "description": "Whether to automatically perform compaction for static acceleration structures to save GPU memory. (default = 1)\n",
        "value": 1.0
    },
    "r.D3D12.RayTracing.ViewDescriptorHeapSize": {
        "description": "Maximum number of descriptors per ray tracing view descriptor heap. (default = 250k, ~8MB per heap)\nTypical measured descriptor heap usage in large scenes is ~50k. An error is reported when this limit is reached and shader bindings for subsequent objects are skipped.\n",
        "value": 250000.0
    },
    "r.D3D12.UseAllowTearing": {
        "description": "Enable new dxgi flip mode with d3d12",
        "value": 1.0
    },
    "r.DBuffer": {
        "description": "Enables DBuffer decal material blend modes.\nDBuffer decals are rendered before the base pass, allowing them to affect static lighting and skylighting correctly. \nWhen enabled, a full prepass will be forced which adds CPU / GPU cost.  Several texture lookups will be done in the base pass to fetch the decal properties, which adds pixel work.\n 0: off\n 1: on (default)",
        "value": 1.0
    },
    "r.DFDistanceScale": {
        "description": "Factor to scale directional light property 'DistanceField Shadows Distance', clamped to [0.0001, 10000].\nI.e.: DistanceFieldShadowsDistance *= r.DFDistanceScale.\n[0.0001,1): shorter distance\n 1: normal (default)\n(1,10000]: larger distance.)",
        "value": 1.0
    },
    "r.DFFarTransitionScale": {
        "description": "Use to modify the length of the far transition (fade out) of the distance field shadows.\n1.0: (default) Calculate in the same way as other cascades.0.0: Disable fade out.",
        "value": 1.0
    },
    "r.DFFullResolution": {
        "description": "1 = full resolution distance field shadowing, 0 = half resolution with bilateral upsample.",
        "value": 0.0
    },
    "r.DFShadowAverageObjectsPerCullTile": {
        "description": "Determines how much memory should be allocated in distance field object culling data structures.  Too much = memory waste, too little = flickering due to buffer overflow.",
        "value": 128.0
    },
    "r.DFShadowCullTileWorldSize": {
        "description": "World space size of a tile used for culling for directional lights.",
        "value": 200.0
    },
    "r.DFShadowQuality": {
        "description": "Defines the distance field shadow method which allows to adjust for quality or performance.\n 0:off, 1:low (20 steps, no SSS), 2:medium (32 steps, no SSS), 3:high (64 steps, SSS, default)",
        "value": 3.0
    },
    "r.DFShadowScatterTileCulling": {
        "description": "Whether to use the rasterizer to scatter objects onto the tile grid for culling.",
        "value": 1.0
    },
    "r.DFTwoSidedMeshDistanceBias": {
        "description": "World space amount to expand distance field representations of two sided meshes.  This is useful to get tree shadows to match up with standard shadow mapping.",
        "value": 4.0
    },
    "r.DOF.Gather.AccumulatorQuality": {
        "description": "Controles the quality of the gathering accumulator.\n",
        "value": 1.0
    },
    "r.DOF.Gather.EnableBokehSettings": {
        "description": "Whether to applies bokeh settings on foreground and background gathering.\n 0: Disable;\n 1: Enable (default).",
        "value": 0.0
    },
    "r.DOF.Gather.PostfilterMethod": {
        "description": "Method to use to post filter a gather pass.\n 0: None;\n 1: Per RGB channel median 3x3 (default);\n 2: Per RGB channel max 3x3.",
        "value": 1.0
    },
    "r.DOF.Gather.RingCount": {
        "description": "Number of rings for gathering kernels [[3; 5]]. Default to 5.\n",
        "value": 4.0
    },
    "r.DOF.Kernel.MaxBackgroundRadius": {
        "description": "Maximum size of the background bluring radius in screen space (default=0.025).",
        "value": 0.02500000037252903
    },
    "r.DOF.Kernel.MaxForegroundRadius": {
        "description": "Maximum size of the foreground bluring radius in screen space (default=0.025).",
        "value": 0.02500000037252903
    },
    "r.DOF.Recombine.EnableBokehSettings": {
        "description": "Whether to applies bokeh settings on slight out of focus done in recombine pass.\n 0: Disable;\n 1: Enable (default).",
        "value": 0.0
    },
    "r.DOF.Recombine.MinFullresBlurRadius": {
        "description": "Minimal blurring radius used in full resolution pixel width to actually do DOF  when slight out of focus is enabled (default = 0.1).",
        "value": 0.10000000149011612
    },
    "r.DOF.Recombine.Quality": {
        "description": "Configures the quality of the recombine pass.\n 0: No slight out of focus;\n 1: Slight out of focus 24spp;\n 2: Slight out of focus 32spp (default).",
        "value": 1.0
    },
    "r.DOF.Scatter.BackgroundCompositing": {
        "description": "Compositing mode of the background hybrid scattering.\n 0: Disabled;\n 1: Additive;\n 2: Gather occlusion (default).",
        "value": 2.0
    },
    "r.DOF.Scatter.EnableBokehSettings": {
        "description": "Whether to enable bokeh settings on scattering.\n 0: Disable;\n 1: Enable (default).",
        "value": 1.0
    },
    "r.DOF.Scatter.ForegroundCompositing": {
        "description": "Compositing mode of the foreground hybrid scattering.\n 0: Disabled;\n 1: Additive (default).",
        "value": 1.0
    },
    "r.DOF.Scatter.MaxSpriteRatio": {
        "description": "Maximum ratio of scattered pixel quad as sprite, usefull to control DOF's scattering upperbound.  1 will allow to scatter 100% pixel quads, whereas 0.2 will only allow 20% (default = 0.1).",
        "value": 0.10000000149011612
    },
    "r.DOF.Scatter.MinCocRadius": {
        "description": "Minimal Coc radius required to be scattered (default = 3).",
        "value": 3.0
    },
    "r.DOF.Scatter.NeighborCompareMaxColor": {
        "description": "Controles the linear color clamping upperbound applied before color of pixel and neighbors are compared. To low, and you may not scatter enough; to high you may scatter unnecessarily too much in highlights (Default: 10).",
        "value": 10.0
    },
    "r.DOF.TemporalAAQuality": {
        "description": "Quality of temporal AA pass done in DOF.\n 0: Faster but lower quality; 1: Higher quality pass (default).",
        "value": 1.0
    },
    "r.DX11.ReduceRTVRebinds": {
        "description": "Reduce # of SetRenderTargetCalls.",
        "value": 1.0
    },
    "r.DX11NumForcedGPUs": {
        "description": "Num Forced GPUs.",
        "value": -1.0
    },
    "r.DX12NVAfterMathEnabled": {
        "description": "Use NV Aftermath for GPU crash analysis in D3D12",
        "value": 0.0
    },
    "r.DebugActionZone.ActionRatio": {
        "description": "The action zone ratio that will be returned by FDisplayMetrics::GetDisplayMetrics on platforms that don't have a defined safe zone (0..1)\n default: 1.0",
        "value": 1.0
    },
    "r.DebugSafeZone.MaxDebugTextStringsPerActor": {
        "description": "The maximum number of debug strings that can be attached to a given actor (<=0 : no limit)",
        "value": 128.0
    },
    "r.DebugSafeZone.Mode": {
        "description": "The safe zone visualization mode (0..2)\n 0: Disabled (default)\n 1: Show Title Safe Zone\n 2: Show Action Safe Zone",
        "value": 0.0
    },
    "r.DebugSafeZone.OverlayAlpha": {
        "description": "The alpha value of the safe zone overlay (0..1)\n default: 0.2",
        "value": 0.20000000298023224
    },
    "r.DebugSafeZone.TitleRatio": {
        "description": "The safe zone ratio that will be returned by FDisplayMetrics::GetDisplayMetrics on platforms that don't have a defined safe zone (0..1)\n default: 1.0",
        "value": 1.0
    },
    "r.Decal.FadeDurationScale": {
        "description": "Scales the per decal fade durations. Lower values shortens lifetime and fade duration. Default is 1.0f.",
        "value": 1.0
    },
    "r.Decal.FadeScreenSizeMult": {
        "description": "Control the per decal fade screen size. Multiplies with the per-decal screen size fade threshold.  Smaller means decals fade less aggressively.",
        "value": 1.0
    },
    "r.Decal.StencilSizeThreshold": {
        "description": "Control a per decal stencil pass that allows to large (screen space) decals faster. It adds more overhead per decals so this\n  <0: optimization is disabled\n   0: optimization is enabled no matter how small (screen space) the decal is\n0..1: optimization is enabled, value defines the minimum size (screen space) to trigger the optimization (default 0.1)",
        "value": 0.10000000149011612
    },
    "r.DefaultBackBufferPixelFormat": {
        "description": "Defines the default back buffer pixel format.\n 0: 8bit RGBA\n 1: 16bit RGBA\n 2: Float RGB\n 3: Float RGBA\n 4: 10bit RGB, 2bit Alpha\n",
        "value": 0.0
    },
    "r.DefaultFeature.AmbientOcclusion": {
        "description": "Engine default (project setting) for AmbientOcclusion is (postprocess volume/camera/game setting still can override)\n 0: off, sets AmbientOcclusionIntensity to 0\n 1: on (default)",
        "value": 1.0
    },
    "r.DefaultFeature.AmbientOcclusionStaticFraction": {
        "description": "Engine default (project setting) for AmbientOcclusion is (postprocess volume/camera/game setting still can override)\n 0: off, sets AmbientOcclusionStaticFraction to 0\n 1: on (default, costs extra pass, only useful if there is some baked lighting)",
        "value": 1.0
    },
    "r.DefaultFeature.AntiAliasing": {
        "description": "Engine default (project setting) for AntiAliasingMethod is (postprocess volume/camera/game setting still can override)\n 0: off (no anti-aliasing)\n 1: FXAA (faster than TemporalAA but much more shimmering for non static cases)\n 2: TemporalAA (default)\n 3: MSAA (Forward shading only)",
        "value": 2.0
    },
    "r.DefaultFeature.AutoExposure": {
        "description": "Engine default (project setting) for AutoExposure is (postprocess volume/camera/game setting still can override)\n 0: off, sets AutoExposureMinBrightness and AutoExposureMaxBrightness to 1\n 1: on (default)",
        "value": 1.0
    },
    "r.DefaultFeature.AutoExposure.Bias": {
        "description": "Engine default (project setting) for AutoExposure Exposure Bias (postprocess volume/camera/game setting still can override)\n",
        "value": 1.0
    },
    "r.DefaultFeature.AutoExposure.ExtendDefaultLuminanceRange": {
        "description": "Whether the default values for AutoExposure should support an extended range of scene luminance.\nThis also change the PostProcessSettings.Exposure.MinBrightness, MaxBrightness, HistogramLogMin and HisogramLogMax\nto be expressed in EV100 values instead of in Luminance and Log2 Luminance.\n 0: Legacy range (default)\n 1: Extended range",
        "value": 0.0
    },
    "r.DefaultFeature.AutoExposure.Method": {
        "description": "Engine default (project setting) for AutoExposure Method (postprocess volume/camera/game setting still can override)\n 0: Histogram based (requires compute shader, default)\n 1: Basic AutoExposure",
        "value": 0.0
    },
    "r.DefaultFeature.Bloom": {
        "description": "Engine default (project setting) for Bloom is (postprocess volume/camera/game setting still can override)\n 0: off, set BloomIntensity to 0\n 1: on (default)",
        "value": 1.0
    },
    "r.DefaultFeature.LensFlare": {
        "description": "Engine default (project setting) for LensFlare is (postprocess volume/camera/game setting still can override)\n 0: off, sets LensFlareIntensity to 0\n 1: on (default)",
        "value": 0.0
    },
    "r.DefaultFeature.LightUnits": {
        "description": "Default units to use for point, spot and rect lights\n 0: unitless \n 1: candelas (default)\n 2: lumens",
        "value": 1.0
    },
    "r.DefaultFeature.MotionBlur": {
        "description": "Engine default (project setting) for MotionBlur is (postprocess volume/camera/game setting still can override)\n 0: off, sets MotionBlurAmount to 0\n 1: on (default)",
        "value": 1.0
    },
    "r.DeferSkeletalDynamicDataUpdateUntilGDME": {
        "description": "If > 0, then do skeletal mesh dynamic data updates will be deferred until GDME. Experimental option.",
        "value": 0.0
    },
    "r.DeferUniformExpressionCaching": {
        "description": "Whether to defer caching of uniform expressions until a rendering command needs them up to date.  Deferring updates is more efficient because multiple SetVectorParameterValue calls in a frame will only result in one update.",
        "value": 1.0
    },
    "r.DeferUpdateRenderStates": {
        "description": "Whether to defer updating the render states of material parameter collections when a paramter is changed until a rendering command needs them up to date.  Deferring updates is more efficient because multiple SetVectorParameterValue and SetScalarParameterValue calls in a frame will only result in one update.",
        "value": 1.0
    },
    "r.DelaySceneRenderCompletion": {
        "description": "Experimental option to postpone the cleanup of the scene renderer until later. This does NOT currently work because it is possible for the scene to be modified before ~FSceneRenderer, and that assumes the scene is unchanged.",
        "value": 0.0
    },
    "r.DemosaicVposOffset": {
        "description": "This offset is added to the rasterized position used for demosaic in the mobile tonemapping shader. It exists to workaround driver bugs on some Android devices that have a half-pixel offset.",
        "value": 0.0
    },
    "r.DepthOfField.MaxSize": {
        "description": "Allows to clamp the gaussian depth of field radius (for better performance), default: 100",
        "value": 100.0
    },
    "r.DepthOfField.NearBlurSizeThreshold": {
        "description": "Sets the minimum near blur size before the effect is forcably disabled. Currently only affects Gaussian DOF.\n (default: 0.01)",
        "value": 0.009999999776482582
    },
    "r.DepthOfFieldQuality": {
        "description": "Allows to adjust the depth of field quality. Currently only fully affects BokehDOF. GaussianDOF is either 0 for off, otherwise on.\n 0: Off\n 1: Low\n 2: high quality (default, adaptive, can be 4x slower)\n 3: very high quality, intended for non realtime cutscenes, CircleDOF only (slow)\n 4: extremely high quality, intended for non realtime cutscenes, CircleDOF only (very slow)",
        "value": 2.0
    },
    "r.DetailMode": {
        "description": "Current detail mode; determines whether components of actors should be updated/ ticked.\n 0: low, show only object with DetailMode low or higher\n 1: medium, show all object with DetailMode medium or higher\n 2: high, show all objects (default)",
        "value": 2.0
    },
    "r.DetectAndWarnOfBadDrivers": {
        "description": "IAmNoRealVariable",
        "value": 0.0
    },
    "r.DiffuseColor.Max": {
        "description": "Allows quick material test by remapping the diffuse color at 1 to a new value (0..1), Only for non shipping built!\n1: (default)",
        "value": 1.0
    },
    "r.DiffuseColor.Min": {
        "description": "Allows quick material test by remapping the diffuse color at 1 to a new value (0..1), Only for non shipping built!\n1: (default)",
        "value": 0.0
    },
    "r.DiffuseIndirect.Denoiser": {
        "description": "Denoising options (default = 1)",
        "value": 1.0
    },
    "r.DisableDistortion": {
        "description": "Prevents distortion effects from rendering.  Saves a full-screen framebuffer's worth of memory.",
        "value": 0.0
    },
    "r.DisableDriverWarningPopupIfGFN": {
        "description": "If non-zero, disable driver version warning popup if running on a GFN cloud machine.",
        "value": 1.0
    },
    "r.DisableEngineAndAppRegistration": {
        "description": "If true, disables engine and app registration, to disable GPU driver optimizations during debugging and development\nChanges will only take effect in new game/editor instances - can't be changed at runtime.\n",
        "value": 0.0
    },
    "r.DisableLODFade": {
        "description": "Disable fading for distance culling",
        "value": 0.0
    },
    "r.DiscardUnusedQuality": {
        "description": "Whether to keep or discard unused quality level shadermaps in memory.\n0: keep all quality levels in memory. (default)\n1: Discard unused quality levels on load.",
        "value": 0.0
    },
    "r.DistanceFadeMaxTravel": {
        "description": "Max distance that the player can travel during the fade time.",
        "value": 1000.0
    },
    "r.DistanceFieldAO": {
        "description": "Whether the distance field AO feature is allowed, which is used to implement shadows of Movable sky lights from static meshes.",
        "value": 1.0
    },
    "r.DistanceFieldBuild.Compress": {
        "description": "Whether to store mesh distance fields compressed in memory, which reduces how much memory they take, but also causes serious hitches when making new levels visible.  Only enable if your project does not stream levels in-game.\nChanging this regenerates all mesh distance fields.",
        "value": 0.0
    },
    "r.DistanceFieldBuild.EightBit": {
        "description": "Whether to store mesh distance fields in an 8 bit fixed point format instead of 16 bit floating point.  \n8 bit uses half the memory, but introduces artifacts for large meshes or thin meshes.",
        "value": 0.0
    },
    "r.DistanceFieldBuild.UseEmbree": {
        "description": "Whether to use embree ray tracer for mesh distance field generation.",
        "value": 1.0
    },
    "r.DistanceFieldShadowing": {
        "description": "Whether the distance field shadowing feature is allowed.",
        "value": 1.0
    },
    "r.DistanceFields": {
        "description": "Enables distance fields rendering.\n 0: Disabled.\n 1: Enabled.",
        "value": 1.0
    },
    "r.DistanceFields.AtlasSizeXY": {
        "description": "Max size of the global mesh distance field atlas volume texture in X and Y.",
        "value": 512.0
    },
    "r.DistanceFields.AtlasSizeZ": {
        "description": "Max size of the global mesh distance field atlas volume texture in Z.",
        "value": 1024.0
    },
    "r.DistanceFields.DefaultVoxelDensity": {
        "description": "Determines how the default scale of a mesh converts into distance field voxel dimensions.\nChanging this will cause all distance fields to be rebuilt.  Large values can consume memory very quickly!",
        "value": 0.10000000149011612
    },
    "r.DistanceFields.DiscardCPUData": {
        "description": "Discard Mesh DF CPU data once it has been ULed to Atlas. WIP - This cant be used if atlas gets reallocated and mesh DF needs to be ULed again to new atlas",
        "value": 0.0
    },
    "r.DistanceFields.ForceAtlasRealloc": {
        "description": "Force a full realloc.",
        "value": 0.0
    },
    "r.DistanceFields.ForceMaxAtlasSize": {
        "description": "When enabled, we'll always allocate the largest possible volume texture for the distance field atlas regardless of how many blocks we need.  This is an optimization to avoid re-packing the texture, for projects that are expected to always require the largest amount of space.",
        "value": 0.0
    },
    "r.DistanceFields.MaxPerMeshResolution": {
        "description": "Highest resolution (in one dimension) allowed for a single static mesh asset, used to cap the memory usage of meshes with a large scale.\nChanging this will cause all distance fields to be rebuilt.  Large values such as 512 can consume memory very quickly! (128Mb for one asset at 512)",
        "value": 128.0
    },
    "r.DistanceFields.ParallelAtlasUpdate": {
        "description": "Whether to parallelize distance field data decompression and copying to upload buffer",
        "value": 1.0
    },
    "r.DistanceFields.RuntimeDownsamplingFactor": {
        "description": "When enabled (higher than 0 and lower than 1), mesh distance field will be downsampled by factor value on GPU and uploaded to the atlas.",
        "value": 0.0
    },
    "r.DistanceFields.ThrottleCopyToAtlasInBytes": {
        "description": "When enabled (higher than 0), throttle mesh distance field copy to global mesh distance field atlas volume (in bytes uncompressed).",
        "value": 0.0
    },
    "r.DoInitViewsLightingAfterPrepass": {
        "description": "Delays the lighting part of InitViews until after the prepass. This improves the threading throughput and gets the prepass to the GPU ASAP. Experimental options; has an unknown race.",
        "value": 0.0
    },
    "r.DoLazyStaticMeshUpdate": {
        "description": "If true, then do not add meshes to the static mesh draw lists until they are visible. Experiemental option.",
        "value": 0.0
    },
    "r.DoPrepareDistanceFieldSceneAfterRHIFlush": {
        "description": "If true, then do the distance field scene after the RHI sync and flush. Improves pipelining.",
        "value": 1.0
    },
    "r.DoTiledReflections": {
        "description": "Compute Reflection Environment with Tiled compute shader..\n 0: off\n 1: on (default)",
        "value": 1.0
    },
    "r.DontLimitOnBattery": {
        "description": "0: Limit performance on devices with a battery.(default)\n1: Do not limit performance due to device having a battery.",
        "value": 0.0
    },
    "r.Downsample.Quality": {
        "description": "Defines the quality in which the Downsample passes. we might add more quality levels later.\n 0: low quality\n>0: high quality (default: 1)\n",
        "value": 1.0
    },
    "r.DownsampledOcclusionQueries": {
        "description": "Whether to issue occlusion queries to a downsampled depth buffer",
        "value": 0.0
    },
    "r.DrawRectangleOptimization": {
        "description": "Controls an optimization for DrawRectangle(). When enabled a triangle can be used to draw a quad in certain situations (viewport sized quad).\nUsing a triangle allows for slightly faster post processing in lower resolutions but can not always be used.\n 0: Optimization is disabled, DrawDenormalizedQuad always render with quad\n 1: Optimization is enabled, a triangle can be rendered where specified (default)",
        "value": 1.0
    },
    "r.DriverDetectionMethod": {
        "description": "Defines which implementation is used to detect the GPU driver (to check for old drivers, logs and statistics)\n  0: Iterate available drivers in registry and choose the one with the same name, if in question use next method (happens)\n  1: Get the driver of the primary adapter (might not be correct when dealing with multiple adapters)\n  2: Use DirectX LUID (would be the best, not yet implemented)\n  3: Use Windows functions, use the primary device (might be wrong when API is using another adapter)\n  4: Use Windows functions, use names such as DirectX Device (newest, most promising)",
        "value": 4.0
    },
    "r.DumpPipelineCache": {
        "command": true,
        "description": "Dump current cache stats."
    },
    "r.DumpRenderTargetPoolMemory": {
        "command": true,
        "description": "Dump allocation information for the render target pool."
    },
    "r.DumpShaderDebugInfo": {
        "description": "Dumps debug info for compiled shaders to GameName/Saved/ShaderDebugInfo\nWhen set to 1, debug info is dumped for all compiled shader\nWhen set to 2, it is restricted to shaders with compilation errors\nWhen set to 3, it is restricted to shaders with compilation errors or warnings\nThe debug info is platform dependent, but usually includes a preprocessed version of the shader source.\nGlobal shaders automatically dump debug info if r.ShaderDevelopmentMode is enabled, this cvar is not necessary.\nOn iOS, if the PowerVR graphics SDK is installed to the default path, the PowerVR shader compiler will be called and errors will be reported during the cook.",
        "value": 0.0
    },
    "r.DumpShaderDebugShortNames": {
        "description": "Only valid when r.DumpShaderDebugInfo > 0.\nWhen set to 1, will shorten names factory and shader type folder names to avoid issues with long paths.",
        "value": 0.0
    },
    "r.DumpShaderDebugWorkerCommandLine": {
        "description": "Only valid when r.DumpShaderDebugInfo > 0.\nWhen set to 1, it will generate a file that can be used with ShaderCompileWorker's -directcompile.",
        "value": 0.0
    },
    "r.DumpTransitionsForResource": {
        "description": "Prints callstack when the given resource is transitioned. Only implemented for DX11 at the moment.Name of the resource to dump",
        "value": 0.0
    },
    "r.DumpingMovie": {
        "description": "Allows to dump each rendered frame to disk (slow fps, names MovieFrame..).\n<=0:off (default), <0:remains on, >0:remains on for n frames (n is the number specified)",
        "value": 0.0
    },
    "r.DynamicRes.CPUBoundScreenPercentage": {
        "description": "Screen percentage to converge to when CPU bound. This can be used when GPU and CPU share same memory.",
        "value": 100.0
    },
    "r.DynamicRes.CPUTimeHeadRoom": {
        "description": "Head room for the threads compared GPU time to avoid keep getting resolution fraction shrinking down when CPU bound (in milliseconds).",
        "value": 1.0
    },
    "r.DynamicRes.ChangePercentageThreshold": {
        "description": "Minimal increase percentage threshold to alow when changing resolution.",
        "value": 2.0
    },
    "r.DynamicRes.FrameTimeBudget": {
        "description": "Frame's time budget in milliseconds.",
        "value": 33.29999923706055
    },
    "r.DynamicRes.FrameWeightExponent": {
        "description": "Recursive weight of frame N-1 against frame N.",
        "value": 0.8999999761581421
    },
    "r.DynamicRes.GPUTimingMeasureMethod": {
        "description": "Selects the method to use to measure GPU timings.\n 0: Same as stat unit (default);\n 1: Timestamp queries.",
        "value": 0.0
    },
    "r.DynamicRes.HistorySize": {
        "description": "Number of frames keept in the history.",
        "value": 16.0
    },
    "r.DynamicRes.IncreaseAmortizationBlendFactor": {
        "description": "Amortization blend factor when scale resolution back up to reduce resolution fraction oscillations.",
        "value": 0.8999999761581421
    },
    "r.DynamicRes.MaxConsecutiveOverbudgetGPUFrameCount": {
        "description": "Maximum number of consecutive frame tolerated over GPU budget.",
        "value": 2.0
    },
    "r.DynamicRes.MaxScreenPercentage": {
        "description": "Maximal screen percentage.",
        "value": 100.0
    },
    "r.DynamicRes.MinResolutionChangePeriod": {
        "description": "Minimal number of frames between resolution changes, important to avoid input sample position interferences in TAA upsample.",
        "value": 8.0
    },
    "r.DynamicRes.MinScreenPercentage": {
        "description": "Minimal screen percentage.",
        "value": 50.0
    },
    "r.DynamicRes.OperationMode": {
        "description": "Select the operation mode for dynamic resolution.\n 0: Disabled (default);\n 1: Enable according to the game user settings;\n 2: Enable regardless of the game user settings.",
        "value": 0.0
    },
    "r.DynamicRes.OutlierThreshold": {
        "description": "Ignore frame timing that have Game thread or render thread X time more than frame budget.",
        "value": 0.0
    },
    "r.DynamicRes.TargetedGPUHeadRoomPercentage": {
        "description": "Targeted GPU headroom (in percent from r.DynamicRes.FrameTimeBudget).",
        "value": 10.0
    },
    "r.EarlyZPass": {
        "description": "Whether to use a depth only pass to initialize Z culling for the base pass. Cannot be changed at runtime.\nNote: also look at r.EarlyZPassMovable\n  0: off\n  1: good occluders only: not masked, and large on screen\n  2: all opaque (including masked)\n  x: use built in heuristic (default is 3)",
        "value": 3.0
    },
    "r.EarlyZPassOnlyMaterialMasking": {
        "description": "Whether to compute materials' mask opacity only in early Z pass. Changing this setting requires restarting the editor.\nNote: Needs r.EarlyZPass == 2 && r.EarlyZPassMovable == 1",
        "value": 0.0
    },
    "r.EarlyZSortMasked": {
        "description": "Sort EarlyZ masked draws to the end of the draw order.\n",
        "value": 1.0
    },
    "r.EmitMeshDrawEvents": {
        "description": "Emits a GPU event around each drawing policy draw call.  /nUseful for seeing stats about each draw call, however it greatly distorts total time and time per draw call.",
        "value": 0.0
    },
    "r.Emitter.FastPoolEnable": {
        "description": "Should we use fast pools for emitters.\n 0: Don't pool anything\n 1: Pool the emitters bro (default)\n",
        "value": 0.0
    },
    "r.Emitter.FastPoolMaxFreeSize": {
        "description": "Max free pool size to keep around without cleaning up.",
        "value": 2097152.0
    },
    "r.Emitter.SkipRibbonSpawnInterp": {
        "description": "Ignore velocity based offsets when interpolating. This prevents ribbon quads from overlapping eachother (default=1)",
        "value": 1.0
    },
    "r.EmitterSpawnRateScale": {
        "description": "A global scale upon the spawn rate of emitters. Emitters can choose to apply or ignore it via their bApplyGlobalSpawnRateScale property.",
        "value": 1.0
    },
    "r.EnableAsyncComputeTranslucencyLightingVolumeClear": {
        "description": "Whether to clear the translucency lighting volume using async compute.\n",
        "value": 1.0
    },
    "r.EnableDebugSpam_GetObjectPositionAndScale": {
        "description": "Enables or disables debug log spam for a bug in FParticleSystemSceneProxy::GetObjectPositionAndScale()",
        "value": 1.0
    },
    "r.EnableMorphTargets": {
        "description": "Enable Morph Targets",
        "value": 1.0
    },
    "r.EnableMultiGPUForkAndJoin": {
        "description": "Whether to allow unused GPUs to speedup rendering by sharing work.\n",
        "value": 1.0
    },
    "r.EnableStereoEmulation": {
        "description": "Emulate stereo rendering",
        "value": 1.0
    },
    "r.ExpandAllOcclusionTestedBBoxesAmount": {
        "description": "Amount to expand all occlusion test bounds by.",
        "value": 0.0
    },
    "r.ExpandNewlyOcclusionTestedBBoxesAmount": {
        "description": "If we don't occlusion test a primitive for r.GFramesNotOcclusionTestedToExpandBBoxes frames, then we expand the BBox when we do occlusion test it for a few frames by this amount. See also r.FramesToExpandNewlyOcclusionTestedBBoxes, r.GFramesNotOcclusionTestedToExpandBBoxes.",
        "value": 0.0
    },
    "r.ExrReadAndProcessOnGPU": {
        "description": "Allows reading of Large Uncompressed EXR files directly into Structured Buffer.\nand be processed on GPU\n",
        "value": 1.961817850054744e-44
    },
    "r.EyeAdaptation.Basic.Compute": {
        "description": "Use Pixel or Compute Shader to compute the basic eye adaptation. \n= 0 : Pixel Shader\n> 0 : Compute Shader (default) \n",
        "value": 1.0
    },
    "r.EyeAdaptation.BlackHistogramBucketInfluence": {
        "description": "This parameter controls how much weight to apply to completely dark 0.0 values in the exposure histogram.\nWhen set to 1.0, fully dark pixels will accumulate normally, whereas when set to 0.0 fully dark pixels\nwill have no influence.\n",
        "value": 0.0
    },
    "r.EyeAdaptation.EditorOnly": {
        "description": "When pre-exposure is enabled, 0 to enable it everywhere, 1 to enable it only in the editor (default).\nThis is to because it currently has an impact on the renderthread performance\n",
        "value": 0.0
    },
    "r.EyeAdaptation.ExponentialTransitionDistance": {
        "description": "The auto exposure moves linearly, but when it gets ExponentialTransitionDistance F-stops away from the\ntarget exposure it switches to as slower exponential function.\n",
        "value": 1.5
    },
    "r.EyeAdaptation.LensAttenuation": {
        "description": "The camera lens attenuation (q). Set this number to 0.78 for lighting to be unitless (1.0cd/m^2 becomes 1.0 at EV100) or 0.65 to match previous versions (1.0cd/m^2 becomes 1.2 at EV100).",
        "value": 0.7799999713897705
    },
    "r.EyeAdaptation.MethodOverride": {
        "description": "Override the camera metering method set in post processing volumes\n-2: override with custom settings (for testing Basic Mode)\n-1: no override\n 1: Auto Histogram-based\n 2: Auto Basic\n 3: Manual",
        "value": -1.0
    },
    "r.EyeAdaptation.PreExposureOverride": {
        "description": "Overide the scene pre-exposure by a custom value. \n= 0 : No override\n> 0 : Override PreExposure\n",
        "value": 0.0
    },
    "r.EyeAdaptation.VisualizeDebugType": {
        "description": "When enabling Show->Visualize->HDR (Eye Adaptation) is enabled, this flag controls the scene color.\n    0: Scene Color after tonemapping (default).\n    1: Histogram Debug\n",
        "value": 0.0
    },
    "r.EyeAdaptationQuality": {
        "description": "Defines the eye adaptation quality which allows to adjust for quality or performance.\n<=0: off (fastest)\n  1: low quality (e.g. non histogram based, not yet implemented)\n  2: normal quality (default)\n  3: high quality (e.g. screen position localized, not yet implemented)",
        "value": 2.0
    },
    "r.FastBlurThreshold": {
        "description": "Defines at what radius the Gaussian blur optimization kicks in (estimated 25% - 40% faster).\nThe optimization uses slightly less memory and has a quality loss on smallblur radius.\n  0: use the optimization always (fastest, lowest quality)\n  3: use the optimization starting at a 3 pixel radius (quite fast)\n  7: use the optimization starting at a 7 pixel radius (default)\n>15: barely ever use the optimization (high quality)",
        "value": 100.0
    },
    "r.FastVRam.BokehDOF": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.CircleDOF": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.CombineLUTs": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.CustomDepth": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.DBufferA": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.DBufferB": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.DBufferC": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.DBufferMask": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.DOFPostfilter": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DOFReduce": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DOFSetup": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DistanceFieldAOBentNormal": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.DistanceFieldAODownsampledBentNormal": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DistanceFieldAOHistory": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DistanceFieldAOScreenGridResources": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DistanceFieldCulledObjectBuffers": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DistanceFieldIrradiance": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.DistanceFieldNormal": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DistanceFieldShadows": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.DistanceFieldTileIntersectionResources": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.Distortion": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.Downsample": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.EyeAdaptation": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.ForwardLightingCullingResources": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.GBufferA": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.GBufferB": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.GBufferC": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.GBufferD": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.GBufferE": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.GBufferF": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.GBufferVelocity": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.GlobalDistanceFieldCullGridBuffers": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.HZB": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.Histogram": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.HistogramReduce": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.LPV": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.LightAccumulation": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.LightAttenuation": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.MotionBlur": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.PostProcessMaterial": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.SSR": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.SceneColor": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.SceneDepth": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.ScreenSpaceAO": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.ScreenSpaceShadowMask": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.SeparateTranslucency": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.SeparateTranslucencyModulate": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.ShadowCSM": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.ShadowPerObject": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.ShadowPointLight": {
        "description": "",
        "value": 0.0
    },
    "r.FastVRam.Tonemap": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.Upscale": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.VelocityFlat": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.VelocityMax": {
        "description": "",
        "value": 1.0
    },
    "r.FastVRam.VolumetricFog": {
        "description": "",
        "value": 1.0
    },
    "r.FeatureLevelPreview": {
        "description": "If 1 the quick settings menu will contain an option to enable feature level preview modes",
        "value": 0.0
    },
    "r.Filter.LoopMode": {
        "description": "Controls when to use either dynamic or unrolled loops to iterates over the Gaussian filtering.\nThis passes is used for Gaussian Blur, Bloom and Depth of Field. The dynamic loop allows\nup to 128 samples versus the 32 samples of unrolled loops, but add an additional cost for\nthe loop's stop test at every iterations.\n 0: Unrolled loop only (default; limited to 32 samples).\n 1: Fall back to dynamic loop if needs more than 32 samples.\n 2: Dynamic loop only.",
        "value": 0.0
    },
    "r.Filter.SizeScale": {
        "description": "Allows to scale down or up the sample count used for bloom and Gaussian depth of field (scale is clamped to give reasonable results).\nValues down to 0.6 are hard to notice\n 1 full quality (default)\n >1 more samples (slower)\n <1 less samples (faster, artifacts with HDR content or boxy results with GaussianDOF)",
        "value": 1.0
    },
    "r.FinishCurrentFrame": {
        "description": "If on, the current frame will be forced to finish and render to the screen instead of being buffered.  This will improve latency, but slow down overall performance.",
        "value": 0.0
    },
    "r.FlushMaterialUniforms": {
        "command": true,
        "description": ""
    },
    "r.FlushRHIThreadOnSTreamingTextureLocks": {
        "description": "If set to 0, we won't do any flushes for streaming textures. This is safe because the texture streamer deals with these hazards explicitly.",
        "value": 0.0
    },
    "r.Fog": {
        "description": " 0: disabled\n 1: enabled (default)",
        "value": 1.0
    },
    "r.ForceAllCoresForShaderCompiling": {
        "description": "When set to 1, it will ignore INI settings and launch as many ShaderCompileWorker instances as cores are available.\nImproves shader throughput but for big projects it can make the machine run OOM",
        "value": 0.0
    },
    "r.ForceDebugViewModes": {
        "description": "0: Setting has no effect.\n1: Forces debug view modes to be available, even on cooked builds.2: Forces debug view modes to be unavailable, even on editor builds.  Removes many shader permutations for faster shader iteration.",
        "value": 0.0
    },
    "r.ForceHighestMipOnUITextures": {
        "description": "If set to 1, texutres in the UI Group will have their highest mip level forced.",
        "value": 0.0
    },
    "r.ForceSceneHasDecals": {
        "description": "Whether to always assume that scene has decals, so we don't switch depth state conditionally. This can significantly reduce total number of PSOs at a minor GPU cost.",
        "value": 0.0
    },
    "r.ForceStripAdjacencyDataDuringCooking": {
        "description": "If set, adjacency data will be stripped for all static and skeletal meshes during cooking (acting like the target platform did not support tessellation).",
        "value": 0.0
    },
    "r.Forward.LightGridPixelSize": {
        "description": "Size of a cell in the light grid, in pixels.",
        "value": 64.0
    },
    "r.Forward.LightGridSizeZ": {
        "description": "Number of Z slices in the light grid.",
        "value": 32.0
    },
    "r.Forward.LightLinkedListCulling": {
        "description": "Uses a reverse linked list to store culled lights, removing the fixed limit on how many lights can affect a cell - it becomes a global limit instead.",
        "value": 1.0
    },
    "r.Forward.MaxCulledLightsPerCell": {
        "description": "Controls how much memory is allocated for each cell for light culling.  When r.Forward.LightLinkedListCulling is enabled, this is used to compute a global max instead of a per-cell limit on culled lights.",
        "value": 32.0
    },
    "r.ForwardShading": {
        "description": "Whether to use forward shading on desktop platforms - requires Shader Model 5 hardware.\nForward shading has lower constant cost, but fewer features supported. 0:off, 1:on\nThis rendering path is a work in progress with many unimplemented features, notably only a single reflection capture is applied per object and no translucency dynamic shadow receiving.",
        "value": 0.0
    },
    "r.FramesToExpandNewlyOcclusionTestedBBoxes": {
        "description": "If we don't occlusion test a primitive for r.GFramesNotOcclusionTestedToExpandBBoxes frames, then we expand the BBox when we do occlusion test it for this number of frames. See also r.GFramesNotOcclusionTestedToExpandBBoxes, r.ExpandNewlyOcclusionTestedBBoxesAmount",
        "value": 2.0
    },
    "r.FreeReflectionScratchAfterUse": {
        "description": "Free reflection scratch render targets after use.",
        "value": 0.0
    },
    "r.FreeSkeletalMeshBuffers": {
        "description": "Controls whether skeletal mesh buffers are kept in CPU memory to support merging of skeletal meshes.\n0: Keep buffers(default)\n1: Free buffers",
        "value": 0.0
    },
    "r.FrustumCullNumWordsPerTask": {
        "description": "Performance tweak. Controls the granularity for the ParallelFor for frustum culling.",
        "value": 128.0
    },
    "r.FullScreenMode": {
        "description": "Defines how we do full screen when requested (e.g. command line option -fullscreen or in ini [SystemSettings] fullscreen=true)\n 0: normal full screen (renders faster, more control over vsync, less GPU memory, 10bit color if possible)\n 1: windowed full screen (quick switch between applications and window mode, slight performance loss)\n any other number behaves like 0",
        "value": 1.0
    },
    "r.GBufferFormat": {
        "description": "Defines the memory layout used for the GBuffer.\n(affects performance, mostly through bandwidth, quality of normals and material attributes).\n 0: lower precision (8bit per component, for profiling)\n 1: low precision (default)\n 3: high precision normals encoding\n 5: high precision",
        "value": 1.0
    },
    "r.GFramesNotOcclusionTestedToExpandBBoxes": {
        "description": "If we don't occlusion test a primitive for this many frames, then we expand the BBox when we do occlusion test it for a few frames. See also r.ExpandNewlyOcclusionTestedBBoxesAmount, r.FramesToExpandNewlyOcclusionTestedBBoxes",
        "value": 5.0
    },
    "r.GPUCrashDebugging": {
        "description": "Enable vendor specific GPU crash analysis tools",
        "value": 0.0
    },
    "r.GPUDefrag.AllowOverlappedMoves": {
        "description": "Allows defrag relocations that partially overlap themselves.\n",
        "value": 1.0
    },
    "r.GPUDefrag.EnableTimeLimits": {
        "description": "Limits CPU time spent doing GPU defragmentation.\n",
        "value": 1.0
    },
    "r.GPUDefrag.MaxRelocations": {
        "description": "Limits the number of total relocations in a frame regardless of number of bytes moved..\n",
        "value": 10.0
    },
    "r.GPUParticle.AFRReinject": {
        "description": "Toggle optimization when running in AFR to re-inject particle injections on the next GPU rather than doing a slow GPU->GPU transfer of the texture data\n  0: Reinjection off\n  1: Reinjection on",
        "value": 1.0
    },
    "r.GPUParticle.FixDeltaSeconds": {
        "description": "GPU particle fix delta seconds.",
        "value": 0.03333333507180214
    },
    "r.GPUParticle.FixTolerance": {
        "description": "Delta second tolerance before switching to a fix delta seconds.",
        "value": 0.10000000149011612
    },
    "r.GPUParticle.MaxNumIterations": {
        "description": "Max number of iteration when using a fix delta seconds.",
        "value": 3.0
    },
    "r.GPUParticle.Simulate": {
        "description": "Enable or disable GPU particle simulation",
        "value": 1.0
    },
    "r.GPUScene.MaxPooledUploadBufferSize": {
        "description": "Maximum size of GPU Scene upload buffer size to pool.",
        "value": 256000.0
    },
    "r.GPUScene.UploadEveryFrame": {
        "description": "Whether to upload the entire scene's primitive data every frame.  Useful for debugging.",
        "value": 0.0
    },
    "r.GPUScene.ValidatePrimitiveBuffer": {
        "description": "Whether to readback the GPU primitive data and assert if it doesn't match the RT primitive data.  Useful for debugging.",
        "value": 0.0
    },
    "r.GPUSkin.Limit2BoneInfluences": {
        "description": "Whether to use 2 bones influence instead of default 4/8 for GPU skinning. Cannot be changed at runtime.",
        "value": 0.0
    },
    "r.GPUSkin.Support16BitBoneIndex": {
        "description": "If enabled, a new mesh imported will use 8 bit (if <=256 bones) or 16 bit (if > 256 bones) bone indices for rendering.",
        "value": 0.0
    },
    "r.GPUSkin.UnlimitedBoneInfluences": {
        "description": "Whether to use unlimited bone influences instead of default 4/8 for GPU skinning. Cannot be changed at runtime.",
        "value": 0.0
    },
    "r.GPUSkin.UnlimitedBoneInfluencesThreshold": {
        "description": "Unlimited Bone Influences Threshold to use unlimited bone influences buffer if r.GPUSkin.UnlimitedBoneInfluences is enabled. Should be unsigned int. Cannot be changed at runtime.",
        "value": 8.0
    },
    "r.GTAO.Combined": {
        "description": "Enable Spatial Filter for GTAO \n 0: Off \n 1: On (default)\n ",
        "value": 1.0
    },
    "r.GTAO.Downsample": {
        "description": "Perform GTAO at Halfres \n 0: Off \n 1: On (default)\n ",
        "value": 0.0
    },
    "r.GTAO.FalloffEnd": {
        "description": "Distance at when the occlusion completes the fall off.  \n ",
        "value": 200.0
    },
    "r.GTAO.FalloffStartRatio": {
        "description": "Ratio of the r.GTAO.FalloffEnd value at which it starts to fall off. \n Must be Between 0 and 1. \n ",
        "value": 0.5
    },
    "r.GTAO.FilterWidth": {
        "description": "Size of the noise pattern and filter width\n 5: 5x5 Pattern (default) \n 4: 4x4 Pattern \n ",
        "value": 5.0
    },
    "r.GTAO.NumAngles": {
        "description": "How Many Angles we choose per pixel \n Must be Between 1 and 16. \n ",
        "value": 2.0
    },
    "r.GTAO.PauseJitter": {
        "description": "Whether to pause Jitter when Temporal filter is off \n ",
        "value": 0.0
    },
    "r.GTAO.SpatialFilter": {
        "description": "Enable Spatial Filter for GTAO \n 0: Off \n 1: On (default)\n ",
        "value": 1.0
    },
    "r.GTAO.TemporalFilter": {
        "description": "Enable Temporal Filter for GTAO \n 0: Off \n 1: On (default)\n ",
        "value": 1.0
    },
    "r.GTAO.ThicknessBlend": {
        "description": "A heuristic to bias occlusion for thin or thick objects. \n 0  : Off \n >0 : On - Bigger values lead to reduced occlusion \n 0.5: On (default)\n ",
        "value": 0.5
    },
    "r.GTAO.Upsample": {
        "description": "Enable Simple or Depth aware upsample filter for GTAO \n 0: Simple \n 1: DepthAware (default)\n ",
        "value": 1.0
    },
    "r.GTAO.UseNormals": {
        "description": "Whether to use GBuffer Normals or Depth Derived normals \n 0: Off \n 1: On (default)\n ",
        "value": 0.0
    },
    "r.GTSyncType": {
        "description": "Determines how the game thread syncs with the render thread, RHI thread and GPU.\nSyncing to the GPU swap chain flip allows for lower frame latency.\n 0 - Sync the game thread with the render thread (default).\n 1 - Sync the game thread with the RHI thread.\n 2 - Sync the game thread with the GPU swap chain flip (only on supported platforms).\n",
        "value": 0.0
    },
    "r.Gamma": {
        "description": "Gamma on output",
        "value": 1.0
    },
    "r.GenerateLandscapeGIData": {
        "description": "Whether to generate a low-resolution base color texture for landscapes for rendering real-time global illumination.\nThis feature requires GenerateMeshDistanceFields is also enabled, and will increase mesh build times and memory usage.\n",
        "value": 0.0
    },
    "r.GenerateMeshDistanceFields": {
        "description": "Whether to build distance fields of static meshes, needed for distance field AO, which is used to implement Movable SkyLight shadows.\nEnabling will increase mesh build times and memory usage.  Changing this value will cause a rebuild of all static meshes.",
        "value": 0.0
    },
    "r.GeometryCollectionTripleBufferUploads": {
        "description": "Whether to triple buffer geometry collection uploads, which allows Lock_NoOverwrite uploads which are much faster on the GPU with large amounts of data.",
        "value": 1.0
    },
    "r.GlobalDistanceFieldHeightFieldThicknessScale": {
        "description": "Thickness of the height field when it's entered into the global distance field, measured in distance field voxels. Defaults to 4 which means 4x the voxel size as thickness.",
        "value": 4.0
    },
    "r.GlobalIllumination.Denoiser.HistoryConvolution.KernelSpreadFactor": {
        "description": "Multiplication factor applied on the kernel sample offset (default=3).",
        "value": 3.0
    },
    "r.GlobalIllumination.Denoiser.HistoryConvolution.SampleCount": {
        "description": "Number of samples to use for history post filter (default = 1).",
        "value": 1.0
    },
    "r.GlobalIllumination.Denoiser.PreConvolution": {
        "description": "Number of pre-convolution passes (default = 1).",
        "value": 1.0
    },
    "r.GlobalIllumination.Denoiser.ReconstructionSamples": {
        "description": "Maximum number of samples for the reconstruction pass (default = 16).",
        "value": 16.0
    },
    "r.GlobalIllumination.Denoiser.TemporalAccumulation": {
        "description": "Accumulates the samples over multiple frames.",
        "value": 1.0
    },
    "r.GpuSkin.Pool": {
        "description": "Should we pool gpu skins.\n 0: Don't pool anything\n 1: Pool gpu skins bro (default)\n",
        "value": 1.0
    },
    "r.GraphicsAdapter": {
        "description": "User request to pick a specific graphics adapter (e.g. when using a integrated graphics card with a discrete one)\nFor Windows D3D, unless a specific adapter is chosen we reject Microsoft adapters because we don't want the software emulation.\nThis takes precedence over -prefer{AMD|NVidia|Intel} when the value is >= 0.\n -2: Take the first one that fulfills the criteria\n -1: Favour non integrated because there are usually faster (default)\n  0: Adapter #0\n  1: Adapter #1, ...",
        "value": -1.0
    },
    "r.HDR.Display.ColorGamut": {
        "description": "Color gamut of the output display:\n0: Rec709 / sRGB, D65 (default)\n1: DCI-P3, D65\n2: Rec2020 / BT2020, D65\n3: ACES, D60\n4: ACEScg, D60\n",
        "value": 0.0
    },
    "r.HDR.Display.OutputDevice": {
        "description": "Device format of the output display:\n0: sRGB (LDR)\n1: Rec709 (LDR)\n2: Explicit gamma mapping (LDR)\n3: ACES 1000 nit ST-2084 (Dolby PQ) (HDR)\n4: ACES 2000 nit ST-2084 (Dolby PQ) (HDR)\n5: ACES 1000 nit ScRGB (HDR)\n6: ACES 2000 nit ScRGB (HDR)\n7: Linear EXR (HDR)\n8: Linear final color, no tone curve (HDR)\n9: Linear final color with tone curve\n",
        "value": 0.0
    },
    "r.HDR.EnableHDROutput": {
        "description": "Creates an HDR compatible swap-chain and enables HDR display output.0: Disabled (default)\n1: Enable hardware-specific implementation\n",
        "value": 0.0
    },
    "r.HDR.UI.CompositeMode": {
        "description": "Mode used when compositing the UI layer:\n0: Standard compositing\n1: Shader pass to improve HDR blending\n",
        "value": 1.0
    },
    "r.HDR.UI.Level": {
        "description": "Luminance level for UI elements when compositing into HDR framebuffer (default: 1.0).",
        "value": 1.0
    },
    "r.HFShadowAverageObjectsPerCullTile": {
        "description": "Determines how much memory should be allocated in height field object culling data structures.  Too much = memory waste, too little = flickering due to buffer overflow.",
        "value": 16.0
    },
    "r.HFShadowQuality": {
        "description": "Defines the height field shadow method which allows to adjust for quality or performance.\n 0:off, 1:low (8 steps), 2:medium (16 steps, default), 3:high (32 steps, hole aware)",
        "value": 2.0
    },
    "r.HLOD.DistanceOverride": {
        "description": "If non-zero, overrides the distance that HLOD transitions will take place for all objects at the HLOD level index, formatting is as follows:\n'r.HLOD.DistanceOverride 5000, 10000, 20000' would result in HLOD levels 0, 1 and 2 transitioning at 5000, 1000 and 20000 respectively.",
        "value": 0.0
    },
    "r.HLOD.DistanceOverrideScale": {
        "description": "Scales the value in r.HLOD.DistanceOverride, Default off.\nThis is an optional scale intended to allow game logic to dynamically modify without impacting scalability.\n",
        "value": 0.0
    },
    "r.HLOD.DitherPauseTime": {
        "description": "HLOD dither pause time in seconds\n",
        "value": 0.5
    },
    "r.HLOD.ForceDisableCastDynamicShadow": {
        "description": "If non-zero, will set bCastDynamicShadow to false for all LODActors, regardless of the shadowing setting of their subactors.",
        "value": 0.0
    },
    "r.HLOD.MaximumLevel": {
        "description": "How far down the LOD hierarchy to allow showing (can be used to limit quality loss and streaming texture memory usage on high scalability settings)\n-1: No maximum level (default)\n0: Prevent ever showing a HLOD cluster instead of individual meshes\n1: Allow only the first level of HLOD clusters to be shown\n2+: Allow up to the Nth level of HLOD clusters to be shown",
        "value": -1.0
    },
    "r.HZB.BuildUseCompute": {
        "description": "Selects whether HZB should be built with compute.",
        "value": 1.0
    },
    "r.HZBOcclusion": {
        "description": "Defines which occlusion system is used.\n 0: Hardware occlusion queries\n 1: Use HZB occlusion system (default, less GPU and CPU cost, more conservative results) 2: Force HZB occlusion system (overrides rendering platform preferences)",
        "value": 0.0
    },
    "r.HairStrands.Binding": {
        "description": "Enable/Disable hair binding, i.e., hair attached to skeletal meshes.",
        "value": 1.0
    },
    "r.HairStrands.Cards": {
        "description": "Enable/Disable hair cards rendering. This variable needs to be turned on when the engine starts.",
        "value": 1.0
    },
    "r.HairStrands.Cluster.CullingFreezeCamera": {
        "description": "Freeze camera when enabled. It will disable HZB culling because hzb buffer is not frozen.",
        "value": 0.0
    },
    "r.HairStrands.Cluster.CullingUsesHzb": {
        "description": "Enable/disable the use of HZB to help cull more hair clusters.",
        "value": 1.0
    },
    "r.HairStrands.Cluster.Debug": {
        "description": "Draw debug the world bounding box of hair clusters used for culling optimisation (0:off, 1:visible cluster, 2:culled cluster, 3:colored LOD, 4:LOD info).",
        "value": 0.0
    },
    "r.HairStrands.Cluster.ForceLOD": {
        "description": "Force a specific hair LOD.",
        "value": -1.0
    },
    "r.HairStrands.Components.GlobalScattering": {
        "description": "Enable/disable hair BSDF component global scattering",
        "value": 1.0
    },
    "r.HairStrands.Components.LocalScattering": {
        "description": "Enable/disable hair BSDF component local scattering",
        "value": 1.0
    },
    "r.HairStrands.Components.R": {
        "description": "Enable/disable hair BSDF component R",
        "value": 1.0
    },
    "r.HairStrands.Components.TRT": {
        "description": "Enable/disable hair BSDF component TRT",
        "value": 1.0
    },
    "r.HairStrands.Components.TT": {
        "description": "Enable/disable hair BSDF component TT",
        "value": 1.0
    },
    "r.HairStrands.Components.TTModel": {
        "description": "Select hair TT model",
        "value": 0.0
    },
    "r.HairStrands.ComposeAfterTranslucency": {
        "description": "Compose hair rendering with scene color after the translucency pass if true. Otherwise compose hair defor the translucent objects are rendered.",
        "value": 1.0
    },
    "r.HairStrands.Cull": {
        "description": "Cull hair strands (0:disabled, 1: render cull, 2: sim cull).",
        "value": 0.0
    },
    "r.HairStrands.Cull.Index": {
        "description": "Hair strands index to be kept. Other will be culled.",
        "value": -1.0
    },
    "r.HairStrands.Cull.Update": {
        "description": "Update the guide index to be kept using mouse position for fast selection.",
        "value": 0.0
    },
    "r.HairStrands.DOFDepth": {
        "description": "Compose hair with DOF by lerping hair depth based on its opacity.",
        "value": 1.0
    },
    "r.HairStrands.DebugMode": {
        "description": "Draw various stats/debug mode about hair rendering",
        "value": 0.0
    },
    "r.HairStrands.DebugMode.SampleIndex": {
        "description": "Debug value for a given sample index (default:-1, i.e., average sample information).",
        "value": -1.0
    },
    "r.HairStrands.DebugPPLL": {
        "description": "Draw debug per pixel light list rendering.",
        "value": 0.0
    },
    "r.HairStrands.DeepShadow.AABBScale": {
        "description": "Scaling value for loosing/tighting deep shadow bounding volume",
        "value": 1.0
    },
    "r.HairStrands.DeepShadow.DebugDOMIndex": {
        "description": "Index of the DOM texture to draw",
        "value": 0.0
    },
    "r.HairStrands.DeepShadow.DebugDOMScale": {
        "description": "Scaling value for the DeepOpacityMap when drawing the deep shadow stats",
        "value": 20.0
    },
    "r.HairStrands.DeepShadow.DebugMode": {
        "description": "Color debug mode for deep shadow",
        "value": 0.0
    },
    "r.HairStrands.DeepShadow.DensityScale": {
        "description": "Set density scale for compensating the lack of hair fiber in an asset",
        "value": 2.0
    },
    "r.HairStrands.DeepShadow.DepthBiasScale": {
        "description": "Set depth bias scale for transmittance computation",
        "value": 0.05000000074505806
    },
    "r.HairStrands.DeepShadow.GPUDriven": {
        "description": "Enable deep shadow to be driven by GPU bounding box, rather CPU ones. This allows more robust behavior",
        "value": 1.0
    },
    "r.HairStrands.DeepShadow.InjectVoxelDepth": {
        "description": "Inject voxel content to generate the deep shadow map instead of rasterizing groom. This is an experimental path",
        "value": 0.0
    },
    "r.HairStrands.DeepShadow.KernelAperture": {
        "description": "Set the aperture angle, in degree, used by the kernel for evaluating the hair transmittance when using PCSS kernel",
        "value": 1.0
    },
    "r.HairStrands.DeepShadow.KernelType": {
        "description": "Set the type of kernel used for evaluating hair transmittance, 0:linear, 1:PCF_2x2, 2: PCF_6x4, 3:PCSS, 4:PCF_6x6_Accurate",
        "value": 2.0
    },
    "r.HairStrands.DeepShadow.MaxFrustumAngle": {
        "description": "Max deep shadow frustum angle to avoid strong deformation. Default:90",
        "value": 90.0
    },
    "r.HairStrands.DeepShadow.MipTraversal": {
        "description": "Evaluate transmittance using mip-map traversal (faster).",
        "value": 1.0
    },
    "r.HairStrands.DeepShadow.RandomType": {
        "description": "Change how traversal jittering is initialized. Valid value are 0, 1, and 2. Each type makes different type of tradeoff.",
        "value": 2.0
    },
    "r.HairStrands.DeepShadow.Resolution": {
        "description": "Shadow resolution for Deep Opacity Map rendering. (default = 2048)",
        "value": 2048.0
    },
    "r.HairStrands.DeepShadow.ShadowMaskKernelType": {
        "description": "Set the kernel type for filtering shadow cast by hair on opaque geometry (0:2x2, 1:4x4, 2:Gaussian8, 3:Gaussian16, 4:Gaussian8 with transmittance. Default is 4",
        "value": 4.0
    },
    "r.HairStrands.DeepShadow.SuperSampling": {
        "description": "Evaluate transmittance with supersampling. This is expensive and intended to be used only in cine mode.",
        "value": 0.0
    },
    "r.HairStrands.DualScatteringRoughness": {
        "description": "Override all roughness for the dual scattering evaluation. 0 means no override. Default:0",
        "value": 0.0
    },
    "r.HairStrands.Enable": {
        "description": "Enable/Disable the entire hair strands system. This affects all geometric representations (i.e., strands, cards, and meshes).",
        "value": 1.0
    },
    "r.HairStrands.HairLUT.AbsorptionCount": {
        "description": "Change the number of slices of the hair LUT for the absorption axis",
        "value": 16.0
    },
    "r.HairStrands.HairLUT.IncidentAngleCount": {
        "description": "Change the number of slices of the hair LUT for the incident angle axis",
        "value": 64.0
    },
    "r.HairStrands.HairLUT.RoughnessCount": {
        "description": "Change the number of slices of the hair LUT for the roughness axis",
        "value": 64.0
    },
    "r.HairStrands.HairLUT.SampleCountScale": {
        "description": "Change the number of sample used for computing the hair LUT. This is a multiplier, default is 1.",
        "value": 1.0
    },
    "r.HairStrands.Interpolation.UseSingleGuide": {
        "description": "IAmNoRealVariable",
        "value": 0.0
    },
    "r.HairStrands.MaterialCompaction": {
        "description": "Enable extra compaction based on material properties in order to reduce sample per pixel and improve performance.",
        "value": 0.0
    },
    "r.HairStrands.MaterialCompaction.DepthThreshold": {
        "description": "Compaction threshold for depth value for material compaction (in centimeters). Default 1 cm.",
        "value": 1.0
    },
    "r.HairStrands.MaterialCompaction.TangentThreshold": {
        "description": "Compaciton threshold for tangent value for material compaction (in degrees). Default 10 deg.",
        "value": 10.0
    },
    "r.HairStrands.Meshes": {
        "description": "Enable/Disable hair meshes rendering. This variable needs to be turned on when the engine starts.",
        "value": 1.0
    },
    "r.HairStrands.PlotBsdf": {
        "description": "Debug view for visualizing hair BSDF.",
        "value": 0.0
    },
    "r.HairStrands.PlotBsdf.BaseColor": {
        "description": "Change the base color / absorption of the debug BSDF plot.",
        "value": 1.0
    },
    "r.HairStrands.PlotBsdf.Exposure": {
        "description": "Change the exposure of the plot.",
        "value": 1.100000023841858
    },
    "r.HairStrands.PlotBsdf.Roughness": {
        "description": "Change the roughness of the debug BSDF plot.",
        "value": 0.30000001192092896
    },
    "r.HairStrands.RasterizationScale": {
        "description": "Rasterization scale to snap strand to pixel",
        "value": 0.5
    },
    "r.HairStrands.Raytracing": {
        "description": "Enable/Disable hair strands raytracing geometry. This is anopt-in option per groom asset/groom instance.",
        "value": 1.0
    },
    "r.HairStrands.RectLightingOptim": {
        "description": "Hair Visibility use projected view rect to light only relevant pixels",
        "value": 0.0
    },
    "r.HairStrands.Scatter": {
        "description": "Enable screen space hair scattering.",
        "value": 0.0
    },
    "r.HairStrands.Scatter.Debug": {
        "description": "Enable debug view of screen space hair scattering.",
        "value": 0.0
    },
    "r.HairStrands.Scatter.IterationCount": {
        "description": "Number of diffusion iterations.",
        "value": 1.0
    },
    "r.HairStrands.Scatter.SampleCount": {
        "description": "Number of sample using during the scattering integration.",
        "value": 8.0
    },
    "r.HairStrands.Scatter.WorldRadius": {
        "description": "Gather radius in world space (in cm).",
        "value": 1.0
    },
    "r.HairStrands.ScatterSceneLighting": {
        "description": "Enable scene color lighting scattering into hair (valid for short hair only).",
        "value": 1.0
    },
    "r.HairStrands.Shadow.CullPerObjectShadowCaster": {
        "description": "Enable CPU culling of object casting per-object shadow (stationnary object)",
        "value": 1.0
    },
    "r.HairStrands.ShadowRasterizationScale": {
        "description": "Rasterization scale to snap strand to pixel in shadow view",
        "value": 1.0
    },
    "r.HairStrands.Simulation": {
        "description": "Enable/disable hair simulation",
        "value": 1.0
    },
    "r.HairStrands.SkyAO": {
        "description": "Enable (sky) AO on hair.",
        "value": 1.0
    },
    "r.HairStrands.SkyAO.DistanceThreshold": {
        "description": "Max distance for occlusion search.",
        "value": 10.0
    },
    "r.HairStrands.SkyAO.SampleCount": {
        "description": "Number of samples used for evaluating hair AO (default is set to 16).",
        "value": 4.0
    },
    "r.HairStrands.SkyLighting": {
        "description": "Enable sky lighting on hair.",
        "value": 1.0
    },
    "r.HairStrands.SkyLighting.ConeAngle": {
        "description": "Cone angle for tracing sky lighting on hair.",
        "value": 3.0
    },
    "r.HairStrands.SkyLighting.DebugSample": {
        "description": "Enable debug view for visualizing sample used for the sky integration",
        "value": 0.0
    },
    "r.HairStrands.SkyLighting.DistanceThreshold": {
        "description": "Max distance for occlusion search.",
        "value": 10.0
    },
    "r.HairStrands.SkyLighting.IntegrationType": {
        "description": "Hair env. lighting integration type (0:Adhoc, 1:Uniform.",
        "value": 2.0
    },
    "r.HairStrands.SkyLighting.SampleCount": {
        "description": "Number of samples used for evaluating multiple scattering and visible area (default is set to 16).",
        "value": 16.0
    },
    "r.HairStrands.SkyLighting.TransmissionDensityScale": {
        "description": "Density scale for controlling how much sky lighting is transmitted.",
        "value": 10.0
    },
    "r.HairStrands.SkyLighting.UseViewHairCount": {
        "description": "Use the view hair count texture for estimating background transmitted light (enabled by default).",
        "value": 1.0
    },
    "r.HairStrands.StableRasterizationScale": {
        "description": "Rasterization scale to snap strand to pixel for 'stable' hair option. This value can't go below 1.",
        "value": 1.0
    },
    "r.HairStrands.Strands": {
        "description": "Enable/Disable hair strands rendering",
        "value": 1.0
    },
    "r.HairStrands.StrandsMode": {
        "description": "Render debug mode for hair strands. 0:off, 1:simulation strands, 2:render strands with colored simulation strands influence, 3:hair UV, 4:hair root UV, 5: hair seed, 6: dimensions",
        "value": 0.0
    },
    "r.HairStrands.VelocityMagnitudeScale": {
        "description": "Velocity magnitude (in pixel) at which a hair will reach its pic velocity-rasterization-scale under motion to reduce aliasing. Default is 100.",
        "value": 100.0
    },
    "r.HairStrands.VelocityRasterizationScale": {
        "description": "Rasterization scale to snap strand to pixel under high velocity",
        "value": 1.5
    },
    "r.HairStrands.VelocityThreshold": {
        "description": "Threshold value (in pixel) above which a pixel is forced to be resolve with responsive AA (in order to avoid smearing). Default is 3.",
        "value": 1.0
    },
    "r.HairStrands.VelocityType": {
        "description": "Type of velocity filtering (0:avg, 1:closest, 2:max). Default is 1.",
        "value": 1.0
    },
    "r.HairStrands.ViewTransmittancePass": {
        "description": "Enable accurate transmittance pass for better rendering of small scale hair strand.",
        "value": 1.0
    },
    "r.HairStrands.Visibility.Clear": {
        "description": "Clear hair strands visibility buffer",
        "value": 0.0
    },
    "r.HairStrands.Visibility.ComputeRaster": {
        "description": "Hair Visiblity uses raster compute.",
        "value": 0.0
    },
    "r.HairStrands.Visibility.ComputeRaster.MaxPixelCount": {
        "description": "Define the maximal length rasterize in compute.",
        "value": 64.0
    },
    "r.HairStrands.Visibility.ComputeRaster.SamplePerPixel": {
        "description": "Define the number of sampler per pixel using raster compute.",
        "value": 1.0
    },
    "r.HairStrands.Visibility.Emissive": {
        "description": "Enable emissive data during the material pass.",
        "value": 0.0
    },
    "r.HairStrands.Visibility.FullCoverageThreshold": {
        "description": "Define the coverage threshold at which a pixel is considered fully covered.",
        "value": 0.9800000190734863
    },
    "r.HairStrands.Visibility.HairCount.DistanceThreshold": {
        "description": "Distance threshold defining if opaque depth get injected into the 'view-hair-count' buffer.",
        "value": 30.0
    },
    "r.HairStrands.Visibility.MSAA.MeanSamplePerPixel": {
        "description": "Scale the numer of sampler per pixel for limiting memory allocation (0..1, default 0.5f)",
        "value": 0.75
    },
    "r.HairStrands.Visibility.MSAA.SamplePerPixel": {
        "description": "Hair strands visibility sample count (2, 4, or 8)",
        "value": 4.0
    },
    "r.HairStrands.Visibility.MaterialPass": {
        "description": "Enable the deferred material pass evaluation after the hair visibility is resolved.",
        "value": 1.0
    },
    "r.HairStrands.Visibility.PPLL": {
        "description": "Hair Visibility uses per pixel linked list",
        "value": 0.0
    },
    "r.HairStrands.Visibility.PPLL.MeanSamplePerPixel": {
        "description": "Scale the maximum number of node allowed for all linked list element (0..1, default 1). It will be width*height*SamplerPerPixel*Scale.",
        "value": 1.0
    },
    "r.HairStrands.Visibility.PPLL.SamplePerPixel": {
        "description": "The maximum number of node allowed to be independently shaded and composited per pixel. Total amount of node will be width*height*VisibilityPPLLMaxRenderNodePerPixel. The last node is used to aggregate all furthest strands to shade into a single one.",
        "value": 16.0
    },
    "r.HairStrands.Visibility.SortByDepth": {
        "description": "Sort hair fragment by depth and update their coverage based on ordered transmittance.",
        "value": 0.0
    },
    "r.HairStrands.Visibility.UseCoverageMappping": {
        "description": "Use hair count to coverage transfer function.",
        "value": 0.0
    },
    "r.HairStrands.Visibility.UseFastPath": {
        "description": "Use fast path writing hair data into Gbuffer.",
        "value": 0.0
    },
    "r.HairStrands.Voxelization": {
        "description": "Enable hair voxelization for transmittance evaluation",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.AABBScale": {
        "description": "Scale the hair macro group bounding box",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.DensityScale": {
        "description": "Scale the hair density when computing voxel transmittance. Default value is 2 (arbitraty)",
        "value": 2.0
    },
    "r.HairStrands.Voxelization.DensityScale.AO": {
        "description": "Scale the hair density when computing voxel AO. (Default:-1, it will use the global density scale",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.DensityScale.Environment": {
        "description": "Scale the hair density when computing voxel environment. (Default:-1, it will use the global density scale",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.DensityScale.Raytracing": {
        "description": "Scale the hair density when computing voxel raytracing. (Default:-1, it will use the global density scale",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.DensityScale.Shadow": {
        "description": "Scale the hair density when computing voxel shadow. (Default:-1, it will use the global density scale",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.DensityScale.Transmittance": {
        "description": "Scale the hair density when computing voxel transmittance. (Default:-1, it will use the global density scale",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.DepthBiasScale.Environment": {
        "description": "Set depth bias for voxel ray marching for environement lights. Offset the origin position towards the light",
        "value": 1.7999999523162842
    },
    "r.HairStrands.Voxelization.DepthBiasScale.Light": {
        "description": "Set depth bias for voxel ray marching for analyticaly light. Offset the origin position towards the light for transmittance computation",
        "value": 3.0
    },
    "r.HairStrands.Voxelization.DepthBiasScale.Shadow": {
        "description": "Set depth bias for voxel ray marching for analyticaly light. Offset the origin position towards the light for shadow computation",
        "value": 2.0
    },
    "r.HairStrands.Voxelization.DepthBiasScale.Transmittance": {
        "description": "Set depth bias for voxel ray marching for analyticaly light. Offset the origin position towards the light for transmittance computation",
        "value": 3.0
    },
    "r.HairStrands.Voxelization.ForceTransmittanceAndShadow": {
        "description": "For transmittance and shadow to be computed with density volume. This requires voxelization is enabled.",
        "value": 0.0
    },
    "r.HairStrands.Voxelization.GPUDriven": {
        "description": "Enable GPU driven voxelization.",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.GPUDriven.MaxPageIndexResolution": {
        "description": "Max resolution of the page index. This is used for allocating a conservative page index buffer when GPU driven allocation is enabled.",
        "value": 32.0
    },
    "r.HairStrands.Voxelization.InjectOpaque.BiasCount": {
        "description": "Bias, in number of voxel, at which opaque depth is injected.",
        "value": 3.0
    },
    "r.HairStrands.Voxelization.InjectOpaque.MarkCount": {
        "description": "Number of voxel marked as opaque starting along the view direction beneath the opaque surface.",
        "value": 6.0
    },
    "r.HairStrands.Voxelization.InjectOpaqueDepth": {
        "description": "Inject opaque geometry depth into the voxel volume for acting as occluder.",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.Raymarching.SteppingScale": {
        "description": "Stepping scale used for raymarching the voxel structure for shadow.",
        "value": 1.149999976158142
    },
    "r.HairStrands.Voxelization.Raymarching.SteppingScale.Environment": {
        "description": "Stepping scale used for raymarching the voxel structure, override scale for env. lighting (default -1).",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.Raymarching.SteppingScale.Raytracing": {
        "description": "Stepping scale used for raymarching the voxel structure, override scale for raytracing (default -1).",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.Raymarching.SteppingScale.Shadow": {
        "description": "Stepping scale used for raymarching the voxel structure, override scale for shadow (default -1).",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.Raymarching.SteppingScale.Transmission": {
        "description": "Stepping scale used for raymarching the voxel structure, override scale for transmittance (default -1).",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.UseIndiretScatterPageAllocate": {
        "description": "Enable indirect scatter page allocation (faster).",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.Virtual": {
        "description": "Enable the two voxel hierachy.",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.Virtual.ComputeRaster": {
        "description": "Use compute for rasterizing voxeliation (faster).",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.Virtual.ComputeRasterMaxVoxelCount": {
        "description": "Max number of voxel which are rasterized for a given hair segment. This is for debug purpose only.",
        "value": 32.0
    },
    "r.HairStrands.Voxelization.Virtual.DebugTraversalType": {
        "description": "Traversal mode (0:linear, 1:mip) for debug voxel visualization.",
        "value": 0.0
    },
    "r.HairStrands.Voxelization.Virtual.DrawDebugPage": {
        "description": "When voxel debug rendering is enable 1: render the page bounds, instead of the voxel 2: the occupancy within the page (i.e., 8x8x8 brick)",
        "value": 0.0
    },
    "r.HairStrands.Voxelization.Virtual.ForceMipLevel": {
        "description": "Force a particular mip-level",
        "value": -1.0
    },
    "r.HairStrands.Voxelization.Virtual.InvalidateEmptyPageIndex": {
        "description": "Invalid voxel page index which does not contain any voxelized data.",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.Virtual.UseDirectPageAllocation": {
        "description": "Use the indirect page allocation code path, but force internally direct page allocation (for debugging purpose only).",
        "value": 1.0
    },
    "r.HairStrands.Voxelization.Virtual.VoxelPageCountPerDim": {
        "description": "Number of voxel pages per texture dimension. The voxel page memory is allocated with a 3D texture. This value provide the resolution of this texture.",
        "value": 14.0
    },
    "r.HairStrands.Voxelization.Virtual.VoxelPageResolution": {
        "description": "Resolution of a voxel page.",
        "value": 32.0
    },
    "r.HairStrands.Voxelization.Virtual.VoxelWorldSize": {
        "description": "World size of a voxel in cm.",
        "value": 0.30000001192092896
    },
    "r.HairStrands.VoxelizationRasterizationScale": {
        "description": "Rasterization scale to snap strand to pixel for voxelization",
        "value": 1.0
    },
    "r.HairStrands.WriteGBufferData": {
        "description": "Write hair hair material data into GBuffer before post processing run. 0: no write, 1: dummy write into GBuffer A/B (Normal/ShadingModel), 2: write into GBuffer A/B (Normal/ShadingModel). 2: Write entire GBuffer data. (default 1).",
        "value": 1.0
    },
    "r.HeightFieldShadowing": {
        "description": "Whether the height field shadowing feature is allowed.",
        "value": 0.0
    },
    "r.HeightFields.AtlasDimInTiles": {
        "description": "Number of tiles the atlas has in one dimension",
        "value": 16.0
    },
    "r.HeightFields.AtlasDownSampleLevel": {
        "description": "Max number of times a suballocation can be down-sampled",
        "value": 2.0
    },
    "r.HeightFields.AtlasTileSize": {
        "description": "Suballocation granularity",
        "value": 64.0
    },
    "r.HeightFields.VisibilityAtlasDimInTiles": {
        "description": "Number of tiles the atlas has in one dimension",
        "value": 8.0
    },
    "r.HeightFields.VisibilityAtlasDownSampleLevel": {
        "description": "Max number of times a suballocation can be down-sampled",
        "value": 2.0
    },
    "r.HeightFields.VisibilityAtlasTileSize": {
        "description": "Suballocation granularity",
        "value": 64.0
    },
    "r.HeightfieldGlobalIllumination": {
        "description": "",
        "value": 1.0
    },
    "r.HeightfieldInnerBounceDistance": {
        "description": "",
        "value": 3000.0
    },
    "r.HeightfieldOuterBounceDistanceScale": {
        "description": "",
        "value": 3.0
    },
    "r.HeightfieldTargetUnitsPerTexel": {
        "description": "",
        "value": 200.0
    },
    "r.HighQualityLightMaps": {
        "description": "If set to 1, allow high quality lightmaps which don't bake in direct lighting of stationary lights",
        "value": 1.0
    },
    "r.HighResScreenshotDelay": {
        "description": "When high-res screenshots are requested there is a small delay to allow temporal effects to converge.\nDefault: 4. Using a value below the default will disable TemporalAA for improved image quality.",
        "value": 4.0
    },
    "r.IncludeNonVirtualTexturedLightmaps": {
        "description": "If 'r.VirtualTexturedLightmaps' is enabled, controls whether non-VT lightmaps are generated/saved as well.\nIncluding non-VT lightmaps will constrain lightmap atlas size, which removes some of the benefit of VT lightmaps.\n 0: Not included.\n 1: Included.",
        "value": 0.0
    },
    "r.IndirectLightingCache": {
        "description": "Whether to use the indirect lighting cache on dynamic objects.  0 is off, 1 is on (default)",
        "value": 1.0
    },
    "r.IrisNormal": {
        "description": "0 to disable iris normal.\n 0: off\n 1: on",
        "value": 0.0
    },
    "r.KeepOverrideVertexColorsOnCPU": {
        "description": "Keeps a CPU copy of override vertex colors.  May be required for some blueprints / object spawning.",
        "value": 1.0
    },
    "r.KeepPreCulledIndicesThreshold": {
        "description": "",
        "value": 0.949999988079071
    },
    "r.LODFadeTime": {
        "description": "How long LOD takes to fade (in seconds).",
        "value": 0.25
    },
    "r.LPV.DiffuseIntensity": {
        "description": "Multiplier for LPV Diffuse.",
        "value": 0.3330000042915344
    },
    "r.LPV.DirectionalOcclusionDefaultDiffuse": {
        "description": "",
        "value": 0.75
    },
    "r.LPV.DirectionalOcclusionDefaultSpecular": {
        "description": "",
        "value": 0.75
    },
    "r.LPV.EmissiveMultiplier": {
        "description": "Emissive intensity multiplier",
        "value": 1.0
    },
    "r.LPV.Intensity": {
        "description": "Multiplier for LPV intensity. 1.0 is the default.",
        "value": 1.0
    },
    "r.LPV.Mixing": {
        "description": "Reflection environment mixes with indirect shading (Ambient + LPV).\n 0 is off, 1 is on (default)",
        "value": 1.0
    },
    "r.LPV.NumAOPropagationSteps": {
        "description": "Number of LPV AO propagation steps\n0: noisy (good for debugging)\n1: normal (default)\n2: blurry",
        "value": 1.0
    },
    "r.LPV.NumPropagationSteps": {
        "description": "Number of LPV propagation steps",
        "value": 3.0
    },
    "r.LPV.RSMResolution": {
        "description": "Reflective Shadow Map resolution (used for LPV) - higher values result in less aliasing artifacts, at the cost of performance",
        "value": 360.0
    },
    "r.LPV.SpecularIntensity": {
        "description": "Multiplier for LPV Specular.",
        "value": 0.3330000042915344
    },
    "r.LUT.Size": {
        "description": "Size of film LUT",
        "value": 32.0
    },
    "r.LandscapeLOD0DistributionScale": {
        "description": "Multiplier for the landscape LOD0DistributionSetting property",
        "value": 1.0
    },
    "r.LandscapeLODBias": {
        "description": "LOD bias for landscape/terrain meshes.",
        "value": 0.0
    },
    "r.LandscapeLODDistributionScale": {
        "description": "Multiplier for the landscape LODDistributionSetting property",
        "value": 1.0
    },
    "r.LensFlareQuality": {
        "description": " 0: off but best for performance\n 1: low quality with good performance\n 2: good quality (default)\n 3: very good quality but bad performance",
        "value": 2.0
    },
    "r.LightCulling.Quality": {
        "description": "Whether to run compute light culling pass.\n 0: off \n 1: on (default)\n",
        "value": 1.0
    },
    "r.LightFunctionQuality": {
        "description": "Defines the light function quality which allows to adjust for quality or performance.\n<=0: off (fastest)\n  1: low quality (e.g. half res with blurring, not yet implemented)\n  2: normal quality (default)\n  3: high quality (e.g. super-sampled or colored, not yet implemented)",
        "value": 1.0
    },
    "r.LightMaxDrawDistanceScale": {
        "description": "Scale applied to the MaxDrawDistance of lights.  Useful for fading out local lights more aggressively on some platforms.",
        "value": 1.0
    },
    "r.LightPropagationVolume": {
        "description": "Project setting of the work in progress feature LightPropgationVolume. Cannot be changed at runtime.\n 0: off (default)\n 1: on",
        "value": 0.0
    },
    "r.LightShaftAllowTAA": {
        "description": "Allows temporal filtering for lightshafts.\n  0: off\n  1: on (default)",
        "value": 1.0
    },
    "r.LightShaftBlurPasses": {
        "description": "Number of light shaft blur passes.",
        "value": 3.0
    },
    "r.LightShaftDownSampleFactor": {
        "description": "Downsample factor for light shafts. range: 1..8",
        "value": 2.0
    },
    "r.LightShaftFirstPassDistance": {
        "description": "Fraction of the distance to the light to blur on the first radial blur pass.",
        "value": 0.10000000149011612
    },
    "r.LightShaftNumSamples": {
        "description": "Number of samples per light shaft radial blur pass.  Also affects how quickly the blur distance increases with each pass.",
        "value": 12.0
    },
    "r.LightShaftQuality": {
        "description": "Defines the light shaft quality (mobile and non mobile).\n  0: off\n  1: on (default)",
        "value": 1.0
    },
    "r.LightShaftRenderToSeparateTranslucency": {
        "description": "If enabled, light shafts will be rendered to the separate translucency buffer.\nThis ensures postprocess materials with BL_BeforeTranslucnecy are applied before light shafts",
        "value": 0.0
    },
    "r.ListSceneColorMaterials": {
        "command": true,
        "description": "Lists all materials that read from scene color."
    },
    "r.LogShaderCompilerStats": {
        "description": "When set to 1, Log detailed shader compiler stats.",
        "value": 0.0
    },
    "r.Lumin.OverrideExternalTextureSupport": {
        "description": "Override external texture support for OpenGLES API. (Lumin Only)\n  0 = normal detection used [default]\n  1 = disable external texture support\n  2 = force ImageExternal100 (version #100 with GL_OES_EGL_image_external)\n  3 = force ImageExternal300 (version #300 with GL_OES_EGL_image_external)\n  4 = force ImageExternalESSL300 (version #300 with GL_OES_EGL_image_external_essl3)",
        "value": 0.0
    },
    "r.LuminDebugCanvasHeight": {
        "description": "Allows the override of the lumin debug canvas height.",
        "value": 40.0
    },
    "r.LuminDebugCanvasWidth": {
        "description": "Allows the override of the lumin debug canvas width.",
        "value": 75.0
    },
    "r.LuminDebugCanvasX": {
        "description": "Allows the override of the lumin debug canvas 'x' coordinate.",
        "value": 11.0
    },
    "r.LuminDebugCanvasY": {
        "description": "Allows the override of the lumin debug canvas 'y' coordinate.",
        "value": -18.0
    },
    "r.LuminDebugCanvasZ": {
        "description": "Allows the override of the lumin debug canvas 'z' coordinate.",
        "value": 82.0
    },
    "r.MSAA.AllowCustomResolves": {
        "description": "Whether to use builtin HW resolve or allow custom shader MSAA resolves",
        "value": 1.0
    },
    "r.MSAA.CompositingSampleCount": {
        "description": "Affects the render quality of the editor 3d objects.\n 1: no MSAA, lowest quality\n 2: 2x MSAA, medium quality (medium GPU memory consumption)\n 4: 4x MSAA, high quality (high GPU memory consumption)\n 8: 8x MSAA, very high quality (insane GPU memory consumption)",
        "value": 4.0
    },
    "r.MSAACount": {
        "description": "Number of MSAA samples to use with the forward renderer.  Only used when MSAA is enabled in the rendering project settings.\n0: MSAA disabled (Temporal AA enabled)\n1: MSAA disabled\n2: Use 2x MSAA\n4: Use 4x MSAA8: Use 8x MSAA",
        "value": 4.0
    },
    "r.MaterialParameterLegacyChecks": {
        "description": "When enabled, sanity check new material parameter logic against legacy path.\nNote that this can be slow",
        "value": 0.0
    },
    "r.MaterialQualityLevel": {
        "description": "0 corresponds to low quality materials, as defined by quality switches in materials, 1 corresponds to high, 2 for medium, and 3 for Epic.",
        "value": 1.0
    },
    "r.MaxAnisotropy": {
        "description": "MaxAnisotropy should range from 1 to 16. Higher values mean better texure quality when using anisotropic filtering but at a cost to performance. Default is 4.",
        "value": 8.0
    },
    "r.MaxCSMRadiusToAllowPerObjectShadows": {
        "description": "Only stationary lights with a CSM radius smaller than this will create per object shadows for dynamic objects.",
        "value": 8000.0
    },
    "r.MaxQualityMode": {
        "description": "If set to 1, override certain system settings to highest quality regardless of performance impact",
        "value": 0.0
    },
    "r.MaxVertexBytesAllocatedPerFrame": {
        "description": "The maximum number of transient vertex buffer bytes to allocate before we start panic logging who is doing the allocations",
        "value": 33554432.0
    },
    "r.MeshDrawCommands.AllowOnDemandShaderCreation": {
        "description": "How to create RHI shaders:\n\t0: Always create them on a Rendering Thread, before executing other MDC tasks.\n\t1: If RHI supports multi-threaded shader creation, create them on demand on tasks threads, at the time of submitting the draws.\n",
        "value": 1.0
    },
    "r.MeshDrawCommands.DynamicInstancing": {
        "description": "Whether to dynamically combine multiple compatible visible Mesh Draw Commands into one instanced draw on vertex factories that support it.",
        "value": 1.0
    },
    "r.MeshDrawCommands.LogDynamicInstancingStats": {
        "description": "Whether to log dynamic instancing stats on the next frame",
        "value": 0.0
    },
    "r.MeshDrawCommands.LogMeshDrawCommandMemoryStats": {
        "description": "Whether to log mesh draw command memory stats on the next frame",
        "value": 0.0
    },
    "r.MeshDrawCommands.ParallelPassSetup": {
        "description": "Whether to setup mesh draw command pass in parallel.",
        "value": 1.0
    },
    "r.MeshDrawCommands.UseCachedCommands": {
        "description": "Whether to render from cached mesh draw commands (on vertex factories that support it), or to generate draw commands every frame.",
        "value": 1.0
    },
    "r.MeshParticle.MinDetailModeForMotionBlur": {
        "description": "Sets the minimum detail mode before mesh particles emit motion blur (Low  = 0, Med = 1, High = 2, Max = 3). Set to -1 to disable mesh particles motion blur entirely. Defaults to -1.",
        "value": -1.0
    },
    "r.MeshStreaming": {
        "description": "Experimental - When non zero, enables mesh stremaing.\n",
        "value": 0.0
    },
    "r.MinRoughnessOverride": {
        "description": "WARNING: This is an experimental feature that may change at any time.\nSets a global limit for roughness when used in the direct lighting calculations.\nThis can be used to limit the amount of fireflies caused by low roughness, in particular when AA is not in use.\n 0.0: no change (default)",
        "value": 0.0
    },
    "r.MinScreenRadiusForCSMDepth": {
        "description": "Threshold below which meshes will be culled from CSM depth pass.",
        "value": 0.009999999776482582
    },
    "r.MinScreenRadiusForDepthPrepass": {
        "description": "Threshold below which meshes will be culled from depth only pass.",
        "value": 0.029999999329447746
    },
    "r.MinScreenRadiusForLights": {
        "description": "Threshold below which lights will be culled.",
        "value": 0.029999999329447746
    },
    "r.MinYResolutionFor3DView": {
        "description": "Defines the smallest Y resolution we want to support in the 3D view",
        "value": 360.0
    },
    "r.MinYResolutionForUI": {
        "description": "Defines the smallest Y resolution we want to support in the UI (default is 720)",
        "value": 720.0
    },
    "r.MipMapLODBias": {
        "description": "Apply additional mip map bias for all 2D textures, range of -15.0 to 15.0",
        "value": 0.0
    },
    "r.Mobile.AdrenoOcclusionMode": {
        "description": "0: Render occlusion queries after the base pass (default).\n1: Render occlusion queries after translucency and a flush, which can help Adreno devices in GL mode.",
        "value": 0.0
    },
    "r.Mobile.AllowDistanceFieldShadows": {
        "description": "0: Do not generate shader permutations to render distance field shadows from stationary directional lights.\n1: Generate shader permutations to render distance field shadows from stationary directional lights. (default)",
        "value": 1.0
    },
    "r.Mobile.AllowDitheredLODTransition": {
        "description": "Whether to support 'Dithered LOD Transition' material option on mobile platforms",
        "value": 0.0
    },
    "r.Mobile.AllowMovableDirectionalLights": {
        "description": "0: Do not generate shader permutations to render movable directional lights.\n1: Generate shader permutations to render movable directional lights. (default)",
        "value": 1.0
    },
    "r.Mobile.AllowPixelDepthOffset": {
        "description": "Whether to allow 'Pixel Depth Offset' in materials for ES3.1 feature level. Depth modification in pixel shaders may reduce GPU performance",
        "value": 1.0
    },
    "r.Mobile.AllowSoftwareOcclusion": {
        "description": "Whether to allow rasterizing scene on CPU for primitive occlusion.\n",
        "value": 0.0
    },
    "r.Mobile.AlwaysResolveDepth": {
        "description": "0: Depth buffer is resolved after opaque pass only when decals or modulated shadows are in use. (Default)\n1: Depth buffer is always resolved after opaque pass.\n",
        "value": 0.0
    },
    "r.Mobile.AmbientOcclusion": {
        "description": "Causion: An extra sampler will be occupied in mobile base pass pixel shader after enable the mobile ambient occlusion.\n0: Disable Ambient Occlusion on mobile platform. [default]\n1: Enable Ambient Occlusion on mobile platform.\n",
        "value": 0.0
    },
    "r.Mobile.AmbientOcclusionQuality": {
        "description": "The quality of screen space ambient occlusion on mobile platform.\n0: Disabled.\n1: Low.(Default)\n2: Medium.\n3: High.\n",
        "value": 1.0
    },
    "r.Mobile.AmbientOcclusionShaderType": {
        "description": "0: ComputeShader.\n1: Seperate ComputeShader.\n2: PixelShader.\n",
        "value": 0.0
    },
    "r.Mobile.CompressLandscapeWeightMaps": {
        "description": "Whether to compress the terrain weight maps for mobile.",
        "value": 0.0
    },
    "r.Mobile.CustomDepthDownSample": {
        "description": "Perform Mobile CustomDepth at HalfRes \n 0: Off (default)\n 1: On \n ",
        "value": 0.0
    },
    "r.Mobile.CustomDepthForTranslucency": {
        "description": " Whether to render custom depth/stencil if any tranclucency in the scene uses it. \n 0 = Off \n 1 = On [default]",
        "value": 1.0
    },
    "r.Mobile.DisableVertexFog": {
        "description": "Set to 1 to disable vertex fogging in all mobile shaders.",
        "value": 1.0
    },
    "r.Mobile.EarlyZPassOnlyMaterialMasking": {
        "description": "Whether to compute materials' mask opacity only in early Z pass for Mobile platform. Changing this setting requires restarting the editor.\n<=0: off\n  1: on\n",
        "value": 0.0
    },
    "r.Mobile.EnableMovableLightCSMShaderCulling": {
        "description": "0: All primitives lit by movable directional light render with CSM.\n1: Primitives lit by movable directional light render with the CSM shader when determined to be within CSM range. (default)",
        "value": 1.0
    },
    "r.Mobile.EnableMovableSpotlights": {
        "description": "If 1 then enable movable spotlight support",
        "value": 0.0
    },
    "r.Mobile.EnableMovableSpotlightsShadow": {
        "description": "If 1 then enable movable spotlight shadow support",
        "value": 0.0
    },
    "r.Mobile.EnableStaticAndCSMShadowReceivers": {
        "description": "0: Primitives can receive only static shadowing from stationary lights.\n1: Primitives can receive both CSM and static shadowing from stationary lights. (default)",
        "value": 1.0
    },
    "r.Mobile.EyeAdaptation": {
        "description": "EyeAdaptation for mobile platform.\n 0: Disable\n 1: Enabled (Default)",
        "value": 1.0
    },
    "r.Mobile.FlushSceneColorRendering": {
        "description": "0: Submmit command buffer after all rendering is finished.\n1: Submmit command buffer (flush) before starting post-processing (default)",
        "value": 1.0
    },
    "r.Mobile.ForceDepthResolve": {
        "description": "0: Depth buffer is resolved by switching out render targets. (Default)\n1: Depth buffer is resolved by switching out render targets and drawing with the depth texture.\n",
        "value": 0.0
    },
    "r.Mobile.ForceFullPrecisionInPS": {
        "description": "0: Use precision specified in shader code (default)\n1: Force use of high precision in pixel shaders.\n",
        "value": 0.0
    },
    "r.Mobile.GTAOPreIntegratedTextureType": {
        "description": "0: No Texture.\n1: Texture2D LUT.\n2: Volume LUT(Default).",
        "value": 2.0
    },
    "r.Mobile.HighQualitySkyCaptureFiltering": {
        "description": "1: (default) use high quality filtering when generating mobile sky captures.0: use simple bilinear filtering when generating mobile sky captures.",
        "value": 1.0
    },
    "r.Mobile.LandscapeHoleMesh": {
        "description": "Set to 0 to skip loading of landscape hole meshes on mobile.",
        "value": 1.0
    },
    "r.Mobile.MaxVisibleMovableSpotLightsShadow": {
        "description": "The max number of visible spotlighs can cast shadow sorted by screen size, should be as less as possible for performance reason",
        "value": 8.0
    },
    "r.Mobile.MeshSortingMethod": {
        "description": "How to sort mesh commands on mobile:\n\t0: Sort by state, roughly front to back (Default).\n\t1: Strict front to back sorting.\n",
        "value": 0.0
    },
    "r.Mobile.MobileSupportBloomSetupRareCases": {
        "description": "0: Don't generate permutations for BloomSetup rare cases. (default, like Sun+MetalMSAAHDRDecode, Dof+MetalMSAAHDRDecode, EyeAdaptaion+MetalMSAAHDRDecode, and any of their combinations)\n1: Generate permutations for BloomSetup rare cases. ",
        "value": 0.0
    },
    "r.Mobile.PixelProjectedReflectionQuality": {
        "description": "The quality of pixel projected reflection on mobile platform.\n0: Disabled\n1: Best performance but may have some artifacts in some view angles. [default]\n2: Better quality and reasonable performance and could fix some artifacts, but the PlanarReflection mesh has to render twice.\n3: Best quality but will be much heavier.\n",
        "value": 1.0
    },
    "r.Mobile.PlanarReflectionMode": {
        "description": "The PlanarReflection will work differently on different mode on mobile platform, choose the proper mode as expect.\n0: The PlanarReflection actor works as usual on all platforms. [default]\n1: The PlanarReflection actor is only used for mobile pixel projection reflection, it will not affect PC/Console. MobileMSAA will be disabled as a side effect.\n2: The PlanarReflection actor still works as usual on PC/Console platform and is used for mobile pixel projected reflection on mobile platform. MobileMSAA will be disabled as a side effect.\n",
        "value": 0.0
    },
    "r.Mobile.ReflectionCaptureCompression": {
        "description": "Whether to use the Reflection Capture Compression or not for mobile. It will use ETC2 format to do the compression.\n",
        "value": 0.0
    },
    "r.Mobile.SceneColorFormat": {
        "description": "Overrides the memory layout (RGBA) used for the scene color of the mobile renderer.\nUnsupported overridden formats silently use default 0: (default) Automatically select the appropriate format depending on project settings and device support.\n 1: PF_FloatRGBA 64Bit \n 2: PF_FloatR11G11B10 32Bit\n 3: PF_B8G8R8A8 32Bit",
        "value": 0.0
    },
    "r.Mobile.ShadingPath": {
        "description": "0: Forward shading (default)1: Deferred shading",
        "value": 0.0
    },
    "r.Mobile.Shadow.CSMDebugHint": {
        "description": "",
        "value": 0.0
    },
    "r.Mobile.Shadow.CSMShaderCullingDebugGfx": {
        "description": "",
        "value": 0.0
    },
    "r.Mobile.Shadow.CSMShaderCullingMethod": {
        "description": "Method to determine which primitives will receive CSM shaders:\n0 - disabled (all primitives will receive CSM)\n1 - Light frustum, all primitives whose bounding box is within CSM receiving distance. (default)\n2 - Combined caster bounds, all primitives whose bounds are within CSM receiving distance and the capsule of the combined bounds of all casters.\n3 - Light frustum + caster bounds, all primitives whose bounds are within CSM receiving distance and capsule of at least one caster. (slowest)\nCombine with 16 to change primitive bounding test to spheres instead of box. (i.e. 18 == combined casters + sphere test)",
        "value": 1.0
    },
    "r.Mobile.ShadowmapRoundUpToPowerOfTwo": {
        "description": "Round the shadow map up to power of two on mobile platform, in case there is any compatibility issue.\n 0: Disable (Default)\n 1: Enabled",
        "value": 0.0
    },
    "r.Mobile.SkyLightPermutation": {
        "description": "0: Generate both sky-light and non-skylight permutations. (default)\n1: Generate only non-skylight permutations.\n2: Generate only skylight permutations",
        "value": 0.0
    },
    "r.Mobile.SupportGPUScene": {
        "description": "Whether to support GPU scene, required for auto-instancing (only ES3.1 feature level)",
        "value": 0.0
    },
    "r.Mobile.TonemapperFilm": {
        "description": "Whether mobile platforms should use new film tone mapper",
        "value": 1.0
    },
    "r.Mobile.UseClusteredDeferredShading": {
        "description": "Toggle use of clustered deferred shading for lights that support it. 0 is off (default), 1 is on",
        "value": 0.0
    },
    "r.Mobile.UseGPUSceneTexture": {
        "description": "Use a Texture2D instead of TextureBuffer for GPUScene.\n",
        "value": 0.0
    },
    "r.Mobile.UseHWsRGBEncoding": {
        "description": "0: Write sRGB encoding in the shader\n1: Use GPU HW to convert linear to sRGB automatically (device must support sRGB write control)\n",
        "value": 0.0
    },
    "r.Mobile.UseLightStencilCulling": {
        "description": "Whether to use stencil to cull local lights. 0 is off, 1 is on (default)",
        "value": 1.0
    },
    "r.Mobile.VirtualTextures": {
        "description": "Whether virtual texture streaming is enabled on mobile platforms. Requires r.VirtualTextures enabled as well. \n",
        "value": 0.0
    },
    "r.MobileContentScaleFactor": {
        "description": "Content scale multiplier (equates to iOS's contentScaleFactor to support Retina displays",
        "value": 1.0
    },
    "r.MobileDynamicPointLightsUseStaticBranch": {
        "description": "0: Generate unique forward rendering base pass shaders for 0, 1, ... N mobile dynamic point lights. (faster but generates many more shaders)\n1: Use a shared shader with static branching for rendering 1 or more dynamic point lights (slightly slower but reduces shaders generated, recommended for most games).",
        "value": 1.0
    },
    "r.MobileHDR": {
        "description": "0: Mobile renders in LDR gamma space. (suggested for unlit games targeting low-end phones)\n1: Mobile renders in HDR linear space. (default)",
        "value": 1.0
    },
    "r.MobileMSAA": {
        "description": "Use MSAA instead of Temporal AA on mobile:\n1: Use Temporal AA (MSAA disabled)\n2: Use 2x MSAA (Temporal AA disabled)\n4: Use 4x MSAA (Temporal AA disabled)\n8: Use 8x MSAA (Temporal AA disabled)",
        "value": 1.0
    },
    "r.MobileMaxLoadedMips": {
        "description": "Maximum number of loaded mips for nonstreaming mobile platforms.\n",
        "value": 15.0
    },
    "r.MobileNumDynamicPointLights": {
        "description": "The number of dynamic point lights to support on mobile devices. Setting this to 0 for games which do not require dynamic point lights will reduce the number of shaders generated.",
        "value": 4.0
    },
    "r.MobileReduceLoadedMips": {
        "description": "Reduce loaded texture mipmaps for nonstreaming mobile platforms.\n",
        "value": 0.0
    },
    "r.MobileTonemapperUpscale": {
        "description": "On mobile, whether to allow upscaling as part of the tonemapper or as a separate pass when possible0: separate pass (default)\n1: as part of the tonemapper pass\n",
        "value": 0.0
    },
    "r.MorphTarget.ForceUpdate": {
        "description": "Force morph target deltas to be calculated every frame.\n 0: Default\n 1: Force Update\n",
        "value": 0.0
    },
    "r.MorphTarget.Mode": {
        "description": "Use GPU for computing morph targets.\n 0: Use original CPU method (loop per morph then by vertex)\n 1: Enable GPU method (default)\n",
        "value": 1.0
    },
    "r.MorphTarget.WeightThreshold": {
        "description": "Set MorphTarget Weight Threshold (Default : 0.000000).\n",
        "value": 9.99999993922529e-09
    },
    "r.MotionBlur.Amount": {
        "description": "Allows to override the postprocess setting (scale of motion blur)\n-1: override (default)",
        "value": -1.0
    },
    "r.MotionBlur.Max": {
        "description": "Allows to override the postprocess setting (max length of motion blur, in percent of the screen width)\n-1: override (default)",
        "value": -1.0
    },
    "r.MotionBlur.PreferCompute": {
        "description": "Will use compute shaders for motion blur pass.",
        "value": 0.0
    },
    "r.MotionBlur.Scale": {
        "description": "Allows to scale the postprocess intensity/amount setting in the postprocess.\n1: don't do any scaling (default)",
        "value": 1.0
    },
    "r.MotionBlur.TargetFPS": {
        "description": "Allows to override the postprocess setting (target FPS for motion blur velocity length scaling).\n-1: override (default) 0: target current frame rate with moving average\n[1,120]: target FPS for motion blur velocity scaling",
        "value": -1.0
    },
    "r.MotionBlur2ndScale": {
        "description": "",
        "value": 1.0
    },
    "r.MotionBlurDebug": {
        "description": "Defines if we log debugging output for motion blur rendering.\n 0: off (default)\n 1: on",
        "value": 0.0
    },
    "r.MotionBlurQuality": {
        "description": "Defines the motion blur method which allows to adjust for quality or performance.\n 0:off, 1:low, 2:medium, 3:high (default), 4: very high",
        "value": 4.0
    },
    "r.MotionBlurScatter": {
        "description": "Forces scatter based max velocity method (slower).",
        "value": 0.0
    },
    "r.MotionBlurSeparable": {
        "description": "Adds a second motion blur pass that smooths noise for a higher quality blur.",
        "value": 0.0
    },
    "r.MotionVectorSimulation": {
        "description": "Controls whether to allow simulated motion vectors on scene components, geometry caches and skinned meshes on camera cut frames.",
        "value": 0.0
    },
    "r.MrMesh.BrickCullingDebugState": {
        "description": "MR Mesh brick culling debug state: 0=off, 1=on, 2=paused",
        "value": 0.0
    },
    "r.NVIDIATimestampWorkaround": {
        "description": "If true we disable timestamps on pre-maxwell hardware (workaround for driver bug)\n",
        "value": 1.0
    },
    "r.NeverOcclusionTestDistance": {
        "description": "When the distance between the viewpoint and the bounding sphere center is less than this, never occlusion cull.",
        "value": 0.0
    },
    "r.NormalCurvatureToRoughnessBias": {
        "description": "Biases the roughness resulting from screen space normal changes for materials with NormalCurvatureToRoughness enabled.  Valid range [-1, 1]",
        "value": 0.0
    },
    "r.NormalCurvatureToRoughnessExponent": {
        "description": "Exponent on the roughness resulting from screen space normal changes for materials with NormalCurvatureToRoughness enabled.",
        "value": 0.3330000042915344
    },
    "r.NormalCurvatureToRoughnessScale": {
        "description": "Scales the roughness resulting from screen space normal changes for materials with NormalCurvatureToRoughness enabled.  Valid range [0, 2]",
        "value": 1.0
    },
    "r.NormalMapsForStaticLighting": {
        "description": "Whether to allow any static lighting to use normal maps for lighting computations.",
        "value": 0.0
    },
    "r.NumBufferedOcclusionQueries": {
        "description": "Number of frames to buffer occlusion queries (including the current renderthread frame).\nMore frames reduces the chance of stalling the CPU waiting for results, but increases out of date query artifacts.",
        "value": 1.0
    },
    "r.NumFramesUnusedBeforeReleasingGlobalResourceBuffers": {
        "description": "Number of frames after which unused global resource allocations will be discarded. Set 0 to ignore. (default=30)",
        "value": 30.0
    },
    "r.OcclusionCullParallelPrimFetch": {
        "description": "Enables Parallel Occlusion Cull primitive fetch.",
        "value": 0.0
    },
    "r.OneFrameThreadLag": {
        "description": "Whether to allow the rendering thread to lag one frame behind the game thread (0: disabled, otherwise enabled)",
        "value": 1.0
    },
    "r.OpenGL.AddExtensions": {
        "description": "List of comma separated OpenGL extensions to add to a driver reported extensions string",
        "value": 0.0
    },
    "r.OpenGL.AllowRHIThread": {
        "description": "Toggle OpenGL RHI thread support.\n0: GL scene rendering operations are performed on the render thread.\n1: GL scene rendering operations are queued onto the RHI thread gaining some parallelism with the render thread. (default, mobile feature levels only)",
        "value": 1.0
    },
    "r.OpenGL.DisableTextureStreamingSupport": {
        "description": "Disable support for texture streaming on OpenGL.\n  0 = Texture streaming will be used if device supports it [default]\n  1 = Texture streaming will be disabled.",
        "value": 0.0
    },
    "r.OpenGL.EnableProgramLRUCache": {
        "description": "OpenGL program LRU cache.\nFor use only when driver only supports a limited number of active GL programs.\n0: disable LRU. (default)\n1: When the LRU cache limits are reached, the least recently used GL program(s) will be deleted to make space for new/more recent programs. Expect hitching if requested shader is not in LRU cache.",
        "value": 0.0
    },
    "r.OpenGL.EvictOnBSSDestruct": {
        "description": "",
        "value": 0.0
    },
    "r.OpenGL.EvictOnBSSDestruct.Latency": {
        "description": "",
        "value": 0.0
    },
    "r.OpenGL.ForceDXC": {
        "description": "Forces DirectX Shader Compiler (DXC) to be used for all OpenGL shaders instead of hlslcc.\n 0: Disable (default)\n 1: Force new compiler for all shaders",
        "value": 0.0
    },
    "r.OpenGL.IgnoreLinkFailure": {
        "description": "Ignore OpenGL program link failures.\n0: Program link failure generates a fatal error when encountered. (default)\n1: Ignore link failures. this may allow a program to continue but could lead to undefined rendering behaviour.",
        "value": 0.0
    },
    "r.OpenGL.IgnoreShaderCompileFailure": {
        "description": "Ignore OpenGL shader compile failures.\n0: Shader compile failure return an error when encountered. (default)\n1: Ignore Shader compile failures.",
        "value": 0.0
    },
    "r.OpenGL.MaxShaderLibProcessingTime": {
        "description": "The maximum time per frame to process shader library requests in milliseconds.\ndefault 10ms. Note: Driver compile time for a single program may exceed this limit.",
        "value": 10.0
    },
    "r.OpenGL.PollRenderQueryResult": {
        "description": "Whether to poll render query for result until it's ready, otherwise do a blocking call to get result.0: Block, 1: Poll (default)",
        "value": 1.0
    },
    "r.OpenGL.PrintProgramStats": {
        "command": true,
        "description": "Print to log current program binary stats"
    },
    "r.OpenGL.ProgramLRUBinarySize": {
        "description": "OpenGL LRU maximum binary shader size.\nLimit the maximum number of active shader programs at any one time.\n0: disable LRU. (default)\nNon-Zero: Maximum number of bytes active shader programs may use. If reached, least recently used shader programs will deleted.",
        "value": 36700160.0
    },
    "r.OpenGL.ProgramLRUCount": {
        "description": "OpenGL LRU maximum occupancy.\nLimit the maximum number of active shader programs at any one time.\n0: disable LRU. (default)\nNon-Zero: Maximum number of active shader programs, if reached least, recently used shader programs will deleted. ",
        "value": 700.0
    },
    "r.OpenGL.ProgramLRUKeepBinaryResident": {
        "description": "OpenGL LRU should keep program binary in memory.\nDo not discard the program binary after creation of the GL program.\n0: Program binary is discarded after GL program creation and recreated on program eviction. (default)\n1: Program binary is retained, this improves eviction and re-creation performance but uses more memory.",
        "value": 0.0
    },
    "r.OpenGL.StoreCompressedProgramBinaries": {
        "description": "",
        "value": 0.0
    },
    "r.OpenGL.StripExtensions": {
        "description": "List of comma separated OpenGL extensions to strip from a driver reported extensions string",
        "value": 0.0
    },
    "r.OpenGL.UseExistingBinaryFileCache": {
        "description": "When generating a new binary cache (such as when Shader Pipeline Cache Version Guid changes) use the existing binary file cache to speed up generation of the new cache.\n0: Always rebuild binary file cache when Pipeline Cache Version Guid changes.\n1: When Pipeline Cache Version Guid changes re-use programs from the existing binary cache where possible (default).",
        "value": 1.0
    },
    "r.OverrideShaderDebugDir": {
        "description": "Override output location of shader debug files\nEmpty: use default location Saved\\ShaderDebugInfo.\n",
        "value": 0.0
    },
    "r.PS4MixedModeShaderDebugInfo": {
        "description": "Whether to compile shaders to allow mixed mode shader debugging. This will currently generate slower code.\n 0: Normal mode\n 1: Mixed mode)",
        "value": 0.0
    },
    "r.Paper2D.DrawTwoSided": {
        "description": "Draw sprites as two sided.",
        "value": 1.0
    },
    "r.Paper2D.UsePrebuiltVertexBuffers": {
        "description": "Draw sprites using prebuilt vertex buffers.",
        "value": 1.0
    },
    "r.ParallelBasePass": {
        "description": "Toggles parallel base pass rendering. Parallel rendering must be enabled for this to have an effect.",
        "value": 1.0
    },
    "r.ParallelGatherNumPrimitivesPerPacket": {
        "description": "Number of primitives per packet.  Only used when r.Shadow.UseOctreeForCulling is disabled.",
        "value": 256.0
    },
    "r.ParallelGatherShadowPrimitives": {
        "description": "Toggles parallel Gather shadow primitives. 0 = off; 1 = on",
        "value": 1.0
    },
    "r.ParallelGeometryCollectionBatchSize": {
        "description": "The number of vertices per thread dispatch in a single collection. \n",
        "value": 1024.0
    },
    "r.ParallelInitViews": {
        "description": "Toggles parallel init views. 0 = off; 1 = on",
        "value": 1.0
    },
    "r.ParallelPrePass": {
        "description": "Toggles parallel zprepass rendering. Parallel rendering must be enabled for this to have an effect.",
        "value": 1.0
    },
    "r.ParallelShadows": {
        "description": "Toggles parallel shadow rendering. Parallel rendering must be enabled for this to have an effect.",
        "value": 1.0
    },
    "r.ParallelShadowsNonWholeScene": {
        "description": "Toggles parallel shadow rendering for non whole-scene shadows. r.ParallelShadows must be enabled for this to have an effect.",
        "value": 0.0
    },
    "r.ParallelSingleLayerWaterPass": {
        "description": "Toggles parallel single layer water pass rendering. Parallel rendering must be enabled for this to have an effect.",
        "value": 1.0
    },
    "r.ParallelTranslucency": {
        "description": "Toggles parallel translucency rendering. Parallel rendering must be enabled for this to have an effect.",
        "value": 1.0
    },
    "r.ParallelVelocity": {
        "description": "Toggles parallel velocity rendering. Parallel rendering must be enabled for this to have an effect.",
        "value": 1.0
    },
    "r.ParticleLODBias": {
        "description": "LOD bias for particle systems, default is 0",
        "value": 0.0
    },
    "r.ParticleLightQuality": {
        "description": "0: No lights. 1:Only simple lights. 2:Simple+HQ lights",
        "value": 2.0
    },
    "r.PathTracing.AdaptiveSampling": {
        "description": "Toggles the use of adaptive sampling\n0: off\n1: on (default)\n",
        "value": 1.0
    },
    "r.PathTracing.AdaptiveSampling.MinimumSamplesPerPixel": {
        "description": "Changes the minimum samples-per-pixel before applying adaptive sampling (default=16)\n",
        "value": 16.0
    },
    "r.PathTracing.FrameIndependentTemporalSeed": {
        "description": "Indicates to use different temporal seed for each sample across frames rather than resetting the sequence at the start of each frame\n0: off\n1: on (default)\n",
        "value": 1.0
    },
    "r.PathTracing.GPUCount": {
        "description": "Sets the amount of GPUs used for computing the path tracing pass (default = 1 GPU)",
        "value": 1.0
    },
    "r.PathTracing.MaxBounces": {
        "description": "Sets the maximum number of path tracing bounces (default = -1 (driven by postprocesing volume))",
        "value": -1.0
    },
    "r.PathTracing.RandomSequence": {
        "description": "Changes the underlying random sequence\n0: LCG\n1: Halton\n2: Scrambled Halton (default)\n",
        "value": 2.0
    },
    "r.PathTracing.RayCountFrequency": {
        "description": "Sets the ray count computation frequency (default = every 128 iterations)",
        "value": 128.0
    },
    "r.PathTracing.SamplesPerPixel": {
        "description": "Defines the samples per pixel before resetting the simulation (default = -1 (driven by postprocesing volume))",
        "value": -1.0
    },
    "r.PathTracing.VarianceMapRebuildFrequency": {
        "description": "Sets the variance map rebuild frequency (default = every 16 iterations)",
        "value": 16.0
    },
    "r.PathTracing.WiperMode": {
        "description": "Enables wiper mode to render using the path tracer only in a region of the screen for debugging purposes (default = 0, wiper mode disabled)",
        "value": 0.0
    },
    "r.Photography.Available": {
        "description": "(Read-only) If 1, the photography system is potentially available to the user.\nOtherwise, a functioning back-end is not available.",
        "value": 0.0
    },
    "r.PostProcessAAQuality": {
        "description": "Defines the postprocess anti aliasing method which allows to adjust for quality or performance.\n 0:off, 1:very low (faster FXAA), 2:low (FXAA), 3:medium (faster TemporalAA), 4:high (default TemporalAA), 5:very high, 6:max",
        "value": 4.0
    },
    "r.PostProcessAllowBlendModes": {
        "description": "Enables blend modes in post process materials.\n0: disable blend modes. Uses replace\n1: allow blend modes\n",
        "value": 1.0
    },
    "r.PostProcessAllowStencilTest": {
        "description": "Enables stencil testing in post process materials.\n0: disable stencil testing\n1: allow stencil testing\n",
        "value": 1.0
    },
    "r.PostProcessing.DisableMaterials": {
        "description": " Allows to disable post process materials. \n",
        "value": 0.0
    },
    "r.PostProcessing.PreferCompute": {
        "description": "Will use compute shaders for post processing where implementations available.",
        "value": 0.0
    },
    "r.PostProcessing.PropagateAlpha": {
        "description": "0 to disable scene alpha channel support in the post processing.\n 0: disabled (default);\n 1: enabled in linear color space;\n 2: same as 1, but also enable it through the tonemapper. Compositing after the tonemapper is incorrect, as their is no meaning to tonemap the alpha channel. This is only meant to be use exclusively for broadcasting hardware that does not support linear color space compositing and tonemapping.",
        "value": 0.0
    },
    "r.PostProcessingColorFormat": {
        "description": "Defines the memory layout (RGBA) used for most of the post processing chain buffers.\n 0: Default\n 1: Force PF_A32B32G32R32F 128Bit (unreasonable but good for testing)",
        "value": 0.0
    },
    "r.PreTileTextures": {
        "description": "If set to 1, textures will be tiled during cook and are expected to be cooked at runtime",
        "value": 1.0
    },
    "r.PrecomputedVisibilityWarning": {
        "description": "If set to 1, a warning will be displayed when rendering a scene from a view point without precomputed visibility.",
        "value": 0.0
    },
    "r.ProfileGPU.AssetSummaryCallOuts": {
        "description": "Comma separated list of substrings that deserve special mention in the final summary (e.g., \"LOD,HeroName\"\nr.ProfileGPU.PrintAssetSummary must be true to enable this feature",
        "value": 0.0
    },
    "r.ProfileGPU.Pattern": {
        "description": "Allows to filter the entries when using ProfileGPU, the pattern match is case sensitive.\n'*' can be used in the end to get all entries starting with the string.\n    '*' without any leading characters disables the pattern matching and uses a time threshold instead (default).\n'?' allows to ignore one character.\ne.g. AmbientOcclusionSetup, AmbientOcclusion*, Ambient???lusion*, *",
        "value": 0.0
    },
    "r.ProfileGPU.PrintAssetSummary": {
        "description": "Should we print a summary split by asset (r.ShowMaterialDrawEvents is strongly recommended as well).\n",
        "value": 0.0
    },
    "r.ProfileGPU.Root": {
        "description": "Allows to filter the tree when using ProfileGPU, the pattern match is case sensitive.",
        "value": 0.0
    },
    "r.ProfileGPU.Screenshot": {
        "description": "Whether a screenshot should be taken when profiling the GPU. 0:off, 1:on (default)",
        "value": 1.0
    },
    "r.ProfileGPU.ShowEventHistogram": {
        "description": "Whether the event histogram should be shown.",
        "value": 0.0
    },
    "r.ProfileGPU.ShowLeafEvents": {
        "description": "Allows profileGPU to display event-only leaf nodes with no draws associated.",
        "value": 0.0
    },
    "r.ProfileGPU.ShowTransitions": {
        "description": "Allows profileGPU to display resource transition events.",
        "value": 0.0
    },
    "r.ProfileGPU.ShowUI": {
        "description": "Whether the user interface profiler should be displayed after profiling the GPU.\nThe results will always go to the log/console\n0:off, 1:on (default)",
        "value": 1.0
    },
    "r.ProfileGPU.Sort": {
        "description": "Sorts the TTY Dump independently at each level of the tree in various modes.\n0 : Chronological\n1 : By time elapsed\n2 : By number of prims\n3 : By number of verts\n",
        "value": 0.0
    },
    "r.ProfileGPU.ThresholdPercent": {
        "description": "Percent of the total execution duration the event needs to be larger than to be printed.",
        "value": 0.05000000074505806
    },
    "r.ProgramBinaryCache.Enable": {
        "description": "If true, enables binary program cache. Enabled by default only on Android",
        "value": 0.0
    },
    "r.ProgramBinaryCache.RestartAndroidAfterPrecompile": {
        "description": "If true, Android apps will restart after precompiling the binary program cache. Enabled by default only on Android",
        "value": 1.0
    },
    "r.RDG.AsyncCompute": {
        "description": "Controls the async compute policy.\n 0:disabled, no async compute is used;\n 1:enabled for passes tagged for async compute (default);\n 2:enabled for all compute passes implemented to use the compute command list;\n",
        "value": 1.0
    },
    "r.RDG.CullPasses": {
        "description": "The graph will cull passes with unused outputs.\n 0:off;\n 1:on(default);\n",
        "value": 1.0
    },
    "r.RDG.MergeRenderPasses": {
        "description": "The graph will merge identical, contiguous render passes into a single render pass.\n 0:off;\n 1:on(default);\n",
        "value": 1.0
    },
    "r.RDG.VerboseCSVStats": {
        "description": "Controls the verbosity of CSV profiling stats for RDG.\n 0: emits one CSV profile for graph execution;\n 1: emits a CSV profile for each phase of graph execution.",
        "value": 0.0
    },
    "r.RHICmdAsyncRHIThreadDispatch": {
        "description": "Experiemental option to do RHI dispatches async. This keeps data flowing to the RHI thread faster and avoid a block at the end of the frame.",
        "value": 1.0
    },
    "r.RHICmdBalanceParallelLists": {
        "description": "Allows to enable a preprocess of the drawlists to try to balance the load equally among the command lists.\n 0: off \n 1: enabled 2: experiemental, uses previous frame results (does not do anything in split screen etc)",
        "value": 2.0
    },
    "r.RHICmdBalanceTranslatesAfterTasks": {
        "description": "Experimental option to balance the parallel translates after the render tasks are complete. This minimizes the number of deferred contexts, but adds latency to starting the translates. r.RHICmdBalanceParallelLists overrides and disables this option",
        "value": 0.0
    },
    "r.RHICmdBufferWriteLocks": {
        "description": "Only relevant with an RHI thread. Debugging option to diagnose problems with buffered locks.",
        "value": 1.0
    },
    "r.RHICmdBypass": {
        "description": "Whether to bypass the rhi command list and send the rhi commands immediately.\n0: Disable (required for the multithreaded renderer)\n1: Enable (convenient for debugging low level graphics API calls, can suppress artifacts from multithreaded renderer code)",
        "value": 0.0
    },
    "r.RHICmdCollectRHIThreadStatsFromHighLevel": {
        "description": "This pushes stats on the RHI thread executes so you can determine which high level pass they came from. This has an adverse effect on framerate. This is on by default.",
        "value": 1.0
    },
    "r.RHICmdDeferSkeletalLockAndFillToRHIThread": {
        "description": "If > 0, then do the bone and cloth copies on the RHI thread. Experimental option.",
        "value": 0.0
    },
    "r.RHICmdFlushOnQueueParallelSubmit": {
        "description": "Wait for completion of parallel commandlists immediately after submitting. For issue diagnosis. Only available on some RHIs.",
        "value": 0.0
    },
    "r.RHICmdFlushRenderThreadTasks": {
        "description": "If true, then we flush the render thread tasks every pass. For issue diagnosis. This is a master switch for more granular cvars.",
        "value": 0.0
    },
    "r.RHICmdFlushRenderThreadTasksBasePass": {
        "description": "Wait for completion of parallel render thread tasks at the end of the base pass. A more granular version of r.RHICmdFlushRenderThreadTasks. If either r.RHICmdFlushRenderThreadTasks or r.RHICmdFlushRenderThreadTasksBasePass is > 0 we will flush.",
        "value": 0.0
    },
    "r.RHICmdFlushRenderThreadTasksPrePass": {
        "description": "Wait for completion of parallel render thread tasks at the end of the pre pass.  A more granular version of r.RHICmdFlushRenderThreadTasks. If either r.RHICmdFlushRenderThreadTasks or r.RHICmdFlushRenderThreadTasksPrePass is > 0 we will flush.",
        "value": 0.0
    },
    "r.RHICmdFlushRenderThreadTasksShadowPass": {
        "description": "Wait for completion of parallel render thread tasks at the end of each shadow pass.  A more granular version of r.RHICmdFlushRenderThreadTasks. If either r.RHICmdFlushRenderThreadTasks or r.RHICmdFlushRenderThreadTasksShadowPass is > 0 we will flush.",
        "value": 0.0
    },
    "r.RHICmdFlushRenderThreadTasksSingleLayerWater": {
        "description": "Wait for completion of parallel render thread tasks at the end of Single layer water. A more granular version of r.RHICmdFlushRenderThreadTasks. If either r.RHICmdFlushRenderThreadTasks or r.RHICmdFlushRenderThreadTasksSingleLayerWater is > 0 we will flush.",
        "value": 0.0
    },
    "r.RHICmdFlushRenderThreadTasksTranslucentPass": {
        "description": "Wait for completion of parallel render thread tasks at the end of the translucent pass.  A more granular version of r.RHICmdFlushRenderThreadTasks. If either r.RHICmdFlushRenderThreadTasks or r.RHICmdFlushRenderThreadTasksTranslucentPass is > 0 we will flush.",
        "value": 0.0
    },
    "r.RHICmdFlushRenderThreadTasksVelocityPass": {
        "description": "Wait for completion of parallel render thread tasks at the end of the velocity pass.  A more granular version of r.RHICmdFlushRenderThreadTasks. If either r.RHICmdFlushRenderThreadTasks or r.RHICmdFlushRenderThreadTasksVelocityPass is > 0 we will flush.",
        "value": 0.0
    },
    "r.RHICmdFlushUpdateTextureReference": {
        "description": "If true, then we flush the rhi thread when we do RHIUpdateTextureReference, otherwise this is deferred. For issue diagnosis.",
        "value": 0.0
    },
    "r.RHICmdForceRHIFlush": {
        "description": "Force a flush for every task sent to the RHI thread. For issue diagnosis.",
        "value": 0.0
    },
    "r.RHICmdMergeSmallDeferredContexts": {
        "description": "When it can be determined, merge small parallel translate tasks based on r.RHICmdMinDrawsPerParallelCmdList.",
        "value": 1.0
    },
    "r.RHICmdMinCmdlistForParallelSubmit": {
        "description": "Minimum number of parallel translate command lists to submit. If there are fewer than this number, they just run on the RHI thread and immediate context.",
        "value": 1.0
    },
    "r.RHICmdMinCmdlistForParallelTranslate": {
        "description": "If there are fewer than this number of parallel translates, they just run on the RHI thread and immediate context. Only relevant if r.RHICmdBalanceTranslatesAfterTasks is on.",
        "value": 2.0
    },
    "r.RHICmdMinCmdlistSizeForParallelTranslate": {
        "description": "In kilobytes. Cmdlists are merged into one parallel translate until we have at least this much memory to process. For a given pass, we won't do more translates than we have task threads. Only relevant if r.RHICmdBalanceTranslatesAfterTasks is on.",
        "value": 32.0
    },
    "r.RHICmdMinDrawsPerParallelCmdList": {
        "description": "The minimum number of draws per cmdlist. If the total number of draws is less than this, then no parallel work will be done at all. This can't always be honored or done correctly. More effective with RHICmdBalanceParallelLists.",
        "value": 64.0
    },
    "r.RHICmdSpewParallelListBalance": {
        "description": "For debugging, spews the size of the parallel command lists. This stalls and otherwise wrecks performance.\n 0: off (default)\n 1: enabled (default)",
        "value": 0.0
    },
    "r.RHICmdTraceEvents": {
        "description": "Enable tracing profiler events for every RHI command. (default = 0)",
        "value": 0.0
    },
    "r.RHICmdUseDeferredContexts": {
        "description": "True to use deferred contexts to parallelize command list execution. Only available on some RHIs.",
        "value": 1.0
    },
    "r.RHICmdUseParallelAlgorithms": {
        "description": "True to use parallel algorithms. Ignored if r.RHICmdBypass is 1.",
        "value": 1.0
    },
    "r.RHICmdUseThread": {
        "description": "Uses the RHI thread. For issue diagnosis.",
        "value": 1.0
    },
    "r.RHICmdWidth": {
        "description": "Controls the task granularity of a great number of things in the parallel renderer.",
        "value": 8.0
    },
    "r.RHIRenderPasses": {
        "description": "",
        "value": 0.0
    },
    "r.RHISetGPUCaptureOptions": {
        "command": true,
        "description": "Utility function to change multiple CVARs useful when profiling or debugging GPU rendering. Setting to 1 or 0 will guarantee all options are in the appropriate state.\nr.rhithread.enable, r.rhicmdbypass, r.showmaterialdrawevents, toggledrawevents\nPlatform RHI's may implement more feature toggles."
    },
    "r.RHIThread.Enable": {
        "command": true,
        "description": "Enables/disabled the RHI Thread and determine if the RHI work runs on a dedicated thread or not.\n"
    },
    "r.RayTracing": {
        "description": "0 to disable ray tracing.\n 0: off\n 1: on",
        "value": 0.0
    },
    "r.RayTracing.AmbientOcclusion": {
        "description": "-1: Value driven by postprocess volume (default) \n 0: ray tracing ambient occlusion off \n 1: ray tracing ambient occlusion enabled",
        "value": -1.0
    },
    "r.RayTracing.AmbientOcclusion.EnableMaterials": {
        "description": "Enables ",
        "value": 0.0
    },
    "r.RayTracing.AmbientOcclusion.EnableTwoSidedGeometry": {
        "description": "Enables two-sided geometry when tracing shadow rays (default = 0)",
        "value": 0.0
    },
    "r.RayTracing.AmbientOcclusion.SamplesPerPixel": {
        "description": "Sets the samples-per-pixel for ambient occlusion (default = -1 (driven by postprocesing volume))",
        "value": -1.0
    },
    "r.RayTracing.AsyncBuild": {
        "description": "Whether to build ray tracing acceleration structures on async compute queue.\n",
        "value": 0.0
    },
    "r.RayTracing.CacheShaderRecords": {
        "description": "Automatically cache and re-use SBT hit group records. This significantly improves CPU performance in large scenes with many identical mesh instances. (default = 1)\nThis mode assumes that contents of uniform buffers does not change during ray tracing resource binding.",
        "value": 1.0
    },
    "r.RayTracing.CompileMaterialAHS": {
        "description": " 0: skip compilation of any-hit shaders for materials (useful if alpha masked or translucent materials are not needed)\n 1: compile any hit shaders for all ray tracing materials (default)\n",
        "value": 1.0
    },
    "r.RayTracing.CompileMaterialCHS": {
        "description": " 0: skip compilation of closest-hit shaders for materials (useful if only shadows or ambient occlusion effects are needed)\n 1: compile closest hit shaders for all ray tracing materials (default)\n",
        "value": 1.0
    },
    "r.RayTracing.Culling": {
        "description": "Enable culling in ray tracing for objects that are behind the camera\n 0: Culling disabled (default)\n 1: Culling by distance and solid angle enabled",
        "value": 0.0
    },
    "r.RayTracing.Culling.Angle": {
        "description": "Do camera culling for objects behind the camera with a projected angle smaller than this threshold in ray tracing effects (default = 5 degrees )",
        "value": 1.0
    },
    "r.RayTracing.Culling.Radius": {
        "description": "Do camera culling for objects behind the camera outside of this radius in ray tracing effects (default = 10000 (100m))",
        "value": 10000.0
    },
    "r.RayTracing.DebugDisableTriangleCull": {
        "description": "Forces all ray tracing geometry instances to be double-sided by disabling back-face culling. This is useful for debugging and profiling. (default = 0)",
        "value": 0.0
    },
    "r.RayTracing.DebugForceBuildMode": {
        "description": "Forces specific acceleration structure build mode (not runtime-tweakable).\n0: Use build mode requested by high-level code (Default)\n1: Force fast build mode\n2: Force fast trace mode\n",
        "value": 0.0
    },
    "r.RayTracing.DebugForceFullBuild": {
        "description": "Forces all acceleration structure updates to always perform a full build.\n0: Allow update (Default)\n1: Force full build\n",
        "value": 0.0
    },
    "r.RayTracing.DebugForceOpaque": {
        "description": "Forces all ray tracing geometry instances to be opaque, effectively disabling any-hit shaders. This is useful for debugging and profiling. (default = 0)",
        "value": 0.0
    },
    "r.RayTracing.DebugVisualizationMode": {
        "description": "Sets the ray tracing debug visualization mode (default = None - Driven by viewport menu) .\n",
        "value": 0.0
    },
    "r.RayTracing.DebugVisualizationMode.OpaqueOnly": {
        "description": "Sets whether the view mode rendes opaque objects only (default = 1, render only opaque objects, 0 = render all objects)",
        "value": 1.0
    },
    "r.RayTracing.DynamicGeometryLastRenderTimeUpdateDistance": {
        "description": "Dynamic geometries within this distance will have their LastRenderTime updated, so that visibility based ticking (like skeletal mesh) can work when the component is not directly visible in the view (but reflected).",
        "value": 5000.0
    },
    "r.RayTracing.EnableMaterials": {
        "description": " 0: bind default material shader that outputs placeholder data\n 1: bind real material shaders (default)\n",
        "value": 1.0
    },
    "r.RayTracing.ExcludeDecals": {
        "description": "A toggle that modifies the inclusion of decals in the ray tracing BVH.\n 0: Decals included in the ray tracing BVH (default)\n 1: Decals excluded from the ray tracing BVH",
        "value": 0.0
    },
    "r.RayTracing.ForceAllRayTracingEffects": {
        "description": "Force all ray tracing effects ON/OFF.\n -1: Do not force (default) \n 0: All ray tracing effects disabled\n 1: All ray tracing effects enabled",
        "value": -1.0
    },
    "r.RayTracing.Geometry.GeometryCache": {
        "description": "Include geometry cache primitives in ray tracing effects (default = 1 (geometry cache enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.InstancedStaticMeshes": {
        "description": "Include static mesh instances in ray tracing effects (default = 1 (Instances enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.InstancedStaticMeshes.CullClusterMaxRadiusMultiplier": {
        "description": "Multiplier for the maximum instance size (default = 20)",
        "value": 20.0
    },
    "r.RayTracing.Geometry.InstancedStaticMeshes.CullClusterRadius": {
        "description": "Ignore instances outside of this radius in ray tracing effects (default = 10000 (100m))",
        "value": 10000.0
    },
    "r.RayTracing.Geometry.InstancedStaticMeshes.Culling": {
        "description": "Enable culling for instances in ray tracing (default = 1 (Culling enabled))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.InstancedStaticMeshes.LowScaleCullRadius": {
        "description": "Cull radius for small instances (default = 1000 (10m))",
        "value": 1000.0
    },
    "r.RayTracing.Geometry.InstancedStaticMeshes.LowScaleRadiusThreshold": {
        "description": "Threshold that classifies instances as small (default = 50cm))",
        "value": 50.0
    },
    "r.RayTracing.Geometry.Landscape": {
        "description": "Include landscapes in ray tracing effects (default = 1 (landscape enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.Landscape.DetectTextureStreaming": {
        "description": "If on, update ray tracing geometry when texture streaming state changes. Useful when WorldPositionOffset is used in the landscape material",
        "value": 1.0
    },
    "r.RayTracing.Geometry.Landscape.LODsUpdateEveryFrame": {
        "description": "If on, LODs that are lower than the specified level will be updated every frame, which can be used to workaround some artifacts caused by texture streaming if you're using WorldPositionOffset on the landscape",
        "value": 0.0
    },
    "r.RayTracing.Geometry.NiagaraMeshes": {
        "description": "Include Niagara meshes in ray tracing effects (default = 1 (Niagara meshes enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.NiagaraRibbons": {
        "description": "Include Niagara ribbons in ray tracing effects (default = 1 (Niagara ribbons enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.NiagaraSprites": {
        "description": "Include Niagara sprites in ray tracing effects (default = 1 (Niagara sprites enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.ProceduralMeshes": {
        "description": "Include procedural meshes in ray tracing effects (default = 1 (procedural meshes enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.SkeletalMeshes": {
        "description": "Include skeletal meshes in ray tracing effects (default = 1 (skeletal meshes enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.StaticMeshes": {
        "description": "Include static meshes in ray tracing effects (default = 1 (static meshes enabled in ray tracing))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.StaticMeshes.WPO": {
        "description": "World position offset evaluation for static meshes with EvaluateWPO enabled in ray tracing effects 0: static meshes with world position offset hidden in ray tracing 1: static meshes with world position offset visible in ray tracing, WPO evaluation enabled (default) 2: static meshes with world position offset visible in ray tracing, WPO evaluation disabled",
        "value": 1.0
    },
    "r.RayTracing.Geometry.StaticMeshes.WPO.Culling": {
        "description": "Enable culling for WPO evaluation for static meshes in ray tracing (default = 1 (Culling enabled))",
        "value": 1.0
    },
    "r.RayTracing.Geometry.StaticMeshes.WPO.CullingRadius": {
        "description": "Do not evaluate world position offset for static meshes outside of this radius in ray tracing effects (default = 5000 (50m))",
        "value": 5000.0
    },
    "r.RayTracing.GlobalIllumination": {
        "description": "-1: Value driven by postprocess volume (default) \n 0: ray tracing global illumination off \n 1: ray tracing global illumination enabled (brute force) \n 2: ray tracing global illumination enabled (final gather)",
        "value": -1.0
    },
    "r.RayTracing.GlobalIllumination.Denoiser": {
        "description": "Denoising options (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.DiffuseThreshold": {
        "description": "Diffuse luminance threshold for evaluating global illuminationNOTE: This parameter is experimental",
        "value": 0.009999999776482582
    },
    "r.RayTracing.GlobalIllumination.EnableLightAttenuation": {
        "description": "Enables light attenuation when calculating irradiance during next-event estimation (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.EnableTransmission": {
        "description": "Enables transmission when tracing GI rays (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.EnableTwoSidedGeometry": {
        "description": "Enables two-sided geometry when tracing GI rays (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.EvalSkyLight": {
        "description": "Evaluate SkyLight multi-bounce contributionNOTE: This parameter is experimental",
        "value": 0.0
    },
    "r.RayTracing.GlobalIllumination.FinalGather.Distance": {
        "description": "Maximum screen-space distance for valid, reprojected final gather points (default = 10)",
        "value": 10.0
    },
    "r.RayTracing.GlobalIllumination.FinalGather.FilterWidth": {
        "description": "Determines the local neighborhood for sample stealing (default = 0)\n",
        "value": 0.0
    },
    "r.RayTracing.GlobalIllumination.FinalGather.Iterations": {
        "description": "Determines the number of iterations for gather point creation\n",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.FinalGather.SortMaterials": {
        "description": "Sets whether refected materials will be sorted before shading\n0: Disabled\n 1: Enabled, using Trace->Sort->Trace (Default)\n",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.FinalGather.SortSize": {
        "description": "Size of horizon for material ID sort\n0: Disabled\n1: 256 Elements\n2: 512 Elements\n3: 1024 Elements\n4: 2048 Elements\n5: 4096 Elements (Default)\n",
        "value": 5.0
    },
    "r.RayTracing.GlobalIllumination.FinalGather.SortTileSize": {
        "description": "Size of pixel tiles for sorted global illumination (default = 64)\n",
        "value": 64.0
    },
    "r.RayTracing.GlobalIllumination.FireflySuppression": {
        "description": "Applies tonemap operator to suppress potential fireflies (default = 0). ",
        "value": 0.0
    },
    "r.RayTracing.GlobalIllumination.Lights.DirectionalLight": {
        "description": "Enables DirectionalLight sampling for global illumination (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.Lights.PointLight": {
        "description": "Enables PointLight sampling for global illumination (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.Lights.RectLight": {
        "description": "Enables RectLight sampling for global illumination (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.Lights.SkyLight": {
        "description": "Enables SkyLight sampling for global illumination (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.Lights.SpotLight": {
        "description": "Enables SpotLight sampling for global illumination (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.GlobalIllumination.MaxBounces": {
        "description": "Max bounces (default = -1 (driven by postprocesing volume))",
        "value": -1.0
    },
    "r.RayTracing.GlobalIllumination.MaxLightCount": {
        "description": "Enables two-sided geometry when tracing GI rays (default = 256)",
        "value": 256.0
    },
    "r.RayTracing.GlobalIllumination.MaxRayDistance": {
        "description": "Max ray distance (default = 1.0e27)",
        "value": 9.999999884841548e+26
    },
    "r.RayTracing.GlobalIllumination.MaxShadowDistance": {
        "description": "Max shadow distance (default = -1.0, distance adjusted automatically so shadow rays do not hit the sky sphere) ",
        "value": -1.0
    },
    "r.RayTracing.GlobalIllumination.NextEventEstimationSamples": {
        "description": "Number of sample draws for next-event estimation (default = 2)NOTE: This parameter is experimental",
        "value": 2.0
    },
    "r.RayTracing.GlobalIllumination.RenderTileSize": {
        "description": "Render ray traced global illumination in NxN pixel tiles, where each tile is submitted as separate GPU command buffer, allowing high quality rendering without triggering timeout detection. (default = 0, tiling disabled)",
        "value": 0.0
    },
    "r.RayTracing.GlobalIllumination.SamplesPerPixel": {
        "description": "Samples per pixel (default = -1 (driven by postprocesing volume))",
        "value": -1.0
    },
    "r.RayTracing.GlobalIllumination.ScreenPercentage": {
        "description": "Screen percentage for ray tracing global illumination (default = 50)",
        "value": 50.0
    },
    "r.RayTracing.GlobalIllumination.UseRussianRoulette": {
        "description": "Perform Russian Roulette to only cast diffuse rays on surfaces with brighter albedos (default = 0)NOTE: This parameter is experimental",
        "value": 0.0
    },
    "r.RayTracing.LightCulling.CellSize": {
        "description": "Minimum size of light cell (default 200 units)",
        "value": 200.0
    },
    "r.RayTracing.LightCulling.Cells": {
        "description": "Number of cells in each dimension for lighting grid (default 16)",
        "value": 16.0
    },
    "r.RayTracing.LightingMissShader": {
        "description": "Whether evaluate lighting using a miss shader when rendering reflections and translucency instead of doing it in ray generation shader. (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.NonBlockingPipelineCreation": {
        "description": "Enable background ray tracing pipeline creation, without blocking RHI or Render thread.\nFallback opaque black material will be used for missing shaders meanwhile.\n 0: off (default, rendering will always use correct requested material)\n 1: on (non-blocking mode may sometimes use the fallback opaque black material)\n",
        "value": 0.0
    },
    "r.RayTracing.NormalBias": {
        "description": "Sets the max. normal bias used for offseting the ray start position along the normal (default = 0.1, i.e., 1mm)",
        "value": 0.10000000149011612
    },
    "r.RayTracing.PSOCacheSize": {
        "description": "Number of ray tracing pipelines to keep in the cache (default = 50). Set to 0 to disable eviction.\n",
        "value": 50.0
    },
    "r.RayTracing.ParallelMeshBatchSetup": {
        "description": "Whether to setup ray tracing materials via parallel jobs.",
        "value": 1.0
    },
    "r.RayTracing.ParallelMeshBatchSize": {
        "description": "Batch size for ray tracing materials parallel jobs.",
        "value": 128.0
    },
    "r.RayTracing.Reflections": {
        "description": "-1: Value driven by postprocess volume (default) \n0: use traditional rasterized SSR\n1: use ray traced reflections\n",
        "value": -1.0
    },
    "r.RayTracing.Reflections.DirectLighting": {
        "description": "Enables ray tracing reflections direct lighting (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.EmissiveAndIndirectLighting": {
        "description": "Enables ray tracing reflections emissive and indirect lighting (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.EnableTwoSidedGeometry": {
        "description": "Two-sided geometry setting for reflection rays. (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred": {
        "description": "Whether to use the experimental deferred ray traced reflection rendering algorithm, which only supports a subset of features but runs faster. (default = 0).",
        "value": 0.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.AnyHitMaxRoughness": {
        "description": "Allows skipping AnyHit shader execution for rough reflection rays (default: 0.1)",
        "value": 0.10000000149011612
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.GenerateRaysWithRGS": {
        "description": "Whether to generate reflection rays directly in RGS or in a separate compute shader (default: 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.Glossy": {
        "description": "Whether to use glossy reflections with GGX sampling or to force mirror-like reflections for performance (default: 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.HorizontalResolutionScale": {
        "description": "Reflection resolution scaling for the X axis between 0.25 and 4.0. Can only be used when spatial resolve is enabled. (default: 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.MipBias": {
        "description": "Global texture mip bias applied during ray tracing material evaluation. (default: 0)\nImproves ray tracing reflection performance at the cost of lower resolution textures in reflections. Values are clamped to range [0..15].\n",
        "value": 0.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.SmoothBias": {
        "description": "Whether to bias reflections towards smooth / mirror-like directions. Improves performance, but is not physically based. (default: 0)\nThe bias is implemented as a non-linear function, affecting low roughness values more than high roughness ones.\nRoughness values higher than this CVar value remain entirely unaffected.\n",
        "value": 0.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve": {
        "description": "Whether to use a basic spatial resolve (denoising) filter on reflection output. Not compatible with regular screen space denoiser. (default: 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve.MaxRadius": {
        "description": "Maximum radius in pixels of the native reflection image. Actual radius depends on output pixel roughness, rougher reflections using larger radius. (default: 8)",
        "value": 8.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve.NumSamples": {
        "description": "Maximum number of screen space samples to take during spatial resolve step. More samples produces smoother output at higher GPU cost. Specialized shader is used for 4, 8, 12 and 16 samples. (default: 8)",
        "value": 8.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve.TemporalQuality": {
        "description": "0: Disable temporal accumulation\n1: Tile-based temporal accumulation (low quality)\n2: Tile-based temporal accumulation with randomized tile offsets per frame (medium quality)\n(default: 2)",
        "value": 2.0
    },
    "r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve.TemporalWeight": {
        "description": "Defines whether to perform temporal accumulation during reflection spatial resolve and how much weight to give to history. Valid values in range [0..1]. (default: 0.90)",
        "value": 0.949999988079071
    },
    "r.RayTracing.Reflections.HeightFog": {
        "description": "Enables height fog in ray traced reflections (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.Hybrid": {
        "description": "Sets whether screen space reflections should be used when possible (experimental).\nForces material sorting and single ray bounce.\n0: Disabled (Default)\n 1: Enabled\n",
        "value": 0.0
    },
    "r.RayTracing.Reflections.MaxBounces": {
        "description": "Sets the maximum number of ray tracing reflection bounces (default = -1 (max bounces driven by postprocessing volume))",
        "value": -1.0
    },
    "r.RayTracing.Reflections.MaxRayDistance": {
        "description": "Sets the maximum ray distance for ray traced reflection rays. When ray shortening is used, skybox will not be sampled in RT reflection pass and will be composited later, together with local reflection captures. Negative values turn off this optimization. (default = -1 (infinite rays))",
        "value": -1.0
    },
    "r.RayTracing.Reflections.MaxRoughness": {
        "description": "Sets the maximum roughness until which ray tracing reflections will be visible (default = -1 (max roughness driven by postprocessing volume))",
        "value": -1.0
    },
    "r.RayTracing.Reflections.MaxUnderCoatBounces": {
        "description": "How many bounces to apply ray traced reflections to the undercoat layer. Extra bounces will use reflection probes. (default 0, always use probes)",
        "value": 0.0
    },
    "r.RayTracing.Reflections.MinClearCoatLevel": {
        "description": "Minimum level at which to apply clear coat shading (default 0.01)\n Note: causes some variation in height fog due to using the bottom layer path",
        "value": 0.009999999776482582
    },
    "r.RayTracing.Reflections.MinRayDistance": {
        "description": "Sets the minimum ray distance for ray traced reflection rays. Actual reflection ray length is computed as Lerp(MaxRayDistance, MinRayDistance, Roughness), i.e. reflection rays become shorter when traced from rougher surfaces. (default = -1 (infinite rays))",
        "value": -1.0
    },
    "r.RayTracing.Reflections.NormalBias": {
        "description": "Magnitude of normal bias for reflection rays. (default = 0.1)",
        "value": 0.10000000149011612
    },
    "r.RayTracing.Reflections.RayTraceSkyLightContribution": {
        "description": "Requests ray tracing reflections to use ray traced visibility rays for sky light contribution similar to sky light ray traced shadows. A Sky Light with ray traced shadows enabled must be present for this flag to take effect. (default = 0)",
        "value": 0.0
    },
    "r.RayTracing.Reflections.ReflectionCaptures": {
        "description": "Enables ray tracing reflections to use reflection captures as the last bounce reflection. Particularly usefull for metals in reflection. (default = 0)",
        "value": 0.0
    },
    "r.RayTracing.Reflections.RenderTileSize": {
        "description": "Render ray traced reflections in NxN pixel tiles, where each tile is submitted as separate GPU command buffer, allowing high quality rendering without triggering timeout detection (default = 0, tiling disabled)",
        "value": 0.0
    },
    "r.RayTracing.Reflections.SamplesPerPixel": {
        "description": "Sets the samples-per-pixel for reflections (default = -1 (driven by postprocesing volume))",
        "value": -1.0
    },
    "r.RayTracing.Reflections.ScreenPercentage": {
        "description": "Screen percentage the reflections should be ray traced at (default = 100).",
        "value": 100.0
    },
    "r.RayTracing.Reflections.Shadows": {
        "description": "Enables shadows in ray tracing reflections) -1: Shadows driven by postprocessing volume (default) 0: Shadows disabled  1: Hard shadows 2: Soft area shadows",
        "value": -1.0
    },
    "r.RayTracing.Reflections.SortMaterials": {
        "description": "Sets whether refected materials will be sorted before shading\n0: Disabled\n 1: Enabled, using Trace->Sort->Trace (Default)\n",
        "value": 1.0
    },
    "r.RayTracing.Reflections.SortSize": {
        "description": "Size of horizon for material ID sort\n0: Disabled\n1: 256 Elements\n2: 512 Elements\n3: 1024 Elements\n4: 2048 Elements\n5: 4096 Elements (Default)\n",
        "value": 5.0
    },
    "r.RayTracing.Reflections.SortTileSize": {
        "description": "Size of pixel tiles for sorted reflections\n  Default 64\n",
        "value": 64.0
    },
    "r.RayTracing.Reflections.TestPathRoughness": {
        "description": "Accumulate roughness along path and test accumulated roughness against MaxRoughness before launching the next bounce (default 1)",
        "value": 1.0
    },
    "r.RayTracing.Reflections.Translucency": {
        "description": "Translucent objects visible in ray tracing reflections) -1: Driven by postprocessing volume (default) 0: Translucent objects not visible 1: Translucent objects visible",
        "value": -1.0
    },
    "r.RayTracing.SceneCaptures": {
        "description": "Enable ray tracing in scene captures.\n -1: Use scene capture settings (default) \n 0: off \n 1: on",
        "value": -1.0
    },
    "r.RayTracing.Shadow.MaxBatchSize": {
        "description": "Maximum number of shadows to trace at the same time.",
        "value": 8.0
    },
    "r.RayTracing.Shadow.SamplesPerPixel": {
        "description": "Sets the samples-per-pixel for directional light occlusion (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Shadows": {
        "description": "0: use traditional rasterized shadow map\n1: use ray tracing shadows (default)",
        "value": 1.0
    },
    "r.RayTracing.Shadows.EnableHairVoxel": {
        "description": "Enables use of hair voxel data for tracing shadow (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Shadows.EnableMaterials": {
        "description": "Enables material shader binding for shadow rays. If this is disabled, then a default trivial shader is used. (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Shadows.EnableTwoSidedGeometry": {
        "description": "Enables two-sided geometry when tracing shadow rays (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Shadows.HairOcclusionThreshold": {
        "description": "Define the number of hair that need to be crossed, before casting occlusion (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Shadows.LODTransitionEnd": {
        "description": "The end of an LOD transition range (default = 5000)",
        "value": 5000.0
    },
    "r.RayTracing.Shadows.LODTransitionStart": {
        "description": "The start of an LOD transition range (default = 4000)",
        "value": 4000.0
    },
    "r.RayTracing.Shadows.Lights.Directional": {
        "description": "Enables ray tracing shadows for directional lights (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Shadows.Lights.Point": {
        "description": "Enables ray tracing shadows for point lights (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Shadows.Lights.Rect": {
        "description": "Enables ray tracing shadows for rect light (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Shadows.Lights.Spot": {
        "description": "Enables ray tracing shadows for spot lights (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Sky.HairOcclusionThreshold": {
        "description": "Define the number of hair that need to be crossed, before casting occlusion (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.SkyLight": {
        "description": "Enables ray tracing SkyLight (default = 0)",
        "value": -1.0
    },
    "r.RayTracing.SkyLight.DecoupleSampleGeneration": {
        "description": "Decouples sample generation from ray traversal (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.SkyLight.Denoiser": {
        "description": "Denoising options (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.SkyLight.EnableMaterials": {
        "description": "Enables material shader binding for shadow rays. If this is disabled, then a default trivial shader is used. (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.SkyLight.EnableTwoSidedGeometry": {
        "description": "Enables two-sided geometry when tracing shadow rays (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.SkyLight.HairVoxel": {
        "description": "Include hair voxel representation to estimate sky occlusion",
        "value": 1.0
    },
    "r.RayTracing.SkyLight.MaxRayDistance": {
        "description": "Sets the max ray distance for ray tracing SkyLight (default = 1.0e7)",
        "value": 10000000.0
    },
    "r.RayTracing.SkyLight.MaxShadowThickness": {
        "description": "Sets the max shadow thickness for translucent materials for ray tracing SkyLight (default = 1.0e3)",
        "value": 1000.0
    },
    "r.RayTracing.SkyLight.SamplesPerPixel": {
        "description": "Sets the samples-per-pixel for ray tracing SkyLight (default = -1)",
        "value": -1.0
    },
    "r.RayTracing.SkyLight.Sampling.StopLevel": {
        "description": "Sets the stop level for MIP-sampling (default = 0)",
        "value": 0.0
    },
    "r.RayTracing.SkyLight.ScreenPercentage": {
        "description": "Screen percentage at which to evaluate sky occlusion",
        "value": 100.0
    },
    "r.RayTracing.Translucency": {
        "description": "-1: Value driven by postprocess volume (default) \n 0: ray tracing translucency off (use raster) \n 1: ray tracing translucency enabled",
        "value": -1.0
    },
    "r.RayTracing.Translucency.DirectLighting": {
        "description": "Enables ray tracing translucency direct lighting (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Translucency.EmissiveAndIndirectLighting": {
        "description": "Enables ray tracing translucency emissive and indirect lighting (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Translucency.HeightFog": {
        "description": "Enables height fog in ray traced Translucency (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Translucency.MaxRayDistance": {
        "description": "Sets the maximum ray distance for ray traced translucency rays. When ray shortening is used, skybox will not be sampled in RT translucency pass and will be composited later, together with local reflection captures. Negative values turn off this optimization. (default = -1 (infinite rays))",
        "value": -1.0
    },
    "r.RayTracing.Translucency.MaxRefractionRays": {
        "description": "Sets the maximum number of refraction rays for ray traced translucency (default = -1 (max bounces driven by postprocessing volume)",
        "value": -1.0
    },
    "r.RayTracing.Translucency.MaxRoughness": {
        "description": "Sets the maximum roughness until which ray tracing reflections will be visible (default = -1 (max roughness driven by postprocessing volume))",
        "value": -1.0
    },
    "r.RayTracing.Translucency.MinRayDistance": {
        "description": "Sets the minimum ray distance for ray traced translucency rays. Actual translucency ray length is computed as Lerp(MaxRayDistance, MinRayDistance, Roughness), i.e. translucency rays become shorter when traced from rougher surfaces. (default = -1 (infinite rays))",
        "value": -1.0
    },
    "r.RayTracing.Translucency.PrimaryRayBias": {
        "description": "Sets the bias to be subtracted from the primary ray TMax in ray traced Translucency. Larger bias reduces the chance of opaque objects being intersected in ray traversal, saving performance, but at the risk of skipping some thin translucent objects in proximity of opaque objects. (recommended range: 0.00001 - 0.1) (default = 0.00001)",
        "value": 9.999999747378752e-06
    },
    "r.RayTracing.Translucency.Refraction": {
        "description": "Enables refraction in ray traced Translucency (default = 1)",
        "value": -1.0
    },
    "r.RayTracing.Translucency.SamplesPerPixel": {
        "description": "Sets the samples-per-pixel for Translucency (default = 1)",
        "value": 1.0
    },
    "r.RayTracing.Translucency.Shadows": {
        "description": "Enables shadows in ray tracing translucency) -1: Shadows driven by postprocessing volume (default) 0: Shadows disabled  1: Hard shadows 2: Soft area shadows",
        "value": -1.0
    },
    "r.RayTracing.Transmission.RejectionSamplingTrials": {
        "description": "Determines the number of rejection-sampling trials (default = 0)",
        "value": 0.0
    },
    "r.RayTracing.Transmission.SamplingTechnique": {
        "description": "0: Uses constant tracking of an infinite homogeneous medium (default)\n1: Uses constant tracking of a finite homogeneous medium whose extent is determined by transmission sampling distance",
        "value": 0.0
    },
    "r.RayTracing.Transmission.TransmissionSamplingDistanceCulling": {
        "description": "Enables visibility testing to cull transmission sampling distance (default = 0)",
        "value": 0.0
    },
    "r.RayTracing.UseTextureLod": {
        "description": "Enable automatic texture mip level selection in ray tracing material shaders.\n 0: highest resolution mip level is used for all texture (default).\n 1: texture LOD is approximated based on total ray length, output resolution and texel density at hit point (ray cone method).",
        "value": 0.0
    },
    "r.ReadBuffer.AlignSize": {
        "description": "The alignment size (in instances) to allocate in blocks for rendering read buffers. i.e. 64*1024 = 256k for a float buffer",
        "value": 65536.0
    },
    "r.ReadBuffer.MaxRenderingBytesAllocatedPerFrame": {
        "description": "The maximum number of transient rendering read buffer bytes to allocate before we start panic logging who is doing the allocations",
        "value": 33554432.0
    },
    "r.ReadBuffer.MinSize": {
        "description": "The minimum size (in instances) to allocate in blocks for rendering read buffers. i.e. 256*1024 = 1mb for a float buffer",
        "value": 262144.0
    },
    "r.RecompileRenderer": {
        "command": true,
        "description": "Recompiles the renderer module on the fly."
    },
    "r.ReflectionCaptureGPUArrayCopy": {
        "description": "Do a fast copy of the reflection capture array when resizing if possible. This avoids hitches on the rendering thread when the cubemap array needs to grow.\n 0 is off, 1 is on (default)",
        "value": 1.0
    },
    "r.ReflectionCaptureResolution": {
        "description": "Set the resolution for all reflection capture cubemaps. Should be set via project's Render Settings. Must be power of 2. Defaults to 128.\n",
        "value": 128.0
    },
    "r.ReflectionCaptureSupersampleFactor": {
        "description": "Super sample factor when rendering reflection captures.\nDefault = 1, no super sampling\nMaximum clamped to 8.",
        "value": 1.0
    },
    "r.ReflectionCaptureUpdateEveryFrame": {
        "description": "When set, reflection captures will constantly be scheduled for update.\n",
        "value": 0.0
    },
    "r.ReflectionEnvironment": {
        "description": "Whether to render the reflection environment feature, which implements local reflections through Reflection Capture actors.\n 0: off\n 1: on and blend with scene (default) 2: on and overwrite scene (only in non-shipping builds)",
        "value": 1.0
    },
    "r.ReflectionEnvironmentBeginMixingRoughness": {
        "description": "Min roughness value at which to begin mixing reflection captures with lightmap indirect diffuse.",
        "value": 0.10000000149011612
    },
    "r.ReflectionEnvironmentEndMixingRoughness": {
        "description": "Min roughness value at which to end mixing reflection captures with lightmap indirect diffuse.",
        "value": 0.30000001192092896
    },
    "r.ReflectionEnvironmentLightmapMixBasedOnRoughness": {
        "description": "Whether to reduce lightmap mixing with reflection captures for very smooth surfaces.  This is useful to make sure reflection captures match SSR / planar reflections in brightness.",
        "value": 1.0
    },
    "r.ReflectionEnvironmentLightmapMixLargestWeight": {
        "description": "When set to 1 can be used to clamp lightmap mixing such that only darkening from lightmaps are applied to reflection captures.",
        "value": 10000.0
    },
    "r.ReflectionEnvironmentLightmapMixing": {
        "description": "Whether to mix indirect specular from reflection captures with indirect diffuse from lightmaps for rough surfaces.",
        "value": 1.0
    },
    "r.Reflections.Denoiser": {
        "description": "Choose the denoising algorithm.\n 0: Disabled;\n 1: Forces the default denoiser of the renderer;\n 2: GScreenSpaceDenoiser which may be overriden by a third party plugin (default).",
        "value": 2.0
    },
    "r.Reflections.Denoiser.PreConvolution": {
        "description": "Number of pre-convolution passes (default = 1).",
        "value": 1.0
    },
    "r.Reflections.Denoiser.ReconstructionSamples": {
        "description": "Maximum number of samples for the reconstruction pass (default = 8).",
        "value": 8.0
    },
    "r.Reflections.Denoiser.TemporalAccumulation": {
        "description": "Accumulates the samples over multiple frames.",
        "value": 1.0
    },
    "r.RefractionQuality": {
        "description": "Defines the distorion/refraction quality which allows to adjust for quality or performance.\n<=0: off (fastest)\n  1: low quality (not yet implemented)\n  2: normal quality (default)\n  3: high quality (e.g. color fringe, not yet implemented)",
        "value": 2.0
    },
    "r.RenderLastFrameInStreamingPause": {
        "description": "If 1 the previous frame is displayed during streaming pause. If zero the screen is left black.",
        "value": 1.0
    },
    "r.RenderPass.Validation": {
        "description": "",
        "value": 0.0
    },
    "r.RenderTargetPool.AllowMultipleAliasingDiscardsPerFrame": {
        "description": "If enabled, allows rendertargets to be discarded and reacquired in the same frame.\nThis should give better aliasing efficiency, but carries some RHIthread/GPU performance overhead\nwith some RHIs (due to additional commandlist flushes)\n 0:off (default), 1:on",
        "value": 0.0
    },
    "r.RenderTargetPool.Events": {
        "command": true,
        "description": "Visualize the render target pool events over time in one frame. Optional parameter defines threshold in KB.\nTo disable the view use the command without any parameter"
    },
    "r.RenderTargetPool.TransientAliasingMode": {
        "description": "Enables transient resource aliasing for rendertargets. Used only if GSupportsTransientResourceAliasing is true.\n0 : Disabled\n1 : enable transient resource aliasing for fastVRam rendertargets\n2 : enable transient resource aliasing for fastVRam rendertargets and those with a Transient hint. Best for memory usage - has some GPU cost (~0.2ms)\n3 : enable transient resource aliasing for ALL rendertargets (not recommended)\n",
        "value": 2.0
    },
    "r.RenderTargetPoolMin": {
        "description": "If the render target pool size (in MB) is below this number there is no deallocation of rendertargetsDefault is 200 MB.",
        "value": 400.0
    },
    "r.Roughness.Max": {
        "description": "Allows quick material test by remapping the roughness at 1 to a new value (0..1), Only for non shipping built!\n1: (default)",
        "value": 1.0
    },
    "r.Roughness.Min": {
        "description": "Allows quick material test by remapping the roughness at 0 to a new value (0..1), Only for non shipping built!\n0: (default)",
        "value": 0.0
    },
    "r.SSGI.Enable": {
        "description": "Whether to enable SSGI (defaults to 0).\n",
        "value": 0.0
    },
    "r.SSGI.HalfRes": {
        "description": "Whether to do SSGI at half resolution (defaults to 0).\n",
        "value": 0.0
    },
    "r.SSGI.LeakFreeReprojection": {
        "description": "Whether use a more expensive but leak free reprojection of previous frame's scene color.\n",
        "value": 1.0
    },
    "r.SSGI.Quality": {
        "description": "Quality setting to control number of ray shot with SSGI, between 1 and 4 (defaults to 4).\n",
        "value": 3.0
    },
    "r.SSR.ExperimentalDenoiser": {
        "description": "Replace SSR's TAA pass with denoiser.",
        "value": 0.0
    },
    "r.SSR.HalfResSceneColor": {
        "description": "Use half res scene color as input for SSR. Improves performance without much of a visual quality loss.",
        "value": 0.0
    },
    "r.SSR.MaxRoughness": {
        "description": "Allows to override the post process setting ScreenSpaceReflectionMaxRoughness.\nIt defines until what roughness we fade the screen space reflections, 0.8 works well, smaller can run faster.\n(Useful for testing, no scalability or project setting)\n 0..1: use specified max roughness (overrride PostprocessVolume setting)\n -1: no override (default)",
        "value": -1.0
    },
    "r.SSR.Quality": {
        "description": "Whether to use screen space reflections and at what quality setting.\n(limits the setting in the post process settings which has a different scale)\n(costs performance, adds more visual realism but the technique has limits)\n 0: off (default)\n 1: low (no glossy)\n 2: medium (no glossy)\n 3: high (glossy/using roughness, few samples)\n 4: very high (likely too slow for real-time)",
        "value": 3.0
    },
    "r.SSR.Stencil": {
        "description": "Defines if we use the stencil prepass for the screen space reflection\n 0 is off (default), 1 is on",
        "value": 0.0
    },
    "r.SSR.Temporal": {
        "description": "Defines if we use the temporal smoothing for the screen space reflection\n 0 is off (for debugging), 1 is on (default)",
        "value": 0.0
    },
    "r.SSS.Burley.AlwaysUpdateParametersFromSeparable": {
        "description": "0: Will not update parameters when the program loads. (default)1: Always update from the separable when the program loads. (Correct only when Subsurface color is 1).",
        "value": 0.0
    },
    "r.SSS.Burley.BilateralFilterKernelFunctionType": {
        "description": "0: Depth Only. It is more performant (x2 faster for close view).1: Depth and normal. It leads to better quality in regions like eyelids. (default)",
        "value": 1.0
    },
    "r.SSS.Burley.EnableProfileIdCache": {
        "description": "0: Disable profile id cache using in the sampling pass.\n1: Consumes 1 byte per pixel more memory to make Burley pass much faster. (default)\n",
        "value": 0.0
    },
    "r.SSS.Burley.NumSamplesOverride": {
        "description": "When zero, Burley SSS adaptively determines the number of samples. When non-zero, this value overrides the sample count.\n",
        "value": 0.0
    },
    "r.SSS.Burley.Quality": {
        "description": "0: Fallback mode. Burley falls back to run scattering in Separable with transmission in Burley for better performance. Separable parameters are automatically fitted.1: Automatic. The subsurface will only switch to separable in half resolution. (default)",
        "value": 1.0
    },
    "r.SSS.Checkerboard": {
        "description": "Enables or disables checkerboard rendering for subsurface profile rendering.\nThis is necessary if SceneColor does not include a floating point alpha channel (e.g 32-bit formats)\n 0: Disabled (high quality) \n 1: Enabled (low quality). Surface lighting will be at reduced resolution.\n 2: Automatic. Non-checkerboard lighting will be applied if we have a suitable rendertarget format\n",
        "value": 2.0
    },
    "r.SSS.Filter": {
        "description": "Defines the filter method for Screenspace Subsurface Scattering feature.\n 0: point filter (useful for testing, could be cleaner)\n 1: bilinear filter",
        "value": 1.0
    },
    "r.SSS.HalfRes": {
        "description": " 0: full quality (Combined Burley and Separable pass. Separable is not optimized, as reference)\n 1: parts of the algorithm runs in half resolution which is lower quality but faster (default, Separable only)",
        "value": 0.0
    },
    "r.SSS.Quality": {
        "description": "Defines the quality of the recombine pass when using the SubsurfaceScatteringProfile shading model\n 0: low (faster, default)\n 1: high (sharper details but slower)\n-1: auto, 1 if TemporalAA is disabled (without TemporalAA the quality is more noticable)",
        "value": 1.0
    },
    "r.SSS.SampleSet": {
        "description": "Defines how many samples we use for Separable Screenspace Subsurface Scattering feature.\n 0: lowest quality (6*2+1)\n 1: medium quality (9*2+1)\n 2: high quality (13*2+1) (default)",
        "value": 2.0
    },
    "r.SSS.Scale": {
        "description": "Affects the Screen space Separable subsurface scattering pass (use shadingmodel SubsurfaceProfile, get near to the object as the default)\nis human skin which only scatters about 1.2cm)\n 0: off (if there is no object on the screen using this pass it should automatically disable the post process pass)\n<1: scale scatter radius down (for testing)\n 1: use given radius form the Subsurface scattering asset (default)\n>1: scale scatter radius up (for testing)",
        "value": 1.0
    },
    "r.SafeStateLookup": {
        "description": "Forces new-style safe state lookup for easy runtime perf comparison\n",
        "value": 1.0
    },
    "r.SaveEXR.CompressionQuality": {
        "description": "Defines how we save HDR screenshots in the EXR format.\n 0: no compression\n 1: default compression which can be slow (default)",
        "value": 1.0
    },
    "r.SceneCapture.EnableViewExtensions": {
        "description": "Whether to enable view extensions when doing scene capture.\n0: Disable view extensions (default).\n1: Enable view extensions.\n",
        "value": 0.0
    },
    "r.SceneColorFormat": {
        "description": "Defines the memory layout (RGBA) used for the scene color\n(affects performance, mostly through bandwidth, quality especially with translucency).\n 0: PF_B8G8R8A8 32Bit (mostly for testing, likely to unusable with HDR)\n 1: PF_A2B10G10R10 32Bit\n 2: PF_FloatR11G11B10 32Bit\n 3: PF_FloatRGB 32Bit\n 4: PF_FloatRGBA 64Bit (default, might be overkill, especially if translucency is mostly using SeparateTranslucency)\n 5: PF_A32B32G32R32F 128Bit (unreasonable but good for testing)",
        "value": 4.0
    },
    "r.SceneColorFringe.Max": {
        "description": "Allows to clamp the postprocess setting (in percent, Scene chromatic aberration / color fringe to simulate an artifact that happens in real-world lens, mostly visible in the image corners)\n-1: don't clamp (default)\n-2: to test extreme fringe",
        "value": -1.0
    },
    "r.SceneColorFringeQuality": {
        "description": " 0: off but best for performance\n 1: 3 texture samples (default)n",
        "value": 1.0
    },
    "r.SceneRenderTargetResizeMethod": {
        "description": "Control the scene render target resize method:\n(This value is only used in game mode and on windowing platforms unless 'r.SceneRenderTargetsResizingMethodForceOverride' is enabled.)\n0: Resize to match requested render size (Default) (Least memory use, can cause stalls when size changes e.g. ScreenPercentage)\n1: Fixed to screen resolution.\n2: Expands to encompass the largest requested render dimension. (Most memory use, least prone to allocation stalls.)",
        "value": 0.0
    },
    "r.SceneRenderTargetResizeMethodForceOverride": {
        "description": "Forces 'r.SceneRenderTargetResizeMethod' to be respected on all configurations.\n0: Disabled.\n1: Enabled.\n",
        "value": 0.0
    },
    "r.ScreenPercentage": {
        "description": "To render in lower resolution and upscale for better performance (combined up with the blenable post process setting).\n70 is a good value for low aliasing and performance, can be verified with 'show TestImage'\nin percent, >0 and <=100, larger numbers are possible (supersampling) but the downsampling quality is improvable.<0 is treated like 100.",
        "value": 100.0
    },
    "r.ScreenshotDelegate": {
        "description": "ScreenshotDelegates prevent processing of incoming screenshot request and break some features. This allows to disable them.\nIdeally we rework the delegate code to not make that needed.\n 0: off\n 1: delegates are on (default)",
        "value": 1.0
    },
    "r.SecondaryScreenPercentage.GameViewport": {
        "description": "Override secondary screen percentage for game viewport.\n 0: Compute secondary screen percentage = 100 / DPIScalefactor automaticaly (default);\n 1: override secondary screen percentage.",
        "value": 0.0
    },
    "r.SelectiveBasePassOutputs": {
        "description": "Enables shaders to only export to relevant rendertargets.\n 0: Export in all rendertargets.\n 1: Export only into relevant rendertarget.\n",
        "value": 0.0
    },
    "r.SeparateTranslucency": {
        "description": "Allows to disable the separate translucency feature (all translucency is rendered in separate RT and composited\nafter DOF, if not specified otherwise in the material).\n 0: off (translucency is affected by depth of field)\n 1: on costs GPU performance and memory but keeps translucency unaffected by Depth of Field. (default)",
        "value": 1.0
    },
    "r.SeparateTranslucencyAutoDownsample": {
        "description": "Whether to automatically downsample separate translucency based on last frame's GPU time.\nAutomatic downsampling is only used when r.SeparateTranslucencyScreenPercentage is 100",
        "value": 0.0
    },
    "r.SeparateTranslucencyDurationDownsampleThreshold": {
        "description": "When smoothed full-res translucency GPU duration is larger than this value (ms), the entire pass will be downsampled by a factor of 2 in each dimension.",
        "value": 1.5
    },
    "r.SeparateTranslucencyDurationUpsampleThreshold": {
        "description": "When smoothed half-res translucency GPU duration is smaller than this value (ms), the entire pass will be restored to full resolution.\nThis should be around 1/4 of r.SeparateTranslucencyDurationDownsampleThreshold to avoid toggling downsampled state constantly.",
        "value": 0.5
    },
    "r.SeparateTranslucencyMinDownsampleChangeTime": {
        "description": "Minimum time in seconds between changes to automatic downsampling state, used to prevent rapid swapping between half and full res.",
        "value": 1.0
    },
    "r.SeparateTranslucencyScreenPercentage": {
        "description": "Render separate translucency at this percentage of the full resolution.\nin percent, >0 and <=100, larger numbers are possible (supersampling).<0 is treated like 100.",
        "value": 100.0
    },
    "r.SeparateTranslucencyUpsampleMode": {
        "description": "Upsample method to use on separate translucency.  These are only used when r.SeparateTranslucencyScreenPercentage is less than 100.\n0: bilinear 1: Nearest-Depth Neighbor (only when r.SeparateTranslucencyScreenPercentage is 50)",
        "value": 1.0
    },
    "r.SetFramePace": {
        "command": true,
        "description": "Set a target frame rate for the frame pacer.To set 30fps: \"r.SetFramePace 30\""
    },
    "r.SetNearClipPlane": {
        "command": true,
        "description": "Set the near clipping plane (in cm)"
    },
    "r.SetRes": {
        "description": "Set the display resolution for the current game view. Has no effect in the editor.\ne.g. 1280x720w for windowed\n     1920x1080f for fullscreen\n     1920x1080wf for windowed fullscreen\n",
        "value": 1920.0
    },
    "r.ShaderCodeLibrary.AsyncIOAllowDontCache": {
        "description": "",
        "value": 0.0
    },
    "r.ShaderCodeLibrary.DefaultAsyncIOPriority": {
        "description": "",
        "value": 3.0
    },
    "r.ShaderCodeLibrary.SeperateLoadingCache": {
        "description": "if > 0, each shader code library has it's own loading cache.",
        "value": 0.0
    },
    "r.ShaderCompiler.EmitWarningsOnLoad": {
        "description": "When 1, shader compiler warnings are emitted to the log for all shaders as they are loaded.",
        "value": 0.0
    },
    "r.ShaderDevelopmentMode": {
        "description": "0: Default, 1: Enable various shader development utilities, such as the ability to retry on failed shader compile, and extra logging as shaders are compiled.",
        "value": 0.0
    },
    "r.ShaderDrawDebug": {
        "description": "ShaderDrawDebug debugging toggle.\n",
        "value": 1.0
    },
    "r.ShaderDrawDebug.Lock": {
        "description": "Lock the shader draw buffer.\n",
        "value": 0.0
    },
    "r.ShaderDrawDebug.MaxElementCount": {
        "description": "ShaderDraw output buffer size in element.\n",
        "value": 0.0
    },
    "r.ShaderPipelineCache.AlwaysGenerateOSCache": {
        "description": "1 generates the cache every run, 0 generates it only when it is missing.",
        "value": 1.0
    },
    "r.ShaderPipelineCache.AutoSaveTime": {
        "description": "Set the time where any logged PSO's will be saved if the number is < r.ShaderPipelineCache.SaveAfterPSOsLogged. Disabled when r.ShaderPipelineCache.SaveAfterPSOsLogged is 0",
        "value": 30.0
    },
    "r.ShaderPipelineCache.AutoSaveTimeBoundPSO": {
        "description": "Set the time where any logged PSO's will be saved when -logpso is on the command line.",
        "value": 10.0
    },
    "r.ShaderPipelineCache.BackgroundBatchSize": {
        "description": "Set the number of PipelineStateObjects to compile in a single batch operation when compiling in the background. Defaults to a maximum of 1 per frame, due to async. file IO it is less in practice.",
        "value": 1.0
    },
    "r.ShaderPipelineCache.BackgroundBatchTime": {
        "description": "The target time (in ms) to spend precompiling each frame when in the background or 0.0 to disable. When precompiling is faster the batch size will grow and when slower will shrink to attempt to occupy the full amount. Defaults to 0.0 (off).",
        "value": 0.0
    },
    "r.ShaderPipelineCache.BatchSize": {
        "description": "Set the number of PipelineStateObjects to compile in a single batch operation when compiling takes priority. Defaults to a maximum of 50 per frame, due to async. file IO it is less in practice.",
        "value": 50.0
    },
    "r.ShaderPipelineCache.BatchTime": {
        "description": "The target time (in ms) to spend precompiling each frame when compiling takes priority or 0.0 to disable. When precompiling is faster the batch size will grow and when slower will shrink to attempt to occupy the full amount. Defaults to 16.0 (max. ms per-frame of precompilation).",
        "value": 16.0
    },
    "r.ShaderPipelineCache.ClearOSCache": {
        "description": "1 Enables the OS level clear after install, 0 disables it.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.Close": {
        "command": true,
        "description": "Close the current pipeline file cache."
    },
    "r.ShaderPipelineCache.Enabled": {
        "description": "1 Enables the PipelineFileCache, 0 disables it.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.GameFileMaskEnabled": {
        "description": "Set non zero to use GameFileMask during PSO precompile - recording should always save out the usage masks to make that data availble when needed.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.LazyLoadShadersWhenPSOCacheIsPresent": {
        "description": "Non-Zero: If we load a PSO cache, then lazy load from the shader code library. This assumes the PSO cache is more or less complete. This will only work on RHIs that support the library+Hash CreateShader API (GRHISupportsLazyShaderCodeLoading == true).",
        "value": 0.0
    },
    "r.ShaderPipelineCache.LogPSO": {
        "description": "1 Logs new PSO entries into the file cache and allows saving.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.MaxPrecompileTime": {
        "description": "The maximum time to allow a PSO to be precompiled.  if greather than 0, the amount of wall time we will allow pre-compile of PSOs and then switch to background processing.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.MinBindCount": {
        "description": "The minimum bind count to allow a PSO to be precompiled.  Changes to this value will not affect PSOs that have already been removed from consideration.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.Open": {
        "command": true,
        "description": "Takes the desired filename to open and then loads the pipeline file cache."
    },
    "r.ShaderPipelineCache.PreCompileMask": {
        "description": "Mask used to precompile the cache. Defaults to all PSOs (-1)",
        "value": -1.0
    },
    "r.ShaderPipelineCache.PreOptimizeEnabled": {
        "description": "Set non zero to PreOptimize PSOs - this allows some PSOs to be compiled in the foreground before going in to game",
        "value": 0.0
    },
    "r.ShaderPipelineCache.PrecompileBatchSize": {
        "description": "Set the number of PipelineStateObjects to compile in a single batch operation when pre-optimizing the cache. Defaults to a maximum of 50 per frame, due to async. file IO it is less in practice.",
        "value": 50.0
    },
    "r.ShaderPipelineCache.PrecompileBatchTime": {
        "description": "The target time (in ms) to spend precompiling each frame when cpre-optimizing or 0.0 to disable. When precompiling is faster the batch size will grow and when slower will shrink to attempt to occupy the full amount. Defaults to 10.0 (off).",
        "value": 0.0
    },
    "r.ShaderPipelineCache.PrintNewPSODescriptors": {
        "description": "1 prints descriptions for all new PSO entries to the log/console while 0 does not. Defaults to 0 in *Shipping* builds, otherwise 1.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.ReportPSO": {
        "description": "1 reports new PSO entries via a delegate, but does not record or modify any cache file.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.Save": {
        "command": true,
        "description": "Save the current pipeline file cache."
    },
    "r.ShaderPipelineCache.SaveAfterPSOsLogged": {
        "description": "Set the number of PipelineStateObjects to log before automatically saving. 0 will disable automatic saving. Shipping defaults to 0, otherwise default is 100.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.SaveBoundPSOLog": {
        "description": "If > 0 then a log of all bound PSOs for this run of the program will be saved to a writable user cache file. Defaults to 0 but is forced on with -logpso.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.SaveUserCache": {
        "description": "If > 0 then any missed PSOs will be saved to a writable user cache file for subsequent runs to load and avoid in-game hitches. Enabled by default on macOS only.",
        "value": 0.0
    },
    "r.ShaderPipelineCache.SetBatchMode": {
        "command": true,
        "description": "Sets the compilation batch mode, which should be one of:\n\tPause: Suspend precompilation.\n\tBackground: Low priority precompilation.\n\tFast: High priority precompilation."
    },
    "r.ShaderPipelineCache.StartupMode": {
        "description": "Sets the startup mode for the PSO cache, determining what the cache does after initialisation:\n\t0: Precompilation is paused and nothing will compile until a call to ResumeBatching().\n\t1: Precompilation is enabled in the 'Fast' mode.\n\t2: Precompilation is enabled in the 'Background' mode.\nDefault is 1.",
        "value": 1.0
    },
    "r.ShaderPipelines": {
        "description": "Enable using Shader pipelines.",
        "value": 1.0
    },
    "r.ShaderPrintEnable": {
        "description": "ShaderPrint debugging toggle.\n",
        "value": 0.0
    },
    "r.ShaderPrintFontSize": {
        "description": "ShaderPrint font size.\n",
        "value": 16.0
    },
    "r.ShaderPrintFontSpacingX": {
        "description": "ShaderPrint horizontal spacing between symbols.\n",
        "value": 0.0
    },
    "r.ShaderPrintFontSpacingY": {
        "description": "ShaderPrint vertical spacing between symbols.\n",
        "value": 8.0
    },
    "r.ShaderPrintMaxValueCount": {
        "description": "ShaderPrint output buffer size.\n",
        "value": 2000.0
    },
    "r.Shaders.AllowCompilingThroughWorkers": {
        "description": "Allows shader compilation through external ShaderCompileWorker processes.\n1 - (Default) Allows external shader compiler workers\n0 - Disallows external shader compiler workers. Will run shader compilation in proc of UE process.",
        "value": 1.0
    },
    "r.Shaders.BoundsChecking": {
        "description": "Whether to enforce bounds-checking & flush-to-zero/ignore for buffer reads & writes in shaders. Defaults to 1 (enabled). Not all shader languages can omit bounds checking.",
        "value": 1.0
    },
    "r.Shaders.ExportDebugInfo": {
        "description": "Whether to export the shader reflection and debug data from shader bytecode as separate files.r.Shaders.KeepDebugInfo must be enabled and r.DumpShaderDebugInfo will enable this cvar.For some platforms this cvar can be overriden in the Engine.ini, under the [ShaderCompiler] section.",
        "value": 0.0
    },
    "r.Shaders.ExportDebugInfoMode": {
        "description": " 0: Export as loose files.\n 1: Export as an uncompressed archive.\n",
        "value": 0.0
    },
    "r.Shaders.FastMath": {
        "description": "Whether to use fast-math optimisations in shaders.",
        "value": 1.0
    },
    "r.Shaders.FlowControlMode": {
        "description": "Specifies whether the shader compiler should preserve or unroll flow-control in shader code.\nThis is primarily a debugging aid and will override any per-shader or per-material settings if not left at the default value (0).\n\t0: Off (Default) - Entirely at the discretion of the platform compiler or the specific shader/material.\n\t1: Prefer - Attempt to preserve flow-control.\n\t2: Avoid - Attempt to unroll and flatten flow-control.\n",
        "value": 0.0
    },
    "r.Shaders.KeepDebugInfo": {
        "description": "Whether to keep shader reflection and debug data from shader bytecode, default is to strip.  When using graphical debuggers like Nsight it can be useful to enable this on startup.For some platforms this cvar can be overriden in the Engine.ini, under the [ShaderCompiler] section.",
        "value": 0.0
    },
    "r.Shaders.Optimize": {
        "description": "Whether to optimize shaders.  When using graphical debuggers like Nsight it can be useful to disable this on startup.",
        "value": 1.0
    },
    "r.Shaders.SkipCompression": {
        "description": "Skips shader compression after compiling. Shader compression time can be quite significant when using debug shaders. This CVar is only valid in non-shipping/test builds.",
        "value": 0.0
    },
    "r.Shaders.Validation": {
        "description": "Enabled shader compiler validation warnings and errors.",
        "value": 1.0
    },
    "r.Shaders.ZeroInitialise": {
        "description": "Whether to enforce zero initialise local variables of primitive type in shaders. Defaults to 1 (enabled). Not all shader languages can omit zero initialisation.",
        "value": 1.0
    },
    "r.Shadow.CSM.MaxCascades": {
        "description": "The maximum number of cascades with which to render dynamic directional light shadows.",
        "value": 10.0
    },
    "r.Shadow.CSM.MaxMobileCascades": {
        "description": "The maximum number of cascades with which to render dynamic directional light shadows when using the mobile renderer.",
        "value": 2.0
    },
    "r.Shadow.CSM.TransitionScale": {
        "description": "Allows to scale the cascaded shadow map transition region. Clamped within 0..2.\n0: no transition (fastest)\n1: as specific in the light settings (default)\n2: 2x larger than what was specified in the light",
        "value": 1.0
    },
    "r.Shadow.CSMDepthBias": {
        "description": "Constant depth bias used by CSM",
        "value": 10.0
    },
    "r.Shadow.CSMDepthBoundsTest": {
        "description": "Whether to use depth bounds tests rather than stencil tests for the CSM bounds",
        "value": 1.0
    },
    "r.Shadow.CSMReceiverBias": {
        "description": "Receiver bias used by CSM. Value between 0 and 1.",
        "value": 0.8999999761581421
    },
    "r.Shadow.CSMShadowDistanceFadeoutMultiplier": {
        "description": "Multiplier for the CSM distance fade",
        "value": 1.0
    },
    "r.Shadow.CSMSlopeScaleDepthBias": {
        "description": "Slope scale depth bias used by CSM",
        "value": 3.0
    },
    "r.Shadow.CSMSplitPenumbraScale": {
        "description": "Scale applied to the penumbra size of Cascaded Shadow Map splits, useful for minimizing the transition between splits",
        "value": 0.5
    },
    "r.Shadow.CachePreshadow": {
        "description": "Whether preshadows can be cached as an optimization",
        "value": 1.0
    },
    "r.Shadow.CacheWPOPrimitives": {
        "description": "Whether primitives whose materials use World Position Offset should be considered movable for cached shadowmaps.\nEnablings this gives more correct, but slower whole scene shadows from materials that use WPO.",
        "value": 0.0
    },
    "r.Shadow.CacheWholeSceneShadows": {
        "description": "When enabled, movable point and spot light whole scene shadow depths from static primitives will be cached as an optimization.",
        "value": 1.0
    },
    "r.Shadow.CachedShadowsCastFromMovablePrimitives": {
        "description": "Whether movable primitives should cast a shadow from cached whole scene shadows (movable point and spot lights).\nDisabling this can be used to remove the copy of the cached shadowmap.",
        "value": 1.0
    },
    "r.Shadow.ConservativeBounds": {
        "description": "Whether to use safe and conservative shadow frustum creation that wastes some shadowmap space",
        "value": 0.0
    },
    "r.Shadow.Denoiser": {
        "description": "Choose the denoising algorithm.\n 0: Disabled (default);\n 1: Forces the default denoiser of the renderer;\n 2: GScreenSpaceDenoiser witch may be overriden by a third party plugin.\n",
        "value": 2.0
    },
    "r.Shadow.Denoiser.HistoryConvolutionSamples": {
        "description": "Number of samples to use to convolve the history over time.",
        "value": 1.0
    },
    "r.Shadow.Denoiser.MaxBatchSize": {
        "description": "Maximum number of shadow to denoise at the same time.",
        "value": 4.0
    },
    "r.Shadow.Denoiser.PreConvolution": {
        "description": "Number of pre-convolution passes (default = 1).",
        "value": 1.0
    },
    "r.Shadow.Denoiser.ReconstructionSamples": {
        "description": "Maximum number of samples for the reconstruction pass (default = 16).",
        "value": 8.0
    },
    "r.Shadow.Denoiser.TemporalAccumulation": {
        "description": "",
        "value": 1.0
    },
    "r.Shadow.DistanceScale": {
        "description": "Scalability option to trade shadow distance versus performance for directional lights (clamped within a reasonable range).\n<1: shorter distance\n 1: normal (default)\n>1: larger distance",
        "value": 1.0
    },
    "r.Shadow.DrawPreshadowFrustums": {
        "description": "visualize preshadow frustums when the shadowfrustums show flag is enabled",
        "value": 0.0
    },
    "r.Shadow.EnableModulatedSelfShadow": {
        "description": "Allows modulated shadows to affect the shadow caster. (mobile only)",
        "value": 0.0
    },
    "r.Shadow.FadeExponent": {
        "description": "Controls the rate at which shadows are faded out",
        "value": 0.25
    },
    "r.Shadow.FadeResolution": {
        "description": "Resolution in texels below which shadows are faded out",
        "value": 64.0
    },
    "r.Shadow.FarShadowDistanceOverride": {
        "description": "Overriding far shadow distance for all directional lighst",
        "value": 0.0
    },
    "r.Shadow.FarShadowStaticMeshLODBias": {
        "description": "Notice: only selected geometry types (static meshes and landscapes) respect this value.",
        "value": 0.0
    },
    "r.Shadow.FilterMethod": {
        "description": "Chooses the shadow filtering method.\n 0: Uniform PCF (default)\n 1: PCSS (experimental)\n",
        "value": 0.0
    },
    "r.Shadow.ForceSerialSingleRenderPass": {
        "description": "Force Serial shadow passes to render in 1 pass.",
        "value": 0.0
    },
    "r.Shadow.ForceSingleSampleShadowingFromStationary": {
        "description": "Whether to force all components to act as if they have bSingleSampleShadowFromStationaryLights enabled.  Useful for scalability when dynamic shadows are disabled.",
        "value": 0.0
    },
    "r.Shadow.LightViewConvexHullCull": {
        "description": "Enables culling of shadow casters that do not intersect the convex hull of the light origin and view frustum.",
        "value": 1.0
    },
    "r.Shadow.MaxCSMResolution": {
        "description": "Max square dimensions (in texels) allowed for rendering Cascaded Shadow depths. Range 4 to hardware limit. Higher = better quality shadows but at a performance cost.",
        "value": 2048.0
    },
    "r.Shadow.MaxNumFarShadowCascades": {
        "description": "Max number of far shadow cascades that can be cast from a directional light",
        "value": 10.0
    },
    "r.Shadow.MaxNumPointShadowCacheUpdatesPerFrame": {
        "description": "Maximum number of point light shadow cache updates allowed per frame.Only affect updates caused by resolution change. -1 means no limit.",
        "value": -1.0
    },
    "r.Shadow.MaxNumSpotShadowCacheUpdatesPerFrame": {
        "description": "Maximum number of spot light shadow cache updates allowed per frame.Only affect updates caused by resolution change. -1 means no limit.",
        "value": -1.0
    },
    "r.Shadow.MaxResolution": {
        "description": "Max square dimensions (in texels) allowed for rendering shadow depths. Range 4 to hardware limit. Higher = better quality shadows but at a performance cost.",
        "value": 2048.0
    },
    "r.Shadow.MaxSoftKernelSize": {
        "description": "Mazimum size of the softening kernels in pixels.",
        "value": 40.0
    },
    "r.Shadow.MinDirectionalLightAngleForRTHF": {
        "description": "",
        "value": 27.0
    },
    "r.Shadow.MinPreShadowResolution": {
        "description": "Minimum dimensions (in texels) allowed for rendering preshadow depths",
        "value": 8.0
    },
    "r.Shadow.MinResolution": {
        "description": "Minimum dimensions (in texels) allowed for rendering shadow subject depths",
        "value": 32.0
    },
    "r.Shadow.OcclusionCullCascadedShadowMaps": {
        "description": "Whether to use occlusion culling on cascaded shadow maps.  Disabled by default because rapid view changes reveal new regions too quickly for latent occlusion queries to work with.",
        "value": 0.0
    },
    "r.Shadow.PerObject": {
        "description": "Whether to render per object shadows (character casting on world)\n0: off\n1: on (default)",
        "value": 1.0
    },
    "r.Shadow.PerObjectCastDistanceMin": {
        "description": "Minimum cast distance for Per-Object shadows, i.e., CastDistDance = Max(r.Shadow.PerObjectCastDistanceRadiusScale * object-radius, r.Shadow.PerObjectCastDistanceMin).\n  Default: HALF_WORLD_MAX / 32.0f",
        "value": 32768.0
    },
    "r.Shadow.PerObjectCastDistanceRadiusScale": {
        "description": "PerObjectCastDistanceRadiusScale The scale factor multiplied with the radius of the object to calculate the maximum distance a per-object directional shadow can reach. This will only take effect after a certain (large) radius. Default is 8 times the object radius.",
        "value": 8.0
    },
    "r.Shadow.PerObjectDirectionalDepthBias": {
        "description": "Constant depth bias used by per-object shadows from directional lights\nLower values give better shadow contact, but increase self-shadowing artifacts",
        "value": 10.0
    },
    "r.Shadow.PerObjectDirectionalSlopeDepthBias": {
        "description": "Slope scale depth bias used by per-object shadows from directional lights\nLower values give better shadow contact, but increase self-shadowing artifacts",
        "value": 3.0
    },
    "r.Shadow.PointLightDepthBias": {
        "description": "Depth bias that is applied in the depth pass for shadows from point lights. (0.03 avoids peter paning but has some shadow acne)",
        "value": 0.019999999552965164
    },
    "r.Shadow.PointLightSlopeScaleDepthBias": {
        "description": "Slope scale depth bias that is applied in the depth pass for shadows from point lights",
        "value": 3.0
    },
    "r.Shadow.PreShadowFadeResolution": {
        "description": "Resolution in texels below which preshadows are faded out",
        "value": 16.0
    },
    "r.Shadow.PreShadowResolutionFactor": {
        "description": "Mulitplier for preshadow resolution",
        "value": 1.0
    },
    "r.Shadow.PreshadowExpand": {
        "description": "How much bounds will be expanded when rendering a cached preshadow (0.15 = 15% larger)",
        "value": 0.15000000596046448
    },
    "r.Shadow.Preshadows": {
        "description": "Whether to allow preshadows (static world casting on character)",
        "value": 1.0
    },
    "r.Shadow.PreshadowsForceLowestDetailLevel": {
        "description": "When enabled, static meshes render their lowest detail level into preshadow depth maps.  Disabled by default as it causes artifacts with poor quality LODs (tree billboard).",
        "value": 0.0
    },
    "r.Shadow.RadiusThreshold": {
        "description": "Cull shadow casters if they are too small, value is the minimal screen space bounding sphere radius",
        "value": 0.009999999776482582
    },
    "r.Shadow.RadiusThresholdRSM": {
        "description": "Cull shadow casters in the RSM if they are too small, values is the minimal screen space bounding sphere radius\n(default 0.06)",
        "value": 0.05999999865889549
    },
    "r.Shadow.RecordInteractionShadowPrimitives": {
        "description": "",
        "value": 1.0
    },
    "r.Shadow.RectLightDepthBias": {
        "description": "Depth bias that is applied in the depth pass for shadows from rect lights. (0.03 avoids peter paning but has some shadow acne)",
        "value": 0.02500000037252903
    },
    "r.Shadow.RectLightReceiverBias": {
        "description": "Receiver bias used by rect light. Value between 0 and 1.",
        "value": 0.30000001192092896
    },
    "r.Shadow.RectLightSlopeScaleDepthBias": {
        "description": "Slope scale depth bias that is applied in the depth pass for shadows from rect lights",
        "value": 2.5
    },
    "r.Shadow.ResolutionScaleZeroDisablesSm": {
        "description": "DEPRECATED: If 1 (default) then setting Shadow Resolution Scale to zero disables shadow maps for the light.",
        "value": 1.0
    },
    "r.Shadow.ShadowMaxSlopeScaleDepthBias": {
        "description": "Max Slope depth bias used for shadows for all lights\nHigher values give better self-shadowing, but increase self-shadowing artifacts",
        "value": 1.0
    },
    "r.Shadow.SpotLightDepthBias": {
        "description": "Depth bias that is applied in the depth pass for per object projected shadows from spot lights",
        "value": 3.0
    },
    "r.Shadow.SpotLightReceiverBias": {
        "description": "Receiver bias used by spotlights. Value between 0 and 1.",
        "value": 0.5
    },
    "r.Shadow.SpotLightSlopeDepthBias": {
        "description": "Slope scale depth bias that is applied in the depth pass for per object projected shadows from spot lights",
        "value": 3.0
    },
    "r.Shadow.SpotLightTransitionScale": {
        "description": "Transition scale for spotlights",
        "value": 60.0
    },
    "r.Shadow.StencilOptimization": {
        "description": "Removes stencil clears between shadow projections by zeroing the stencil during testing",
        "value": 1.0
    },
    "r.Shadow.TexelsPerPixel": {
        "description": "The ratio of subject pixels to shadow texels for per-object shadows",
        "value": 1.2732399702072144
    },
    "r.Shadow.TexelsPerPixelPointlight": {
        "description": "The ratio of subject pixels to shadow texels for point lights",
        "value": 1.2732399702072144
    },
    "r.Shadow.TexelsPerPixelRectlight": {
        "description": "The ratio of subject pixels to shadow texels for rect lights",
        "value": 1.2732399702072144
    },
    "r.Shadow.TexelsPerPixelSpotlight": {
        "description": "The ratio of subject pixels to shadow texels for spotlights",
        "value": 2.5464799404144287
    },
    "r.Shadow.TransitionScale": {
        "description": "This controls the 'fade in' region between a caster and where his shadow shows up.  Larger values make a smaller region which will have more self shadowing artifacts",
        "value": 60.0
    },
    "r.Shadow.UnbuiltNumWholeSceneDynamicShadowCascades": {
        "description": "DynamicShadowCascades to use when using CSM to preview unbuilt lighting from a directional light",
        "value": 4.0
    },
    "r.Shadow.UnbuiltPreviewInGame": {
        "description": "Whether to render unbuilt preview shadows in game.  When enabled and lighting is not built, expensive preview shadows will be rendered in game.  When disabled, lighting in game and editor won't match which can appear to be a bug.",
        "value": 1.0
    },
    "r.Shadow.UnbuiltWholeSceneDynamicShadowRadius": {
        "description": "WholeSceneDynamicShadowRadius to use when using CSM to preview unbuilt lighting from a directional light",
        "value": 200000.0
    },
    "r.Shadow.UseOctreeForCulling": {
        "description": "Whether to use the primitive octree for shadow subject culling.  The octree culls large groups of primitives at a time, but introduces cache misses walking the data structure.",
        "value": 1.0
    },
    "r.Shadow.WholeSceneShadowCacheMb": {
        "description": "Amount of memory that can be spent caching whole scene shadows.  ShadowMap allocations in a single frame can cause this to be exceeded.",
        "value": 150.0
    },
    "r.Shadow.WholeSceneShadowUnbuiltInteractionThreshold": {
        "description": "How many unbuilt light-primitive interactions there can be for a light before the light switches to whole scene shadows",
        "value": 500.0
    },
    "r.ShadowQuality": {
        "description": "Defines the shadow method which allows to adjust for quality or performance.\n 0:off, 1:low(unfiltered), 2:low .. 5:max (default)",
        "value": 5.0
    },
    "r.ShowPrecomputedVisibilityCells": {
        "description": "If not zero, draw all precomputed visibility cells.",
        "value": 0.0
    },
    "r.ShowRelevantPrecomputedVisibilityCells": {
        "description": "If not zero, draw relevant precomputed visibility cells only.",
        "value": 0.0
    },
    "r.ShowShaderCompilerWarnings": {
        "description": "When set to 1, will display all warnings.",
        "value": 0.0
    },
    "r.SimpleForwardShading": {
        "description": "Whether to use the simple forward shading base pass shaders which only support lightmaps + stationary directional light + stationary skylight\nAll other lighting features are disabled when true.  This is useful for supporting very low end hardware, and is only supported on PC platforms.\n0:off, 1:on",
        "value": 0.0
    },
    "r.SkeletalMesh.StripMinLodDataDuringCooking": {
        "description": "If set will strip skeletal mesh LODs under the minimum renderable LOD for the target platform during cooking.",
        "value": 0.0
    },
    "r.SkeletalMeshLODBias": {
        "description": "LOD bias for skeletal meshes (does not affect animation editor viewports).",
        "value": 0.0
    },
    "r.SkeletalMeshLODRadiusScale": {
        "description": "Scale factor for the screen radius used in computing discrete LOD for skeletal meshes. (0.25-1)",
        "value": 1.0
    },
    "r.SkinCache.AllowDupedVertsForRecomputeTangents": {
        "description": "0: off (default)\n1: Forces that vertices at the same position will be treated differently and has the potential to cause seams when verts are split.\n",
        "value": 0.0
    },
    "r.SkinCache.BlendUsingVertexColorForRecomputeTangents": {
        "description": "0: off (default)\n1: No blending, choose between source and recompute tangents.\n2: Linear interpolation between source and recompute tangents.\n3: Vector slerp between source and recompute tangents.\n4: Convert tangents into quaternion, apply slerp, then convert from quaternion back to tangents (most expensive).\n",
        "value": 0.0
    },
    "r.SkinCache.CompileShaders": {
        "description": "Whether or not to compile the GPU compute skinning cache shaders.\nThis will compile the shaders for skinning on a compute job and not skin on the vertex shader.\nGPUSkinVertexFactory.usf needs to be touched to cause a recompile if this changes.\n0 is off(default), 1 is on",
        "value": 0.0
    },
    "r.SkinCache.Debug": {
        "description": "A scaling constant passed to the SkinCache shader, useful for debugging",
        "value": 1.0
    },
    "r.SkinCache.DefaultBehavior": {
        "description": "Default behavior if all skeletal meshes are included/excluded from the skin cache. If Ray Tracing is enabled, will imply Inclusive.\n Exclusive ( 0): All skeletal meshes are excluded from the skin cache. Each must opt in individually.\n Inclusive ( 1): All skeletal meshes are included into the skin cache. Each must opt out individually. (default)",
        "value": 1.0
    },
    "r.SkinCache.ForceRecomputeTangents": {
        "description": "0: off (default)\n1: Forces enabling and using the skincache and forces all skinned object to Recompute Tangents\n",
        "value": 0.0
    },
    "r.SkinCache.MemoryLimitForBatchedRayTracingGeometryUpdates": {
        "description": "",
        "value": 512.0
    },
    "r.SkinCache.Mode": {
        "description": "Whether or not to use the GPU compute skinning cache.\nThis will perform skinning on a compute job and not skin on the vertex shader.\nRequires r.SkinCache.CompileShaders=1\n 0: off\n 1: on(default)\n 2: only use skin cache for skinned meshes that ticked the Recompute Tangents checkbox (unavailable in shipping builds)",
        "value": 1.0
    },
    "r.SkinCache.NumTangentIntermediateBuffers": {
        "description": "How many intermediate buffers to use for intermediate results while\ndoing Recompute Tangents; more may allow the GPU to overlap compute jobs.",
        "value": 1.0
    },
    "r.SkinCache.RecomputeTangents": {
        "description": "This option enables recomputing the vertex tangents on the GPU.\nCan be changed at runtime, requires both r.SkinCache.CompileShaders=1 and r.SkinCache.Mode=1\n 0: off\n 1: on, forces all skinned object to Recompute Tangents\n 2: on, only recompute tangents on skinned objects who ticked the Recompute Tangents checkbox(default)\n",
        "value": 2.0
    },
    "r.SkinCache.SceneMemoryLimitInMB": {
        "description": "Maximum memory allowed to be allocated per World/Scene in Megs",
        "value": 128.0
    },
    "r.SkyAtmosphere": {
        "description": "SkyAtmosphere components are rendered when this is not 0, otherwise ignored.\n",
        "value": 1.0
    },
    "r.SkyAtmosphere.AerialPerspective.DepthTest": {
        "description": "When enabled, a depth test will be used to not write pixel closer to the camera than StartDepth, effectively improving performance.",
        "value": 1.0
    },
    "r.SkyAtmosphere.AerialPerspectiveLUT.Depth": {
        "description": "The length of the LUT in kilometers (default = 96km to get nice cloud/atmosphere interactions in the distance for default sky). Further than this distance, the last slice is used.",
        "value": 96.0
    },
    "r.SkyAtmosphere.AerialPerspectiveLUT.DepthResolution": {
        "description": "The number of depth slice to use for the aerial perspective volume texture.",
        "value": 16.0
    },
    "r.SkyAtmosphere.AerialPerspectiveLUT.FastApplyOnOpaque": {
        "description": "When enabled, the low resolution camera frustum/froxel volume containing atmospheric fog\n, usually used for fog on translucent surface, is used to render fog on opaque.\nIt is faster but can result in visual artefacts if there are some high frequency details\nsuch as earth shadow or scattering lob.",
        "value": 1.0
    },
    "r.SkyAtmosphere.AerialPerspectiveLUT.SampleCountMaxPerSlice": {
        "description": "The sample count used per slice to evaluate aerial perspective. The effective sample count is usually lower and depends on SampleCountScale on the component as well as .ini files.\nscattering and transmittance in camera frustum space froxel.\n",
        "value": 4.0
    },
    "r.SkyAtmosphere.AerialPerspectiveLUT.Width": {
        "description": "",
        "value": 32.0
    },
    "r.SkyAtmosphere.DistanceToSampleCountMax": {
        "description": "The distance in kilometer after which SampleCountMax samples will be used to ray march the atmosphere.",
        "value": 150.0
    },
    "r.SkyAtmosphere.DistantSkyLightLUT": {
        "description": "Enable the generation the sky ambient lighting value.\n",
        "value": 1.0
    },
    "r.SkyAtmosphere.DistantSkyLightLUT.Altitude": {
        "description": "The altitude at which the sky samples are taken to integrate the sky lighting. Default to 6km, typicaly cirrus clouds altitude.\n",
        "value": 6.0
    },
    "r.SkyAtmosphere.FastSkyLUT": {
        "description": "When enabled, a look up texture is used to render the sky.\nIt is faster but can result in visual artefacts if there are some high frequency details\nin the sky such as earth shadow or scattering lob.",
        "value": 1.0
    },
    "r.SkyAtmosphere.FastSkyLUT.DistanceToSampleCountMax": {
        "description": "Fast sky distance in kilometer after which at which SampleCountMax samples will be used to ray march the atmosphere.",
        "value": 150.0
    },
    "r.SkyAtmosphere.FastSkyLUT.Height": {
        "description": "",
        "value": 104.0
    },
    "r.SkyAtmosphere.FastSkyLUT.SampleCountMax": {
        "description": "Fast sky maximum sample count used to compute sky/atmosphere scattering and transmittance.\nThe maximum sample count used to compute FastSkyLUT scattering. The effective sample count is usually lower and depends on distance and SampleCountScale on the component, as well as .ini files.\nThe minimal value will be clamped to r.SkyAtmosphere.FastSkyLUT.SampleCountMin + 1.\n",
        "value": 128.0
    },
    "r.SkyAtmosphere.FastSkyLUT.SampleCountMin": {
        "description": "Fast sky minimum sample count used to compute sky/atmosphere scattering and transmittance.\nThe minimal value will be clamped to 1.\n",
        "value": 4.0
    },
    "r.SkyAtmosphere.FastSkyLUT.Width": {
        "description": "",
        "value": 192.0
    },
    "r.SkyAtmosphere.LUT32": {
        "description": "Use full 32bit per-channel precision for all sky LUTs.\n",
        "value": 0.0
    },
    "r.SkyAtmosphere.MultiScatteringLUT.Height": {
        "description": "",
        "value": 32.0
    },
    "r.SkyAtmosphere.MultiScatteringLUT.HighQuality": {
        "description": "The when enabled, 64 samples are used instead of 2, resulting in a more accurate multi scattering approximation (but also more expenssive).\n",
        "value": 0.0
    },
    "r.SkyAtmosphere.MultiScatteringLUT.SampleCount": {
        "description": "The sample count used to evaluate multi-scattering.\n",
        "value": 15.0
    },
    "r.SkyAtmosphere.MultiScatteringLUT.Width": {
        "description": "",
        "value": 32.0
    },
    "r.SkyAtmosphere.SampleCountMax": {
        "description": "The maximum sample count used to compute sky/atmosphere scattering and transmittance The effective sample count is usually lower and depends on distance and SampleCountScale on the component, as well as .ini files.\nThe minimal value will be clamped to r.SkyAtmosphere.SampleCountMin + 1.\n",
        "value": 128.0
    },
    "r.SkyAtmosphere.SampleCountMin": {
        "description": "The minimum sample count used to compute sky/atmosphere scattering and transmittance.\nThe minimal value will be clamped to 1.\n",
        "value": 4.0
    },
    "r.SkyAtmosphere.SampleLightShadowmap": {
        "description": "Enable the sampling of atmospheric lights shadow map in order to produce volumetric shadows.",
        "value": 1.0
    },
    "r.SkyAtmosphere.TransmittanceLUT.Height": {
        "description": "",
        "value": 64.0
    },
    "r.SkyAtmosphere.TransmittanceLUT.SampleCount": {
        "description": "The sample count used to evaluate transmittance.",
        "value": 10.0
    },
    "r.SkyAtmosphere.TransmittanceLUT.UseSmallFormat": {
        "description": "If true, the transmittance LUT will use a small R8BG8B8A8 format to store data at lower quality.",
        "value": 0.0
    },
    "r.SkyAtmosphere.TransmittanceLUT.Width": {
        "description": "",
        "value": 256.0
    },
    "r.SkyLight.RealTimeReflectionCapture": {
        "description": "Make sure the sky light real time capture is not run on platform where it is considered out of budget. Cannot be changed at runtime.",
        "value": 1.0
    },
    "r.SkyLight.RealTimeReflectionCapture.DepthBuffer": {
        "description": "When enabled, the real-time sky light capture will have a depth buffer, this is for multiple meshes to be cover each other correctly. The height fog wil lalso be applied according to the depth buffer.",
        "value": 1.0
    },
    "r.SkyLight.RealTimeReflectionCapture.ShadowFromOpaque": {
        "description": "Opaque meshes cast shadow from directional lights onto sky and clouds when enabled.\n",
        "value": 0.0
    },
    "r.SkyLight.RealTimeReflectionCapture.TimeSlice": {
        "description": "When enabled, the real-time sky light capture and convolutions will by distributed over several frames to lower the per-frame cost.",
        "value": 1.0
    },
    "r.SkyLightingQuality": {
        "description": "Defines the sky lighting quality which allows to adjust for performance.\n<=0: off (fastest)\n  1: on\n",
        "value": 1.0
    },
    "r.SkySpecularOcclusionStrength": {
        "description": "Strength of skylight specular occlusion from DFAO (default is 1.0)",
        "value": 1.0
    },
    "r.SkylightIntensityMultiplier": {
        "description": "Intensity scale on Stationary and Movable skylights.  This is useful to control overall lighting contrast in dynamically lit games with scalability levels which disable Ambient Occlusion.  For example, if medium quality disables SSAO and DFAO, reduce skylight intensity.",
        "value": 1.0
    },
    "r.SkylightRecapture": {
        "command": true,
        "description": "Updates all stationary and movable skylights, useful for debugging the capture pipeline"
    },
    "r.SkylightUpdateEveryFrame": {
        "description": "Whether to update all skylights every frame.  Useful for debugging.",
        "value": 0.0
    },
    "r.SplineMesh.NoRecreateProxy": {
        "description": "Optimization. If true, spline mesh proxies will not be recreated every time they are changed. They are simply updated.",
        "value": 1.0
    },
    "r.StaticMesh.StripDistanceFieldDataDuringLoad": {
        "description": "If non-zero, data for distance fields will be discarded on load. TODO: change to discard during cook!.",
        "value": 0.0
    },
    "r.StaticMesh.StripMinLodDataDuringCooking": {
        "description": "If non-zero, data for Static Mesh LOD levels below MinLOD will be discarded at cook time",
        "value": 0.0
    },
    "r.StaticMeshLODDistanceScale": {
        "description": "Scale factor for the distance used in computing discrete LOD for static meshes. (defaults to 1)\n(higher values make LODs transition earlier, e.g., 2 is twice as fast / half the distance)",
        "value": 1.0
    },
    "r.StencilForLODDither": {
        "description": "Whether to use stencil tests in the prepass, and depth-equal tests in the base pass to implement LOD dithering.\nIf disabled, LOD dithering will be done through clip() instructions in the prepass and base pass, which disables EarlyZ.\nForces a full prepass when enabled.",
        "value": 0.0
    },
    "r.StencilLODMode": {
        "description": "Specifies the dither LOD stencil mode.\n 0: Graphics pass.\n 1: Compute pass (on supported platforms).\n 2: Compute async pass (on supported platforms).",
        "value": 2.0
    },
    "r.StereoEmulationFOV": {
        "description": "FOV in degrees, of the imaginable HMD for stereo emulation",
        "value": 0.0
    },
    "r.StereoEmulationHeight": {
        "description": "Height of the imaginable HMD for stereo emulation",
        "value": 0.0
    },
    "r.StereoEmulationNumViews": {
        "description": "Number of views, of the imaginable HMD for stereo emulation",
        "value": 0.0
    },
    "r.StereoEmulationWidth": {
        "description": "Width of the imaginable HMD for stereo emulation",
        "value": 0.0
    },
    "r.Streaming.AllowFastForceResident": {
        "description": "Whether it is allowed to load in missing mips for fast-force-resident assets ASAP. Useful to accelerate force-resident process but risks disturbing streaming metric calculation. Fast-force-resident mips can't be sacrificed even when overbudget so use with caution.",
        "value": 0.0
    },
    "r.Streaming.AmortizeCPUToGPUCopy": {
        "description": "If set and r.Streaming.MaxNumTexturesToStreamPerFrame > 0, limit the number of 2D textures streamed from CPU memory to GPU memory each frame",
        "value": 0.0
    },
    "r.Streaming.Boost": {
        "description": "=1.0: normal\n<1.0: decrease wanted mip levels\n>1.0: increase wanted mip levels",
        "value": 1.0
    },
    "r.Streaming.CheckBuildStatus": {
        "description": "If non-zero, the engine will check whether texture streaming needs rebuild.",
        "value": 0.0
    },
    "r.Streaming.DefragDynamicBounds": {
        "description": "If non-zero, unused dynamic bounds will be removed from the update loop",
        "value": 1.0
    },
    "r.Streaming.DropMips": {
        "description": "0: Drop No Mips \n1: Drop Cached Mips\n2: Drop Cached and Hidden Mips",
        "value": 0.0
    },
    "r.Streaming.FlushTimeOut": {
        "description": "Time before we timeout when flushing streaming (default=3)",
        "value": 3.0
    },
    "r.Streaming.FramesForFullUpdate": {
        "description": "Texture streaming is time sliced per frame. This values gives the number of frames to visit all textures.",
        "value": 5.0
    },
    "r.Streaming.FullyLoadUsedTextures": {
        "description": "If non-zero, all used texture will be fully streamed in as fast as possible",
        "value": 0.0
    },
    "r.Streaming.HLODStrategy": {
        "description": "Define the HLOD streaming strategy.\n0: stream\n1: stream only mip 0\n2: disable streaming",
        "value": 0.0
    },
    "r.Streaming.HiddenPrimitiveScale": {
        "description": "Define the resolution scale to apply when not in range.\n.5: drop one mip\n1: ignore visiblity",
        "value": 0.5
    },
    "r.Streaming.LimitPoolSizeToVRAM": {
        "description": "If non-zero, texture pool size with be limited to how much GPU mem is available.",
        "value": 0.0
    },
    "r.Streaming.MaxEffectiveScreenSize": {
        "description": "0: Use current actual vertical screen size\n> 0: Clamp wanted mip size calculation to this value for the vertical screen size component.",
        "value": 0.0
    },
    "r.Streaming.MaxHiddenPrimitiveViewBoost": {
        "description": "Maximum view boost that can affect hidden primitive.\nThis prevents temporary small FOV from streaming all textures to their highest mips.",
        "value": 1.5
    },
    "r.Streaming.MaxNumTexturesToStreamPerFrame": {
        "description": "Maximum number of 2D textures allowed to stream from CPU memory to GPU memory each frame. <= 0 means no limit. This has no effect if r.Streaming.AmortizeCPUToGPUCopy is not set",
        "value": 0.0
    },
    "r.Streaming.MaxReferenceChecksBeforeStreamOut": {
        "description": "Number of times the engine wait for references to be released before forcing streamout. (default=2)",
        "value": 2.0
    },
    "r.Streaming.MaxTempMemoryAllowed": {
        "description": "Maximum temporary memory used when streaming in or out texture mips.\nThis memory contains mips used for the new updated texture.\nThe value must be high enough to not be a limiting streaming speed factor.\n",
        "value": 50.0
    },
    "r.Streaming.MaxTextureUVDensity": {
        "description": "If non-zero, the max UV density a static entry can have.\nUsed to improve level culling from MinLevelTextureScreenSize.\nComponent with bigger entries become handled as dynamic component.\n",
        "value": 0.0
    },
    "r.Streaming.MinBoost": {
        "description": "Minimum clamp for r.Streaming.Boost",
        "value": 0.0
    },
    "r.Streaming.MinLevelRenderAssetScreenSize": {
        "description": "If non-zero, levels only get handled if any of their referenced texture could be required of this size. Using conservative metrics on the level data.",
        "value": 100.0
    },
    "r.Streaming.MinMipForSplitRequest": {
        "description": "If non-zero, the minimum hidden mip for which load requests will first load the visible mip",
        "value": 10.0
    },
    "r.Streaming.MipBias": {
        "description": "0..x reduce texture quality for streaming by a floating point number.\n0: use full resolution (default)\n1: drop one mip\n2: drop two mips",
        "value": 0.0
    },
    "r.Streaming.MipCalculationEnablePerLevelList": {
        "description": "If non-zero, Mip size computation for streamed texture will use levels referenced with it (instead of iterating thorugh every levels).\n",
        "value": 1.0
    },
    "r.Streaming.NumStaticComponentsProcessedPerFrame": {
        "description": "If non-zero, the engine will incrementaly inserting levels by processing this amount of components per frame before they become visible",
        "value": 50.0
    },
    "r.Streaming.OverlapAssetAndLevelTicks": {
        "description": "Ticks render asset streaming info on a high priority task thread while ticking levels on GT",
        "value": 0.0
    },
    "r.Streaming.PerTextureBiasViewBoostThreshold": {
        "description": "Maximum view boost at which per texture bias will be increased.\nThis prevents temporary small FOV from downgrading permanentely texture quality.",
        "value": 1.5
    },
    "r.Streaming.PoolSize": {
        "description": "-1: Default texture pool size, otherwise the size in MB",
        "value": 1000.0
    },
    "r.Streaming.PoolSize.VRAMPercentageClamp": {
        "description": "When using PoolSizeVRAMPercentage, a maximum amout of memory to reserve in MB.\nThis avoids reserving too much space for systems with a lot of VRAM. (default=1024)",
        "value": 1024.0
    },
    "r.Streaming.PoolSizeForMeshes": {
        "description": "< 0: Mesh and texture share the same pool, otherwise the size of pool dedicated to meshes.",
        "value": -1.0
    },
    "r.Streaming.PrioritizeMeshLODRetention": {
        "description": "Whether to prioritize retaining mesh LODs",
        "value": 1.0
    },
    "r.Streaming.StressTest": {
        "description": "Set to non zero to stress test the streaming update.\nNegative values also slow down the IO.\n",
        "value": 0.0
    },
    "r.Streaming.StressTest.ExtaIOLatency": {
        "description": "An extra latency in milliseconds for each stream-in requests when doing the stress test.",
        "value": 10.0
    },
    "r.Streaming.StressTest.ExtraAsyncLatency": {
        "description": "An extra latency in milliseconds for each async task when doing the stress test.",
        "value": 0.0
    },
    "r.Streaming.StressTest.FramesForFullUpdate": {
        "description": "Num frames to update texture states when doing the stress tests.",
        "value": 1.0
    },
    "r.Streaming.UseAllMips": {
        "description": "If non-zero, all available mips will be used",
        "value": 0.0
    },
    "r.Streaming.UseBackgroundThreadPool": {
        "description": "If true, use the background thread pool for mip calculations.",
        "value": 1.0
    },
    "r.Streaming.UseFixedPoolSize": {
        "description": "If non-zero, do not allow the pool size to change at run time.",
        "value": 0.0
    },
    "r.Streaming.UseGenericStreamingPath": {
        "description": "Control when to use the mip data provider implementation: (default=0)\n0 to use it when there is a custom asset override.\n1 to always use it.\n2 to never use it.",
        "value": 0.0
    },
    "r.Streaming.UseMaterialData": {
        "description": "If non-zero, material texture scales and coord will be used",
        "value": 1.0
    },
    "r.Streaming.UseNewMetrics": {
        "description": "If non-zero, will use improved set of metrics and heuristics.",
        "value": 1.0
    },
    "r.Streaming.UsePerTextureBias": {
        "description": "If non-zero, each texture will be assigned a mip bias between 0 and MipBias as required to fit in budget.",
        "value": 1.0
    },
    "r.SubsurfaceScattering": {
        "description": " 0: disabled\n 1: enabled (default)",
        "value": 1.0
    },
    "r.SupportAllShaderPermutations": {
        "description": "Local user config override to force all shader permutation features on.",
        "value": 0.0
    },
    "r.SupportAnisotropicMaterials": {
        "description": "If true, allow use of anisotropic materials.",
        "value": 1.0
    },
    "r.SupportAtmosphericFog": {
        "description": "Enables AtmosphericFog shader permutations.",
        "value": 1.0
    },
    "r.SupportDepthOnlyIndexBuffers": {
        "description": "Enables depth-only index buffers. Saves a little time at the expense of doubling the size of index buffers.",
        "value": 1.0
    },
    "r.SupportLowQualityLightmaps": {
        "description": "Support low quality lightmap shader permutations",
        "value": 1.0
    },
    "r.SupportPointLightWholeSceneShadows": {
        "description": "Enables shadowcasting point lights.",
        "value": 1.0
    },
    "r.SupportReversedIndexBuffers": {
        "description": "Enables reversed index buffers. Saves a little time at the expense of doubling the size of index buffers.",
        "value": 1.0
    },
    "r.SupportSimpleForwardShading": {
        "description": "Whether to compile the shaders to support r.SimpleForwardShading being enabled (PC only).",
        "value": 0.0
    },
    "r.SupportSkyAtmosphere": {
        "description": "Enables SkyAtmosphere rendering and shader code.",
        "value": 1.0
    },
    "r.SupportSkyAtmosphereAffectsHeightFog": {
        "description": "Enables SkyAtmosphere affecting height fog. It requires r.SupportSkyAtmosphere to be true.",
        "value": 0.0
    },
    "r.SupportStationarySkylight": {
        "description": "Enables Stationary and Dynamic Skylight shader permutations.",
        "value": 1.0
    },
    "r.TemporalAA.Algorithm": {
        "description": "Algorithm to use for Temporal AA\n 0: Gen 4 TAAU (default)\n 1: Gen 5 TAAU (experimental)",
        "value": 0.0
    },
    "r.TemporalAA.AllowDownsampling": {
        "description": "Allows half-resolution color buffer to be produced during TAA. Only possible when motion blur is off and when using compute shaders for post processing.",
        "value": 1.0
    },
    "r.TemporalAA.HistoryScreenPercentage": {
        "description": "Size of temporal AA's history.",
        "value": 100.0
    },
    "r.TemporalAA.R11G11B10History": {
        "description": "Select the bitdepth of the history.",
        "value": 0.0
    },
    "r.TemporalAA.Upsampling": {
        "description": "Whether to do primary screen percentage with temporal AA or not.\n 0: use spatial upscale pass independently of TAA (default);\n 1: TemporalAA performs spatial and temporal upscale as screen percentage method.",
        "value": 0.0
    },
    "r.TemporalAA.Upscaler": {
        "description": "Choose the upscaling algorithm.\n 0: Forces the default temporal upscaler of the renderer;\n 1: GTemporalUpscaler which may be overridden by a third party plugin (default).",
        "value": 1.0
    },
    "r.TemporalAACatmullRom": {
        "description": "Whether to use a Catmull-Rom filter kernel. Should be a bit sharper than Gaussian.",
        "value": 0.0
    },
    "r.TemporalAACurrentFrameWeight": {
        "description": "Weight of current frame's contribution to the history.  Low values cause blurriness and ghosting, high values fail to hide jittering.",
        "value": 0.03999999910593033
    },
    "r.TemporalAAFilterSize": {
        "description": "Size of the filter kernel. (1.0 = smoother, 0.0 = sharper but aliased).",
        "value": 1.0
    },
    "r.TemporalAAPauseCorrect": {
        "description": "Correct temporal AA in pause. This holds onto render targets longer preventing reuse and consumes more memory.",
        "value": 1.0
    },
    "r.TemporalAASamples": {
        "description": "Number of jittered positions for temporal AA (4, 8=default, 16, 32, 64).",
        "value": 8.0
    },
    "r.TemporalAAUpsampleFiltered": {
        "description": "Use filtering to fetch color history during TamporalAA upsampling (see AA_FILTERED define in TAA shader). Disabling this makes TAAU faster, but lower quality. ",
        "value": 1.0
    },
    "r.TessellationAdaptivePixelsPerTriangle": {
        "description": "Global tessellation factor multiplier",
        "value": 48.0
    },
    "r.TexelDebugging": {
        "description": "Whether T + Left mouse click in the editor selects lightmap texels for debugging Lightmass.  Lightmass must be recompiled with ALLOW_LIGHTMAP_SAMPLE_DEBUGGING enabled for this to work.",
        "value": 0.0
    },
    "r.TextureStreaming": {
        "description": "Allows to define if texture streaming is enabled, can be changed at run time.\n0: off\n1: on (default)",
        "value": 1.0
    },
    "r.TiledDeferredShading": {
        "description": "Whether to use tiled deferred shading.  0 is off, 1 is on (default)",
        "value": 1.0
    },
    "r.TiledDeferredShading.MinimumCount": {
        "description": "Number of applicable lights that must be on screen before switching to tiled deferred.\n0 means all lights that qualify (e.g. no shadows, ...) are rendered tiled deferred. Default: 80",
        "value": 80.0
    },
    "r.TogglePreCulledIndexBuffers": {
        "command": true,
        "description": "Toggles use of preculled index buffers from the command 'PreCullIndexBuffers'"
    },
    "r.Tonemapper.GrainQuantization": {
        "description": "0: low (minor performance benefit)\n1: high (default, with high frequency pixel pattern to fight 8 bit color quantization)",
        "value": 1.0
    },
    "r.Tonemapper.Quality": {
        "description": "Defines the Tonemapper Quality in the range 0..5\nDepending on the used settings we might pick a faster shader permutation\n 0: basic tonemapper only, lowest quality\n 1: + FilmContrast\n 2: + Vignette\n 3: + FilmShadowTintAmount\n 4: + Grain\n 5: + GrainJitter = full quality (default)",
        "value": 5.0
    },
    "r.Tonemapper.Sharpen": {
        "description": "Sharpening in the tonemapper (not for mobile), actual implementation is work in progress, clamped at 10\n   0: off(default)\n 0.5: half strength\n   1: full strength",
        "value": 0.0
    },
    "r.TonemapperFilm": {
        "description": "Use new film tone mapper",
        "value": 1.0
    },
    "r.TonemapperGamma": {
        "description": "0: Default behavior\n#: Use fixed gamma # instead of sRGB or Rec709 transform",
        "value": 0.0
    },
    "r.TransientResourceAliasing.Buffers": {
        "description": "Enables transient resource aliasing for specified buffers. Used only if GSupportsTransientResourceAliasing is true.\n",
        "value": 1.0
    },
    "r.TranslucencyLightingVolumeDim": {
        "description": "Dimensions of the volume textures used for translucency lighting.  Larger textures result in higher resolution but lower performance.",
        "value": 64.0
    },
    "r.TranslucencyLightingVolumeInnerDistance": {
        "description": "Distance from the camera that the first volume cascade should end",
        "value": 1500.0
    },
    "r.TranslucencyLightingVolumeOuterDistance": {
        "description": "Distance from the camera that the second volume cascade should end",
        "value": 5000.0
    },
    "r.TranslucencyVolumeBlur": {
        "description": "Whether to blur the translucent lighting volumes.\n0:off, otherwise on, default is 1",
        "value": 1.0
    },
    "r.TranslucentLightingVolume": {
        "description": "Whether to allow updating the translucent lighting volumes.\n0:off, otherwise on, default is 1",
        "value": 1.0
    },
    "r.TranslucentSortPolicy": {
        "description": "0: Sort based on distance from camera centerpoint to bounding sphere centerpoint. (default, best for 3D games)\n1: Sort based on projected distance to camera.2: Sort based on the projection onto a fixed axis. (best for 2D games)",
        "value": 0.0
    },
    "r.TranslucentVolumeFOVSnapFactor": {
        "description": "FOV will be snapped to a factor of this before computing volume bounds.",
        "value": 10.0
    },
    "r.TranslucentVolumeMinFOV": {
        "description": "Minimum FOV for translucent lighting volume.  Prevents popping in lighting when zooming in.",
        "value": 45.0
    },
    "r.UITextureLODBias": {
        "description": "Extra LOD bias to apply to UI textures. (default=0)",
        "value": 0.0
    },
    "r.UnbindResourcesBetweenDrawsInDX11": {
        "description": "Unbind resources between material changes in DX11.",
        "value": 0.0
    },
    "r.UniformBufferPooling": {
        "description": "If we pool object in RHICreateUniformBuffer to have less real API calls to create buffers\n 0: off (for debugging)\n 1: on (optimization)",
        "value": 1.0
    },
    "r.Upscale.Panini.D": {
        "description": "Allow and configure to apply a panini distortion to the rendered image. Values between 0 and 1 allow to fade the effect (lerp).\nImplementation from research paper \"Pannini: A New Projection for Rendering Wide Angle Perspective Images\"\n 0: off (default)\n>0: enabled (requires an extra post processing pass if upsampling wasn't used - see r.ScreenPercentage)\n 1: Panini cylindrical stereographic projection",
        "value": 0.0
    },
    "r.Upscale.Panini.S": {
        "description": "Panini projection's hard vertical compression factor.\n 0: no vertical compression factor (default)\n 1: Hard vertical compression",
        "value": 0.0
    },
    "r.Upscale.Panini.ScreenFit": {
        "description": "Panini projection screen fit effect factor (lerp).\n 0: fit vertically\n 1: fit horizontally (default)",
        "value": 1.0
    },
    "r.Upscale.Quality": {
        "description": "Defines the quality in which ScreenPercentage and WindowedFullscreen scales the 3d rendering.\n 0: Nearest filtering\n 1: Simple Bilinear\n 2: Directional blur with unsharp mask upsample.\n 3: 5-tap Catmull-Rom bicubic, approximating Lanczos 2. (default)\n 4: 13-tap Lanczos 3.\n 5: 36-tap Gaussian-filtered unsharp mask (very expensive, but good for extreme upsampling).\n",
        "value": 3.0
    },
    "r.Upscale.Softness": {
        "description": "Amount of sharpening for Gaussian Unsharp filter (r.UpscaleQuality=5). Reduce if ringing is visible\n  1: Normal sharpening (default)\n  0: No sharpening (pure Gaussian).",
        "value": 1.0
    },
    "r.UseClusteredDeferredShading": {
        "description": "Toggle use of clustered deferred shading for lights that support it. 0 is off (default), 1 is on (also required is SM5 to actually turn on).",
        "value": 0.0
    },
    "r.UseFastIntersect": {
        "description": "Use optimized 8 plane fast intersection code if we have 8 permuted planes.",
        "value": 1.0
    },
    "r.UseLegacyMaintainYFOVViewMatrix": {
        "description": "Whether to use the old way to compute perspective view matrices when the aspect ratio constraint is vertical",
        "value": 1.961817850054744e-44
    },
    "r.UseParallelGetDynamicMeshElementsTasks": {
        "description": "If > 0, and if FApp::ShouldUseThreadingForPerformance(), then parts of GetDynamicMeshElements will be done in parallel.",
        "value": 0.0
    },
    "r.UsePreExposure": {
        "description": "0 to disable pre-exposure, 1 to enable it (default).\nPre-exposure allows the engine to apply the last frame exposure to luminance values before writing them in rendertargets.\nIt avoids rendertarget overflow when using low precision formats like fp16.\nThe pre-exposure value can be overriden through r.EyeAdaptation.PreExposureOverride\n",
        "value": 1.0
    },
    "r.VSync": {
        "description": "0: VSync is disabled.(default)\n1: VSync is enabled.",
        "value": 0.0
    },
    "r.VT.AVT.AgeToFree": {
        "description": "Number of frames for an allocation to be unused before it is considered for free",
        "value": 300.0
    },
    "r.VT.AVT.LevelIncrement": {
        "description": "Number of levels to increment each time we grow an allocated virtual texture",
        "value": 3.0
    },
    "r.VT.AVT.MaxAllocPerFrame": {
        "description": "Max number of allocated VT for adaptive VT to alloc per frame",
        "value": 1.0
    },
    "r.VT.AVT.MaxFreePerFrame": {
        "description": "Max number of allocated VT for adaptive VT to free per frame",
        "value": 1.0
    },
    "r.VT.AVT.MaxPageResidency": {
        "description": "Percentage of page table to allocate before we start freeing to make space",
        "value": 75.0
    },
    "r.VT.Borders": {
        "description": "If > 0, debug borders will enabled\n",
        "value": 0.0
    },
    "r.VT.CodecAgeThreshold": {
        "description": "Mininum number of frames VT codec must be unused before possibly being retired",
        "value": 120.0
    },
    "r.VT.CodecNumThreshold": {
        "description": "Once number of VT codecs exceeds this number, attempt to retire codecs that haven't been recently used",
        "value": 100.0
    },
    "r.VT.Dump": {
        "command": true,
        "description": "Lot a whole lot of info on the VT system state."
    },
    "r.VT.EnableCompressCrunch": {
        "description": "Enable Crunch compression for virtual textures, for supported formats",
        "value": 0.0
    },
    "r.VT.EnableCompressZlib": {
        "description": "Enables Zlib compression for virtual textures, if no compression is enabled/supported",
        "value": 1.0
    },
    "r.VT.EnableFeedBack": {
        "description": "process readback buffer? dev option.",
        "value": 1.0
    },
    "r.VT.EnableLossyCompressLightmaps": {
        "description": "Enables lossy compression on virtual texture lightmaps. Lossy compression tends to have lower quality on lightmap textures, vs regular color textures.",
        "value": 0.0
    },
    "r.VT.EvictFileCache": {
        "command": true,
        "description": "Evict all the file caches in the VT system."
    },
    "r.VT.Flush": {
        "command": true,
        "description": "Flush all the physical caches in the VT system."
    },
    "r.VT.FlushAndEvictFileCache": {
        "command": true,
        "description": "Flush both the virtual texture physcial page cache and disk file cache"
    },
    "r.VT.ForceContinuousUpdate": {
        "description": "Force continuous update on all virtual textures.",
        "value": 0.0
    },
    "r.VT.IOPriority_HighPagePri": {
        "description": "Priority of high priority VT I/O requests",
        "value": 2.0
    },
    "r.VT.IOPriority_NormalPagePri": {
        "description": "Priority of default priority VT I/O requests",
        "value": 1.0
    },
    "r.VT.ListPhysicalPools": {
        "command": true,
        "description": "Lot a whole lot of info on the VT system state."
    },
    "r.VT.MaskedPageTableUpdates": {
        "description": "Masks the page table update quads to reduce pixel fill costs",
        "value": 1.0
    },
    "r.VT.MaxAnisotropy": {
        "description": "MaxAnisotropy setting for Virtual Texture sampling.",
        "value": 8.0
    },
    "r.VT.MaxContinuousUpdatesPerFrame": {
        "description": "Max number of page uploads for pages that are already mapped.",
        "value": 1.0
    },
    "r.VT.MaxUploadsPerFrame": {
        "description": "Max number of page uploads per frame in game",
        "value": 8.0
    },
    "r.VT.NumFeedbackTasks": {
        "description": "Number of tasks to create to read virtual texture feedback.",
        "value": 1.0
    },
    "r.VT.NumGatherTasks": {
        "description": "Number of tasks to create to combine virtual texture feedback.",
        "value": 1.0
    },
    "r.VT.NumTranscodeRequests": {
        "description": "Number of transcode request that can be in flight. default 32\n",
        "value": 32.0
    },
    "r.VT.PageUpdateFlushCount": {
        "description": "Number of page updates to buffer before attempting to flush by taking a lock.",
        "value": 8.0
    },
    "r.VT.ParallelFeedbackTasks": {
        "description": "Use worker threads for virtual texture feedback tasks.",
        "value": 0.0
    },
    "r.VT.PoolSizeScale": {
        "description": "Scale factor for virtual texture physical pool size.\n Group 0",
        "value": 1.0
    },
    "r.VT.PoolSizeScale.Group0": {
        "description": "Scale factor for virtual texture physical pool size.\n Group 0",
        "value": 1.0
    },
    "r.VT.PoolSizeScale.Group1": {
        "description": "Scale factor for virtual texture physical pool sizes.\n Group 1",
        "value": 1.0
    },
    "r.VT.PoolSizeScale.Group2": {
        "description": "Scale factor for virtual texture physical pool sizes.\n Group 2",
        "value": 1.0
    },
    "r.VT.RVT.TileCountBias": {
        "description": "Bias to apply to Runtime Virtual Texture size.\n Group 0",
        "value": 0.0
    },
    "r.VT.RVT.TileCountBias.Group0": {
        "description": "Bias to apply to Runtime Virtual Texture size.\n Group 0",
        "value": 0.0
    },
    "r.VT.RVT.TileCountBias.Group1": {
        "description": "Bias to apply to Runtime Virtual Texture size.\n Group 1",
        "value": 0.0
    },
    "r.VT.RVT.TileCountBias.Group2": {
        "description": "Bias to apply to Runtime Virtual Texture size.\n Group 2",
        "value": 0.0
    },
    "r.VT.RefreshEntirePageTable": {
        "description": "Refreshes the entire page table texture every frame",
        "value": 0.0
    },
    "r.VT.TileBorderSize": {
        "description": "Size in pixels to use for virtual texture tiles borders (rounded to next power-of-2)",
        "value": 4.0
    },
    "r.VT.TileSize": {
        "description": "Size in pixels to use for virtual texture tiles (rounded to next power-of-2)",
        "value": 128.0
    },
    "r.VT.TranscodeRetireAge": {
        "description": "If a VT transcode request is not picked up after this number of frames, drop it and put request in cache as free. default 60\n",
        "value": 60.0
    },
    "r.VT.Verbose": {
        "description": "Be pedantic about certain things that shouln't occur unless something is wrong. This may cause a lot of logspam 100's of lines per frame.",
        "value": 0.0
    },
    "r.VertexDeformationOutputsVelocity": {
        "description": "Enables materials with World Position Offset and/or World Displacement to output velocities during velocity pass even when the actor has not moved. This incurs a performance cost and can be quite significant if many objects are using WPO, such as a forest of trees - in that case consider r.BasePassOutputsVelocity and disabling this option.",
        "value": 0.0
    },
    "r.VertexFoggingForOpaque": {
        "description": "Causes opaque materials to use per-vertex fogging, which costs less and integrates properly with MSAA.  Only supported with forward shading.",
        "value": 1.0
    },
    "r.ViewDistanceScale": {
        "description": "Controls the view distance scale. A primitive's MaxDrawDistance is scaled by this value.\nHigher values will increase view distance but at a performance cost.\nDefault = 1.",
        "value": 1.0
    },
    "r.ViewDistanceScale.ApplySecondaryScale": {
        "description": "If true applies the secondary view distance scale to primitive draw distances.\nDefault = 0.",
        "value": 0.0
    },
    "r.ViewDistanceScale.FieldOfViewAffectsHLOD": {
        "description": "If enabled, applies the field of view scaling to HLOD draw distances as well as non-HLODs.",
        "value": 0.0
    },
    "r.ViewDistanceScale.FieldOfViewMaxAngle": {
        "description": "Scales the scene view distance scale with camera field of view.\nMaximum angle of the blend range.\nApplies the maximum scale when the camera is at or above this angle.",
        "value": 90.0
    },
    "r.ViewDistanceScale.FieldOfViewMaxAngleScale": {
        "description": "Scales the scene view distance scale with camera field of view.\nThis value is applied when the camera is at or above the maximum angle.",
        "value": 1.0
    },
    "r.ViewDistanceScale.FieldOfViewMinAngle": {
        "description": "Scales the scene view distance scale with camera field of view.\nMinimum angle of the blend range.\nApplies the minimum scale when the camera is at or below this angle.",
        "value": 45.0
    },
    "r.ViewDistanceScale.FieldOfViewMinAngleScale": {
        "description": "Scales the scene view distance scale with camera field of view.\nThis value is applied when the camera is at or below the minimum angle.",
        "value": 1.0
    },
    "r.ViewDistanceScale.SecondaryScale": {
        "description": "Controls the secondary view distance scale, Default = 1.0.\nThis is an optional scale intended to allow some features or gamemodes to opt-in.\n",
        "value": 1.0
    },
    "r.ViewMode.ShaderTimeSlice": {
        "description": "Max time to allocate each frame to generate new shaders. 0 disables (default=.02",
        "value": 0.019999999552965164
    },
    "r.ViewRectUseScreenBottom": {
        "description": "WARNING: This is an experimental, unsupported feature and does not work with all postprocesses (e.g DOF and DFAO)\nIf enabled, the view rectangle will use the bottom left corner instead of top left",
        "value": 0.0
    },
    "r.ViewTextureMipBias.Min": {
        "description": "Automatic view mip bias's minimum value (default to -2).",
        "value": -2.0
    },
    "r.ViewTextureMipBias.Offset": {
        "description": "Automatic view mip bias's constant offset (default to -0.3).",
        "value": -0.30000001192092896
    },
    "r.VirtualTexture": {
        "description": "If set to 1, textures will use virtual memory so they can be partially resident.",
        "value": 1.0
    },
    "r.VirtualTextureReducedMemory": {
        "description": "If set to 1, the cost of virtual textures will be reduced by using a more packed layout.",
        "value": 0.0
    },
    "r.VirtualTexturedLightmaps": {
        "description": "Controls wether to stream the lightmaps using virtual texturing.\n 0: Disabled.\n 1: Enabled.",
        "value": 0.0
    },
    "r.VirtualTextures": {
        "description": "Is virtual texture streaming enabled?",
        "value": 0.0
    },
    "r.VisualizeOccludedPrimitives": {
        "description": "Draw boxes for all occluded primitives",
        "value": 0.0
    },
    "r.VolumetricCloud": {
        "description": "VolumetricCloud components are rendered when this is not 0, otherwise ignored.",
        "value": 1.0
    },
    "r.VolumetricCloud.Debug.SampleCountMode": {
        "description": "Only for developers. [0] Disabled [1] Primary material sample count [2] Advanced:raymarched shadow sample count [3] Shadow material sample count [4] Advanced:ground shadow sample count [5] Advanced:ground shadow material sample count",
        "value": 0.0
    },
    "r.VolumetricCloud.DistanceToSampleMaxCount": {
        "description": "Distance in kilometers over which the total number of ray samples will be evenly distributed. Before that, the number of ray samples will span 1 to SampleCountMax, for for tracing distance ranging from 0 to DistanceToSampleCountMax (kilometers).",
        "value": 15.0
    },
    "r.VolumetricCloud.EnableAerialPerspectiveSampling": {
        "description": "Enable/disable the aerial perspective contribution on clouds.",
        "value": 1.0
    },
    "r.VolumetricCloud.EnableAtmosphericLightsSampling": {
        "description": "Enable/disable the atmospheric lights contribution on clouds.",
        "value": 1.0
    },
    "r.VolumetricCloud.EnableDistantSkyLightSampling": {
        "description": "Enable/disable the distant sky light contribution on clouds.",
        "value": 1.0
    },
    "r.VolumetricCloud.HighQualityAerialPerspective": {
        "description": "Enable/disable a second pass to trace the aerial perspective per pixel on clouds instead of using the aerial persepctive texture. Only usable when r.VolumetricCloud.EnableAerialPerspectiveSampling=1 and only needed for extra quality when r.VolumetricRenderTarget=1.",
        "value": 0.0
    },
    "r.VolumetricCloud.HzbCulling": {
        "description": "Enable/disable the use of the HZB in order to not trace behind opaque surfaces. Should be disabled when r.VolumetricRenderTarget.Mode is 2.",
        "value": 1.0
    },
    "r.VolumetricCloud.ReflectionRaySampleMaxCount": {
        "description": "The maximum number of samples taken while ray marching primary rays in reflections.",
        "value": 80.0
    },
    "r.VolumetricCloud.Shadow.ReflectionRaySampleMaxCount": {
        "description": "The maximum number of samples taken while ray marching shadow rays in reflections.",
        "value": 24.0
    },
    "r.VolumetricCloud.Shadow.SampleAtmosphericLightShadowmap": {
        "description": "Enable the sampling of atmospheric lights shadow map in order to produce volumetric shadows.",
        "value": 1.0
    },
    "r.VolumetricCloud.Shadow.ViewRaySampleMaxCount": {
        "description": "The maximum number of samples taken while ray marching shadow rays.",
        "value": 80.0
    },
    "r.VolumetricCloud.ShadowMap": {
        "description": "Enable/disable the shadow map, only if the scene contains a DirectionalLight component with Cast Cloud Shadows enabled on it.",
        "value": 1.0
    },
    "r.VolumetricCloud.ShadowMap.Debug": {
        "description": "Print information to debug the cloud shadow map.",
        "value": 0.0
    },
    "r.VolumetricCloud.ShadowMap.MaxResolution": {
        "description": "The maximum resolution of the cloud shadow map. The active resolution is controlled by the CloudShadowMapResolutionScale property on the Directional Light component.",
        "value": 2048.0
    },
    "r.VolumetricCloud.ShadowMap.RaySampleHorizonMultiplier": {
        "description": "The multipler on the sample count applied when the atmospheric light reach the horizon. Less pixels in the shadow map need to be traced, but rays need to travel a lot longer.",
        "value": 2.0
    },
    "r.VolumetricCloud.ShadowMap.RaySampleMaxCount": {
        "description": "The maximum number of samples taken while ray marching shadow rays to evaluate the cloud shadow map.",
        "value": 128.0
    },
    "r.VolumetricCloud.ShadowMap.SnapLength": {
        "description": "Snapping size in kilometers of the cloud shadowmap position to avoid flickering.",
        "value": 20.0
    },
    "r.VolumetricCloud.ShadowMap.SpatialFiltering": {
        "description": "Enable/disable the shadow map dilation/smoothing spatial filter. Enabled when greater than 0 and it represents the number of blur iterations (constrained to a maximum of 4).",
        "value": 1.0
    },
    "r.VolumetricCloud.ShadowMap.TemporalFiltering.LightRotationCutHistory": {
        "description": "When the atmospheric light rotation in degree is larger than that, the temporal accumulation is restarted.",
        "value": 10.0
    },
    "r.VolumetricCloud.ShadowMap.TemporalFiltering.NewFrameWeight": {
        "description": "Experimental and needs more work so disabled by default. Value between [0.0, 1.0] representing the weight of current frame's contribution. Low values can cause precision issues resulting in depth not converging over time. Disabled when set to 1.",
        "value": 1.0
    },
    "r.VolumetricCloud.SkyAO": {
        "description": "Enable/disable cloud sky ambient occlusion, the scene must contain a Skylight component with Cloud Ambient Occlusion enabled on it.",
        "value": 1.0
    },
    "r.VolumetricCloud.SkyAO.Debug": {
        "description": "Print information to debug the cloud sky AO map.",
        "value": 0.0
    },
    "r.VolumetricCloud.SkyAO.Filtering": {
        "description": "Enable/disable the sky AO dilation/smoothing filter.",
        "value": 1.0
    },
    "r.VolumetricCloud.SkyAO.MaxResolution": {
        "description": "The maximum resolution of the texture storing ambient occlusion information for the environment lighting coming from sky light. The active resolution is controlled by the CloudAmbientOcclusionMapResolutionScale property on the Skylight component.",
        "value": 2048.0
    },
    "r.VolumetricCloud.SkyAO.SnapLength": {
        "description": "Snapping size in kilometers of the cloud sky AO texture position to avoid flickering.",
        "value": 20.0
    },
    "r.VolumetricCloud.SkyAO.TraceSampleCount": {
        "description": "The number of samples taken to evaluate ground lighting occlusion.",
        "value": 10.0
    },
    "r.VolumetricCloud.ViewRaySampleMaxCount": {
        "description": "The maximum number of samples taken while ray marching view primary rays.",
        "value": 768.0
    },
    "r.VolumetricFog": {
        "description": "Whether to allow the volumetric fog feature.",
        "value": 1.0
    },
    "r.VolumetricFog.DepthDistributionScale": {
        "description": "Scales the slice depth distribution.",
        "value": 32.0
    },
    "r.VolumetricFog.GridPixelSize": {
        "description": "XY Size of a cell in the voxel grid, in pixels.",
        "value": 8.0
    },
    "r.VolumetricFog.GridSizeZ": {
        "description": "How many Volumetric Fog cells to use in z.",
        "value": 128.0
    },
    "r.VolumetricFog.HistoryMissSupersampleCount": {
        "description": "Number of lighting samples to compute for voxels whose history value is not available.\nThis reduces noise when panning or on camera cuts, but introduces a variable cost to volumetric fog computation.  Valid range [1, 16].",
        "value": 4.0
    },
    "r.VolumetricFog.HistoryWeight": {
        "description": "How much the history value should be weighted each frame.  This is a tradeoff between visible jittering and responsiveness.",
        "value": 0.8999999761581421
    },
    "r.VolumetricFog.InjectShadowedLightsSeparately": {
        "description": "Whether to allow the volumetric fog feature.",
        "value": 1.0
    },
    "r.VolumetricFog.InverseSquaredLightDistanceBiasScale": {
        "description": "Scales the amount added to the inverse squared falloff denominator.  This effectively removes the spike from inverse squared falloff that causes extreme aliasing.",
        "value": 1.0
    },
    "r.VolumetricFog.Jitter": {
        "description": "Whether to apply jitter to each frame's volumetric fog computation, achieving temporal super sampling.",
        "value": 1.0
    },
    "r.VolumetricFog.LightFunctionSupersampleScale": {
        "description": "Scales the slice depth distribution.",
        "value": 2.0
    },
    "r.VolumetricFog.TemporalReprojection": {
        "description": "Whether to use temporal reprojection on volumetric fog.",
        "value": 1.0
    },
    "r.VolumetricFog.VoxelizationShowOnlyPassIndex": {
        "description": "When >= 0, indicates a single voxelization pass to render for debugging.",
        "value": -1.0
    },
    "r.VolumetricFog.VoxelizationSlicesPerGSPass": {
        "description": "How many depth slices to render in a single voxelization pass (max geometry shader expansion).  Must recompile voxelization shaders to propagate changes.",
        "value": 8.0
    },
    "r.VolumetricLightmap.VisualizationMinScreenFraction": {
        "description": "Minimum screen size of a volumetric lightmap visualization sphere",
        "value": 0.0010000000474974513
    },
    "r.VolumetricLightmap.VisualizationRadiusScale": {
        "description": "Scales the size of the spheres used to visualize volumetric lightmap samples.",
        "value": 0.009999999776482582
    },
    "r.VolumetricRenderTarget": {
        "description": "",
        "value": 1.0
    },
    "r.VolumetricRenderTarget.Mode": {
        "description": "[0] trace quarter resolution + reconstruct at half resolution + upsample [1] trace half res + reconstruct full res + upsample [2] trace at quarter resolution + reconstruct full resolution (cannot intersect with opaque meshes and forces UpsamplingMode=2)",
        "value": 0.0
    },
    "r.VolumetricRenderTarget.UpsamplingMode": {
        "description": "Used in compositing volumetric RT over the scene. [0] bilinear [1] bilinear + jitter [2] nearest + depth test [3] bilinear + jitter + keep closest [4] bilaterial upsampling",
        "value": 4.0
    },
    "r.VolumetricRenderTarget.UvNoiseScale": {
        "description": "Used when r.VolumetricRenderTarget.UpsamplingMode is in a mode using jitter - this value scales the amount of jitter.",
        "value": 0.5
    },
    "r.Vulkan.AllowAsyncCompute": {
        "description": "0 to disable async compute queue(if available)1 to allow async compute queue",
        "value": 0.0
    },
    "r.Vulkan.AllowPresentOnComputeQueue": {
        "description": "0 to present on the graphics queue1 to allow presenting on the compute queue if available",
        "value": 0.0
    },
    "r.Vulkan.AllowUniformUpload": {
        "description": "Allow Uniform Buffer uploads outside of renderpasses\n 0: Disabled, buffers are always reallocated\n 1: Enabled, buffers are uploaded outside renderpasses",
        "value": 0.0
    },
    "r.Vulkan.BudgetScale": {
        "description": "Percentage Scaling of MemoryBudget. Valid range is [0-100]. Only has an effect if VK_EXT_memory_budget is available",
        "value": 100.0
    },
    "r.Vulkan.CPURHIThreadFramePacer": {
        "description": "Whether to enable the simple RHI thread CPU Framepacer for Vulkan",
        "value": 1.0
    },
    "r.Vulkan.CPURenderthreadFramePacer": {
        "description": "Whether to enable the simple RHI thread CPU Framepacer for Vulkan",
        "value": 1.0
    },
    "r.Vulkan.CpuWaitForFence": {
        "description": "Whether to have the Cpu wait for the fence in AcquireImageIndex",
        "value": 1.0
    },
    "r.Vulkan.DSetCacheMaxPoolLookups": {
        "description": "Maximum count of pool's caches to lookup before allocating new descriptor.\n",
        "value": 2.0
    },
    "r.Vulkan.DSetCacheTargetSetsPerPool": {
        "description": "Target number of descriptor set allocations per single pool.\n",
        "value": 4096.0
    },
    "r.Vulkan.DefragAgeDelay": {
        "description": "Delay in Frames that needs to pass before attempting to defrag a page again\n",
        "value": 100.0
    },
    "r.Vulkan.DefragAutoPause": {
        "description": "Automatically Pause defragging after a single page has been defragged. Only for debugging the defragmentation code.",
        "value": 0.0
    },
    "r.Vulkan.DefragOnceDebug": {
        "description": "Set to 1 to test defrag",
        "value": 0.0
    },
    "r.Vulkan.DefragPaused": {
        "description": "Pause Any defragging. Only for debugging defragmentation code",
        "value": 0.0
    },
    "r.Vulkan.DefragRepeatDebug": {
        "description": "Set to 1 to test defrag, repeatedly",
        "value": 0.0
    },
    "r.Vulkan.DefragSizeFactor": {
        "description": "Amount of space required to be free, on other pages, before attempting to do a defrag of a page",
        "value": 1.2999999523162842
    },
    "r.Vulkan.DefragSizeFraction": {
        "description": "Fill threshold, dont attempt defrag if free space is less than this fraction\n",
        "value": 0.699999988079071
    },
    "r.Vulkan.DelayAcquireBackBuffer": {
        "description": "Whether to delay acquiring the back buffer \n 0: acquire next image on frame start \n 1: acquire next image just before presenting, rendering is done to intermediate image which is then copied to a real backbuffer (default) \n 2: acquire next image on first use",
        "value": 1.0
    },
    "r.Vulkan.Depth24Bit": {
        "description": "0: Use 32-bit float depth buffer (default)\n1: Use 24-bit fixed point depth buffer\n",
        "value": 0.0
    },
    "r.Vulkan.DepthStencilForceStorageBit": {
        "description": "Whether to force Image Usage Storage on Depth (can disable framebuffer compression).\n 0: Not enabled\n 1: Enables override for IMAGE_USAGE_STORAGE",
        "value": 0.0
    },
    "r.Vulkan.DescriptorSetLayoutMode": {
        "description": "0 to not change layouts (eg Set 0 = Vertex, 1 = Pixel, etc\n1 to use a new set for common Uniform Buffers\n2 to collapse all sets into Set 0\n",
        "value": 0.0
    },
    "r.Vulkan.DynamicGlobalUBs": {
        "description": "2 to treat ALL uniform buffers as dynamic\n1 to treat global/packed uniform buffers as dynamic [default]\n0 to treat them as regular",
        "value": 1.0
    },
    "r.Vulkan.EnableDedicatedImageMemory": {
        "description": "Enable to use Dedidcated Image memory on devices that prefer it.",
        "value": 1.0
    },
    "r.Vulkan.EnableDefrag": {
        "description": "Whether to enable defrag moves & evictions\n0: Off\n1: On\n",
        "value": 1.0
    },
    "r.Vulkan.EnablePipelineLRUCache": {
        "description": "Pipeline LRU cache.\n0: disable LRU\n1: Enable LRU",
        "value": 0.0
    },
    "r.Vulkan.EvictOnePageDebug": {
        "description": "Set to 1 to test evict one page to host",
        "value": 0.0
    },
    "r.Vulkan.EvictionLimitPercentage": {
        "description": "When more than x% of local memory is used, evict resources to host memory",
        "value": 80.0
    },
    "r.Vulkan.EvictionLimitPercentageRenableLimit": {
        "description": "After eviction has occurred, only start using local mem for textures after memory usage is less than this(Relative to Eviction percentage)",
        "value": 75.0
    },
    "r.Vulkan.FlushOnMapStaging": {
        "description": "Flush GPU on MapStagingSurface calls without any fence.\n 0: Do not Flush (default)\n 1: Flush",
        "value": 0.0
    },
    "r.Vulkan.ForceDXC": {
        "description": "Forces DirectX Shader Compiler (DXC) to be used for all Vulkan shaders instead of hlslcc.\n 0: Disable (hlslcc/glslang)\n 1: Enabled on desktop platforms only (default)\n 2: Enabled on mobile platforms only\n 3: Enabled on all platforms",
        "value": 1.0
    },
    "r.Vulkan.ForcePSOSingleThreaded": {
        "description": "Enable to force singlethreaded creation of PSOs. Only intended as a workaround for buggy drivers\n",
        "value": 0.0
    },
    "r.Vulkan.ForcePacingWithoutVSync": {
        "description": "Whether to CPU pacers remain enabled even if VSync is off",
        "value": 0.0
    },
    "r.Vulkan.FreeAllPages": {
        "description": "Enable to fully free all pages early. default on android only",
        "value": 0.0
    },
    "r.Vulkan.FreePageForType": {
        "description": "Enable separate free page list for images and buffers.",
        "value": 0.0
    },
    "r.Vulkan.IgnoreCPUReads": {
        "description": "Debugging utility for GPU->CPU reads.\n 0 will read from the GPU (default).\n 1 will NOT read from the GPU and fill with zeros.\n",
        "value": 0.0
    },
    "r.Vulkan.InputAttachmentShaderRead": {
        "description": "Whether to use VK_ACCESS_SHADER_READ_BIT an input attachments to workaround rendering issues\n-1 decide automatically (default)\n0 use: VK_ACCESS_INPUT_ATTACHMENT_READ_BIT\n1 use: VK_ACCESS_INPUT_ATTACHMENT_READ_BIT | VK_ACCESS_SHADER_READ_BIT\n",
        "value": -1.0
    },
    "r.Vulkan.KeepSwapChain": {
        "description": "Whether to keep old swap chain to pass through when creating the next one",
        "value": 1.0
    },
    "r.Vulkan.LogEvictStatus": {
        "description": "Log Eviction status every frame",
        "value": 0.0
    },
    "r.Vulkan.MemoryBacktrace": {
        "description": "0: Disable, store __FILE__ and __LINE__\nN: Enable, n is # of steps to go back\n",
        "value": 10.0
    },
    "r.Vulkan.MemoryFallbackToHost": {
        "description": "0: Legacy, will crash when oom for rendertargets\n1: Fallback to Host memory on oom\n",
        "value": 1.0
    },
    "r.Vulkan.PipelineCacheCompression": {
        "description": "Enable/disable compression on the Vulkan pipeline cache disk file\n",
        "value": 1.0
    },
    "r.Vulkan.PipelineCacheFromShaderPipelineCache": {
        "description": "0 look for a pipeline cache in the normal locations with the normal names.1 tie the vulkan pipeline cache to the shader pipeline cache, use the PSOFC guid as part of the filename, etc.",
        "value": 0.0
    },
    "r.Vulkan.PipelineCacheLoad": {
        "description": "0 to disable loading the pipeline cache1 to enable using pipeline cache",
        "value": 1.0
    },
    "r.Vulkan.PipelineDebugForceEvictImmediately": {
        "description": "1: Force all created PSOs to be evicted immediately. Only for debugging",
        "value": 0.0
    },
    "r.Vulkan.PipelineLRUCacheEvictBinary": {
        "description": "0: create pipelines in from the binary PSO cache and binary shader cache and evict them only as it fills up.\n1: don't create pipelines....just immediately evict them",
        "value": 0.0
    },
    "r.Vulkan.PipelineLRUCacheEvictBinaryPreloadScreen": {
        "description": "1: Use a preload screen while loading preevicted PSOs ala r.Vulkan.PipelineLRUCacheEvictBinary",
        "value": 0.0
    },
    "r.Vulkan.PipelineLRUCapactiy": {
        "description": "Maximum no. of PSOs in LRU.",
        "value": 8192.0
    },
    "r.Vulkan.PipelineLRUSize": {
        "description": "Maximum size of shader memory .",
        "value": 536870912.0
    },
    "r.Vulkan.ProfileCmdBuffers": {
        "description": "Insert GPU timing queries in every cmd buffer\n",
        "value": 0.0
    },
    "r.Vulkan.RHIThread": {
        "description": "0 to only use Render Thread\n1 to use ONE RHI Thread\n2 to use multiple RHI Thread\n",
        "value": 1.0
    },
    "r.Vulkan.RobustBufferAccess": {
        "description": "0 to disable robust buffer access1 to enable (default)",
        "value": 1.0
    },
    "r.Vulkan.SingleAllocationPerResource": {
        "description": "Enable to do a single allocation per resource",
        "value": 0.0
    },
    "r.Vulkan.SubmitAfterEveryEndRenderPass": {
        "description": "Forces a submit after every end render pass.\n 0: Don't(default)\n 1: Enable submitting",
        "value": 0.0
    },
    "r.Vulkan.SubmitOcclusionBatchCmdBuffer": {
        "description": "1 to submit the cmd buffer after end occlusion query batch (default)",
        "value": 1.0
    },
    "r.Vulkan.SubmitOnCopyToResolve": {
        "description": "Submits the Queue to the GPU on every RHICopyToResolveTarget call.\n 0: Do not submit (default)\n 1: Submit",
        "value": 0.0
    },
    "r.Vulkan.SubmitOnDispatch": {
        "description": "0 to not do anything special on dispatch(default)\n1 to submit the cmd buffer after each dispatch",
        "value": 0.0
    },
    "r.Vulkan.SubmitOnTextureUnlock": {
        "description": "Whether to submit upload cmd buffer on each texture unlock.\n 0: Do not submit\n 1: Submit (default)",
        "value": 1.0
    },
    "r.Vulkan.UniqueValidationMessages": {
        "description": "Filter out validation errors with the same code (only when r.Vulkan.EnableValidation is non zero)",
        "value": 1.0
    },
    "r.Vulkan.UploadCmdBufferSemaphore": {
        "description": "Whether command buffers for uploads and graphics can be executed simultaneously.\n 0: The buffers are submitted without any synch(default)\n 1: Graphics buffers will not overlap with the upload buffers",
        "value": 0.0
    },
    "r.Vulkan.UseBufferBinning": {
        "description": "Enable binning sub-allocations within buffers to help reduce fragmentation at the expense of higher high watermark [read-only]\n",
        "value": 0.0
    },
    "r.Vulkan.UseRealUBs": {
        "description": "0: Emulate uniform buffers on Vulkan SM4/SM5 (debugging ONLY)\n1: Use real uniform buffers [default]",
        "value": 1.0
    },
    "r.Vulkan.UseSingleQueue": {
        "description": "Forces using the same queue for uploads and graphics.\n 0: Uses multiple queues(default)\n 1: Always uses the gfx queue for submissions",
        "value": 0.0
    },
    "r.Vulkan.WaitForIdleOnSubmit": {
        "description": "Waits for the GPU to be idle after submitting a command buffer. Useful for tracking GPU hangs.\n 0: Do not wait(default)\n 1: Wait on every submit\n 2: Wait when submitting an upload buffer\n 3: Wait when submitting an active buffer (one that has gfx commands)\n",
        "value": 0.0
    },
    "r.WarnOfBadDrivers": {
        "description": "On engine startup we can check the current GPU driver and warn the user about issues and suggest a specific version\nThe test is fast so this should not cost any performance.\n 0: off\n 1: a message on startup might appear (default)\n 2: Simulating the system has a blacklisted NVIDIA driver (UI should appear)\n 3: Simulating the system has a blacklisted AMD driver (UI should appear)\n 4: Simulating the system has a not blacklisted AMD driver (no UI should appear)\n 5: Simulating the system has a Intel driver (no UI should appear)",
        "value": 1.0
    },
    "r.WarningOnRedundantTransformUpdate": {
        "description": "Produce a warning when UpdatePrimitiveTransform_RenderThread is called redundantly.",
        "value": 0.0
    },
    "r.Water.SingleLayer": {
        "description": "Enable the single water rendering system.",
        "value": 1.0
    },
    "r.Water.SingleLayer.RTR": {
        "description": "Enable RTR for the single water renderring system.",
        "value": 1.0
    },
    "r.Water.SingleLayer.Reflection": {
        "description": "Enable reflection rendering on water.",
        "value": 1.0
    },
    "r.Water.SingleLayer.RefractionDownsampleFactor": {
        "description": "Resolution divider for the water refraction buffer.",
        "value": 2.0
    },
    "r.Water.SingleLayer.RefractionFullPrecision": {
        "description": "Whether to pack refraction depth in a Float32 (instead of Float16). To be used as a debug option to find issues with refraction depth precision.",
        "value": 0.0
    },
    "r.Water.SingleLayer.SSR": {
        "description": "Enable SSR for the single water renderring system.",
        "value": 1.0
    },
    "r.Water.SingleLayer.SSRTAA": {
        "description": "Enable SSR denoising using TAA for the single water renderring system.",
        "value": 1.0
    },
    "r.Water.SingleLayer.TiledComposite": {
        "description": "Enable tiled optimisation of the water reflection rendering.",
        "value": 1.0
    },
    "r.WideCustomResolve": {
        "description": "Use a wide custom resolve filter when MSAA is enabled0: Disabled [hardware box filter]1: Wide (r=1.25, 12 samples)2: Wider (r=1.4, 16 samples)3: Widest (r=1.5, 20 samples)",
        "value": 0.0
    },
    "r.WireframeCullThreshold": {
        "description": "Threshold below which objects in ortho wireframe views will be culled.",
        "value": 5.0
    },
    "r.XGEShaderCompile": {
        "description": "Enables or disables the use of XGE to build shaders.\n0: Local builds only. \n1: Distribute builds using XGE (default).",
        "value": 1.0
    },
    "r.XGEShaderCompile.Mode": {
        "description": "Selects which dispatch mode to use.\n0: Use legacy xml dispatch mode. (default)\n1: Prefer interception mode if available (requires XGE controller support). Falls back to legacy mode otherwise.\n2: Force interception mode. Disables XGE shader compiling if XGE controller is not available.\n",
        "value": 2.0
    },
    "r.XGEShaderCompile.Xml.BatchGroupSize": {
        "description": "Specifies the number of batches to fill with shaders.\nShaders are spread across this number of batches until all the batches are full.\nThis allows the XGE compile to go wider when compiling a small number of shaders.\nDefault = 128\n",
        "value": 128.0
    },
    "r.XGEShaderCompile.Xml.BatchSize": {
        "description": "Specifies the number of shaders to batch together into a single XGE task.\nDefault = 16\n",
        "value": 16.0
    },
    "r.XGEShaderCompile.Xml.JobTimeout": {
        "description": "The number of seconds to wait for additional shader jobs to be submitted before starting a build.\nDefault = 0.5\n",
        "value": 0.5
    },
    "r.bFlushRenderTargetsOnWorldCleanup": {
        "description": "",
        "value": 1.0
    },
    "r.chaos.ReflectionCaptureStaticSceneOnly": {
        "description": " 0 is off, 1 is on (default)",
        "value": 1.0
    },
    "r.d3d.uniformbufferrecycledepth": {
        "description": "Number of frames before recycling freed uniform buffers .\n",
        "value": 30.0
    },
    "r.d3d11.dumpliveobjects": {
        "command": true,
        "description": "When using -d3ddebug will dump a list of live d3d objects.  Mostly for finding leaks."
    },
    "r.gpucrash.collectionenable": {
        "description": "Stores GPU crash data from scoped events when a applicable crash debugging system is available.",
        "value": 1.0
    },
    "r.gpucrash.datadepth": {
        "description": "Limits the amount of marker scope depth we record for GPU crash debugging to the given scope depth.",
        "value": -1.0
    },
    "r.pso.evictiontime": {
        "description": "Time between checks to remove stale objects from the cache. 0 = no eviction (which may eventually OOM...)",
        "value": 60.0
    },
    "r.so.MaxDistanceForOccluder": {
        "description": "Max radius where to look for occluders.",
        "value": 20000.0
    },
    "r.so.MaxOccluderNum": {
        "description": "Maximum number of primitives that can be rendered as occluders",
        "value": 150.0
    },
    "r.so.MinScreenRadiusForOccluder": {
        "description": "Threshold below which meshes will be culled from beeing an occluder.",
        "value": 0.07500000298023224
    },
    "r.so.SIMD": {
        "description": "Use SIMD routines in software occlusion",
        "value": 1.0
    },
    "r.so.ThreadName": {
        "description": "0 = AnyHiPriThreadNormalTask1 = AnyHiPriThreadHiPriTask2 = AnyNormalThreadNormalTask (Default)3 = AnyNormalThreadHiPriTask4 = AnyBackgroundThreadNormalTask5 = AnyBackgroundHiPriTask",
        "value": 2.0
    },
    "r.so.VisualizeBuffer": {
        "description": "Visualize rasterized occlusion buffer",
        "value": 0.0
    },
    "r.vt.FeedbackFactor": {
        "description": "The size of the VT feedback buffer is calculated by dividing the render resolution by this factor",
        "value": 16.0
    },
    "r.vulkan.LogDefrag": {
        "description": "Whether to log all defrag moves & evictions\n0: Off\n1: On\n",
        "value": 0.0
    },
    "rhi.PresentThreshold.Bottom": {
        "description": "Specifies the percentage of the screen from the bottom where tearing is allowed.\nOnly effective on supported platforms.\nRange: 0.0 - 1.0\n",
        "value": 0.0
    },
    "rhi.PresentThreshold.Top": {
        "description": "Specifies the percentage of the screen from the top where tearing is allowed.\nOnly effective on supported platforms.\nRange: 0.0 - 1.0\n",
        "value": 0.0
    },
    "rhi.ResourceTableCaching": {
        "description": "If 1, the RHI will cache resource table contents within a frame. Otherwise resource tables are rebuilt for every draw call.",
        "value": 1.0
    },
    "rhi.SyncAllowEarlyKick": {
        "description": "When 1, allows the RHI vsync thread to kick off the next frame early if we've missed the vsync.",
        "value": 1.0
    },
    "rhi.SyncInterval": {
        "description": "Determines the frequency of VSyncs in supported RHIs.  0 - Unlocked\n  1 - 60 Hz (16.66 ms)\n  2 - 30 Hz (33.33 ms)\n  3 - 20 Hz (50.00 ms)\n",
        "value": 1.0
    },
    "rhi.SyncSlackMS": {
        "description": "Increases input latency by this many milliseconds, to help performance (trade-off tunable). Gamethread will be kicked off this many milliseconds before the vsync",
        "value": 10.0
    },
    "s.AllowLevelRequestsWhileAsyncLoadingInMatch": {
        "description": "Enables level streaming requests while async loading (of anything) while the match is already in progress and no loading screen is up.",
        "value": 1.0
    },
    "s.AllowUnversionedContentInEditor": {
        "description": "If true, allows unversioned content to be loaded by the editor.",
        "value": 0.0
    },
    "s.AsyncLoadingPrecachePriority": {
        "description": "Priority of asyncloading precache requests",
        "value": 0.0
    },
    "s.AsyncLoadingThreadEnabled": {
        "description": "Placeholder console variable, currently not used in runtime.",
        "value": 0.0
    },
    "s.AsyncLoadingTimeLimit": {
        "description": "Maximum amount of time to spend doing asynchronous loading (ms per frame).",
        "value": 5.0
    },
    "s.AsyncLoadingUseFullTimeLimit": {
        "description": "Whether to use the entire time limit even if blocked on I/O.",
        "value": 0.0
    },
    "s.ContinuouslyIncrementalGCWhileLevelsPendingPurge": {
        "description": "Whether to repeatedly kick off incremental GC when there are levels still waiting to be purged.",
        "value": 1.0
    },
    "s.EditorLoadPrecacheSizeKB": {
        "description": "Size, in KB, to precache when loading packages in the editor.",
        "value": 0.0
    },
    "s.EventDrivenLoaderEnabled": {
        "description": "Placeholder console variable, currently not used in runtime.",
        "value": 1.0
    },
    "s.FlushStreamingOnExit": {
        "description": "Placeholder console variable, currently not used in runtime.",
        "value": 1.0
    },
    "s.ForceGCAfterLevelStreamedOut": {
        "description": "Whether to force a GC after levels are streamed out to instantly reclaim the memory at the expensive of a hitch.",
        "value": 1.0
    },
    "s.IoDispatcherBufferAlignment": {
        "description": "IoDispatcher read buffer alignment.",
        "value": 4096.0
    },
    "s.IoDispatcherBufferMemoryMB": {
        "description": "IoDispatcher buffer memory size (in megabytes).",
        "value": 8.0
    },
    "s.IoDispatcherBufferSizeKB": {
        "description": "IoDispatcher read buffer size (in kilobytes).",
        "value": 256.0
    },
    "s.IoDispatcherCacheSizeMB": {
        "description": "IoDispatcher cache memory size (in megabytes).",
        "value": 0.0
    },
    "s.IoDispatcherDecompressionWorkerCount": {
        "description": "IoDispatcher decompression worker count.",
        "value": 4.0
    },
    "s.LevelStreamingActorsUpdateTimeLimit": {
        "description": "Maximum allowed time to spend for actor registration steps during level streaming (ms per frame).",
        "value": 5.0
    },
    "s.LevelStreamingComponentsRegistrationGranularity": {
        "description": "Batching granularity used to register actor components during level streaming.",
        "value": 10.0
    },
    "s.LevelStreamingComponentsUnregistrationGranularity": {
        "description": "Batching granularity used to unregister actor components during level unstreaming.",
        "value": 5.0
    },
    "s.MaxIncomingRequestsToStall": {
        "description": "Controls the maximum number of unhandled IO requests before we stall the pak precacher to let the CPU catch up.",
        "value": 100.0
    },
    "s.MaxLevelRequestsAtOnceWhileInMatch": {
        "description": "When we're already loading this many levels and actively in match, don't allow any more requests until one of those completes.  Set to zero to disable.",
        "value": 0.0
    },
    "s.MaxPackageSummarySize": {
        "description": "IAmNoRealVariable",
        "value": 16384.0
    },
    "s.MaxPrecacheRequestsInFlight": {
        "description": "Controls the maximum amount of precache requests to have in flight.",
        "value": 2.0
    },
    "s.MaxReadyRequestsToStallMB": {
        "description": "Controls the maximum amount memory for unhandled IO requests before we stall the pak precacher to let the CPU catch up (in megabytes).",
        "value": 30.0
    },
    "s.MinBulkDataSizeForAsyncLoading": {
        "description": "Minimum time the time limit exceeded warning will be triggered by.",
        "value": 131072.0
    },
    "s.PriorityAsyncLoadingExtraTime": {
        "description": "Additional time to spend asynchronous loading during a high priority load.",
        "value": 15.0
    },
    "s.PriorityLevelStreamingActorsUpdateExtraTime": {
        "description": "Additional time to spend on actor registration steps during a high priority load.",
        "value": 5.0
    },
    "s.ProcessPrestreamingRequests": {
        "description": "If non-zero, then we process prestreaming requests in cooked builds.",
        "value": 0.0
    },
    "s.RandomizeLoadOrder": {
        "description": "If > 0, will randomize the load order of pending packages using this seed instead of using the most efficient order. This can be used to find bugs.",
        "value": 0.0
    },
    "s.StreamableDelegateDelayFrames": {
        "description": "Number of frames to delay StreamableManager delegates ",
        "value": 1.0
    },
    "s.TimeLimitExceededMinTime": {
        "description": "Minimum time the time limit exceeded warning will be triggered by.",
        "value": 0.004999999888241291
    },
    "s.TimeLimitExceededMultiplier": {
        "description": "Multiplier for time limit exceeded warning time threshold.",
        "value": 1.5
    },
    "s.UnregisterComponentsTimeLimit": {
        "description": "Maximum allowed time to spend for actor unregistration steps during level streaming (ms per frame). If this is zero then we don't timeslice",
        "value": 1.0
    },
    "s.UseBackgroundLevelStreaming": {
        "description": "Whether to allow background level streaming.",
        "value": 1.0
    },
    "s.WarnIfTimeLimitExceeded": {
        "description": "Enables log warning if time limit for time-sliced package streaming has been exceeded.",
        "value": 0.0
    },
    "sg.AntiAliasingQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 0:low, 1:med, 2:high, 3:epic, 4:cinematic, default: 3",
        "value": 3.0
    },
    "sg.AntiAliasingQuality.NumLevels": {
        "description": "Number of settings quality levels in sg.AntiAliasingQuality\n default: 5 (0..4)",
        "value": 5.0
    },
    "sg.EffectsQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 0:low, 1:med, 2:high, 3:epic, 4:cinematic, default: 3",
        "value": 3.0
    },
    "sg.EffectsQuality.NumLevels": {
        "description": "Number of settings quality levels in sg.EffectsQuality\n default: 5 (0..4)",
        "value": 5.0
    },
    "sg.FoliageQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 0:low, 1:med, 2:high, 3:epic, 4:cinematic, default: 3",
        "value": 3.0
    },
    "sg.FoliageQuality.NumLevels": {
        "description": "Number of settings quality levels in sg.FoliageQuality\n default: 5 (0..4)",
        "value": 5.0
    },
    "sg.PostProcessQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 0:low, 1:med, 2:high, 3:epic, 4:cinematic, default: 3",
        "value": 3.0
    },
    "sg.PostProcessQuality.NumLevels": {
        "description": "Number of settings quality levels in sg.PostProcessQuality\n default: 5 (0..4)",
        "value": 5.0
    },
    "sg.ResolutionQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 10..100, default: 100",
        "value": 100.0
    },
    "sg.ShadingQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 0:low, 1:med, 2:high, 3:epic, 4:cinematic, default: 3",
        "value": 3.0
    },
    "sg.ShadingQuality.NumLevels": {
        "description": "Number of settings quality levels in sg.ShadingQuality\n default: 5 (0..4)",
        "value": 5.0
    },
    "sg.ShadowQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 0:low, 1:med, 2:high, 3:epic, 4:cinematic, default: 3",
        "value": 3.0
    },
    "sg.ShadowQuality.NumLevels": {
        "description": "Number of settings quality levels in sg.ShadowQuality\n default: 5 (0..4)",
        "value": 5.0
    },
    "sg.TextureQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 0:low, 1:med, 2:high, 3:epic, 4:cinematic, default: 3",
        "value": 3.0
    },
    "sg.TextureQuality.NumLevels": {
        "description": "Number of settings quality levels in sg.TextureQuality\n default: 5 (0..4)",
        "value": 5.0
    },
    "sg.ViewDistanceQuality": {
        "description": "Scalability quality state (internally used by scalability system, ini load/save or using SCALABILITY console command)\n 0:low, 1:med, 2:high, 3:epic, 4:cinematic, default: 3",
        "value": 3.0
    },
    "sg.ViewDistanceQuality.NumLevels": {
        "description": "Number of settings quality levels in sg.ViewDistanceQuality\n default: 5 (0..4)",
        "value": 5.0
    },
    "splines.blockall": {
        "description": "Force splines to always use the BlockAll collision profile instead of whatever is stored in the CollisionProfileName property",
        "value": 0.0
    },
    "stats.StatLevelsColumnWidth": {
        "description": "The width in pixels of a column in stat levels.",
        "value": 350.0
    },
    "t.FPSChart.ExcludeIdleTime": {
        "description": "Should we exclude idle time (i.e. one which we spent sleeping) when doing a FPS chart?\n default: 0",
        "value": 0.0
    },
    "t.FPSChart.InterestingFramerates": {
        "description": "Comma separated list of interesting frame rates\n default: 30,60,120",
        "value": 30.0
    },
    "t.FPSChart.MaxFrameDeltaSecsBeforeDiscarding": {
        "description": "The maximum length a frame can be (in seconds) to be considered for FPS chart binning (default 1.0s; no maximum length if <= 0.0)",
        "value": 10.0
    },
    "t.FPSChart.OpenFolderOnDump": {
        "description": "Should we explore to the folder that contains the .log / etc... when a dump is finished?  This can be disabled for automated testing\n default: 1",
        "value": 1.0
    },
    "t.FPSChart.RoundFPSBeforeBinning": {
        "description": "Should we round raw FPS values before thresholding them into bins when doing a FPS chart?\n default: 0",
        "value": 0.0
    },
    "t.HitchDeadTimeWindow": {
        "description": "Minimum time passed before we'll record a new hitch (in ms)\n default: 200.0 ms",
        "value": 200.0
    },
    "t.HitchFrameTimeThreshold": {
        "description": "Definition of a hitchy frame (in ms)\n default: 60.0 ms",
        "value": 60.0
    },
    "t.HitchVersusNonHitchRatio": {
        "description": "For the current frame to be considered a hitch, it must have run at least this many times slower than the previous frame.\nThe actual ratio is clamped to be between this and t.HitchFrameTimeThreshold/t.TargetFrameTimeThreshold\n default: 1.5",
        "value": 1.5
    },
    "t.IdleWhenNotForeground": {
        "description": "Prevents the engine from taking any CPU or GPU time while not the foreground app.",
        "value": 0.0
    },
    "t.MaxFPS": {
        "description": "Caps FPS to the given value.  Set to <= 0 to be uncapped.",
        "value": 0.0
    },
    "t.SlowFrameLoggingThreshold": {
        "description": "How slow must a frame be (in seconds) to be logged out (<= 0 to disable).",
        "value": 0.0
    },
    "t.TargetFrameTimeThreshold": {
        "description": "The target frame time (in ms); values below this will be drawn in green, values above will be yellow or red depending on the severity\n default: 33.9 ms",
        "value": 33.900001525878906
    },
    "t.TickComponentLatentActionsWithTheComponent": {
        "description": "Should we tick latent actions fired for a component at the same time as the component?\n 0: Tick component latent actions later on in the frame (behavior prior to 4.16, provided for games relying on the old behavior but will be removed in the future)\n 1: Tick component latent actions at the same time as the component (default)",
        "value": 1.0
    },
    "t.UnacceptableFrameTimeThreshold": {
        "description": "The frame time theshold for what is considered completely unacceptable (in ms); values above this will be drawn as red\n default: 50.0 ms",
        "value": 50.0
    },
    "t.UnsteadyFPS": {
        "description": "Causes FPS to bounce around randomly in the 8-32 range.",
        "value": 0.0
    },
    "tick.AddIndirectTestTickFunctions": {
        "command": true,
        "description": "Add no-op ticks to test performance of ticking infrastructure."
    },
    "tick.AddTestTickFunctions": {
        "command": true,
        "description": "Add no-op ticks to test performance of ticking infrastructure."
    },
    "tick.AllowAsyncComponentTicks": {
        "description": "Used to control async component ticks.",
        "value": 1.0
    },
    "tick.AllowAsyncTickCleanup": {
        "description": "If true, ticks are cleaned up in a task thread.",
        "value": 0.0
    },
    "tick.AllowAsyncTickDispatch": {
        "description": "If true, ticks are dispatched in a task thread.",
        "value": 0.0
    },
    "tick.AllowConcurrentTickQueue": {
        "description": "If true, queue ticks concurrently.",
        "value": 1.0
    },
    "tick.AnimationDelaysEndGroup": {
        "description": "If > 0, then skeletal meshes that do not rely on physics simulation will set their animation end tick group to TG_PostPhysics.",
        "value": 1.0
    },
    "tick.DoAsyncEndOfFrameTasks": {
        "description": "Experimental option to run various things concurrently with the HUD render.",
        "value": 0.0
    },
    "tick.DoAsyncEndOfFrameTasks.Randomize": {
        "description": "Used to add random sleeps to tick.DoAsyncEndOfFrameTasks to shake loose bugs on either thread. Also does random render thread flushes from the game thread.",
        "value": 0.0
    },
    "tick.DoAsyncEndOfFrameTasks.ValidateReplicatedProperties": {
        "description": "If true, validates that replicated properties haven't changed during the Slate tick. Results will not be valid if demo.ClientRecordAsyncEndOfFrame is also enabled.",
        "value": 0.0
    },
    "tick.HiPriSkinnedMeshes": {
        "description": "If > 0, then schedule the skinned component ticks in a tick group before other ticks.",
        "value": 1.0
    },
    "tick.LightweightTimeguardThresholdMS": {
        "description": "Threshold in milliseconds for the tick timeguard",
        "value": 0.0
    },
    "tick.LogTicks": {
        "description": "Spew ticks for debugging.",
        "value": 0.0
    },
    "tick.RemoveTestTickFunctions": {
        "command": true,
        "description": "Remove no-op ticks to test performance of ticking infrastructure."
    },
    "tick.SecondsBeforeEmbeddedAppSleeps": {
        "description": "When built as embedded, how many ticks to perform before sleeping",
        "value": 1.0
    },
    "tick.ShowPrerequistes": {
        "description": "When logging ticks, show the prerequistes; debugging.",
        "value": 1.0
    },
    "timecode.UseDropFormatTimecodeByDefaultWhenSupported": {
        "description": "By default, should we generate a timecode in drop frame format when the frame rate does support it.",
        "value": 1.961817850054744e-44
    },
    "vm.BatchPackedVMOutput": {
        "description": "If > 0 output elements will be packed and batched branch free.\n",
        "value": 1.0
    },
    "vm.BatchVMInput": {
        "description": "If > 0 input elements will be batched.\n",
        "value": 0.0
    },
    "vm.BatchVMOutput": {
        "description": "If > 0 output elements will be batched.\n",
        "value": 0.0
    },
    "vm.DetailedVMScriptStats": {
        "description": "If > 0 the vector VM will emit stats for it's internal module calls. \n",
        "value": 0.0
    },
    "vm.FreeUnoptimizedByteCode": {
        "description": "When we have optimized the VM byte code should we free the original unoptimized byte code?",
        "value": 1.0
    },
    "vm.InstancesPerChunk": {
        "description": "Number of instances per VM chunk. (default=128) \n",
        "value": 128.0
    },
    "vm.OptimizeVMByteCode": {
        "description": "If > 0 vector VM code optimization will be enabled at runtime.\n",
        "value": 1.0
    },
    "vm.Parallel": {
        "description": "If > 0 vector VM chunk level paralellism will be enabled. \n",
        "value": 1.0
    },
    "vm.ParallelChunksPerBatch": {
        "description": "Number of chunks to process per task when running in parallel. \n",
        "value": 4.0
    },
    "vm.SafeOptimizedKernels": {
        "description": "If > 0 optimized vector VM byte code will use safe versions of the kernels.\n",
        "value": 1.0
    },
    "vm.UseOptimizedVMByteCode": {
        "description": "If > 0 optimized vector VM code will be excuted at runtime.\n",
        "value": 1.0
    },
    "voice.DefaultPatchBufferSize": {
        "description": "Changes the amount of audio we buffer for VOIP patching, in samples.\n",
        "value": 4096.0
    },
    "voice.DefaultPatchGain": {
        "description": "Changes the default gain of audio patches, in linear gain.\n",
        "value": 1.0
    },
    "voice.JitterBufferDelay": {
        "description": "The default amount of audio we buffer, in seconds, before we play back audio. Decreasing this value will decrease latency but increase the potential for underruns.\nValue: Number of seconds of audio we buffer.",
        "value": 0.30000001192092896
    },
    "voice.MicInputGain": {
        "description": "The default gain amount in linear amplitude.\nValue: Gain multiplier.",
        "value": 1.0
    },
    "voice.MicNoiseAttackTime": {
        "description": "Sets the fade-in time for our noise gate.\nValue: Number of seconds we fade in over.",
        "value": 0.05000000074505806
    },
    "voice.MicNoiseGateThreshold": {
        "description": "Our threshold, in linear amplitude, for  our noise gate on input. Similar to voice.SilenceDetectionThreshold, except that audio quieter than our noise gate threshold will still output silence.\nValue: Number of seconds of audio we buffer.",
        "value": 0.07999999821186066
    },
    "voice.MicNoiseReleaseTime": {
        "description": "Sets the fade out time for our noise gate.\nValue: Number of seconds we fade out over.",
        "value": 0.30000001192092896
    },
    "voice.MicStereoBias": {
        "description": "This will attenuate the left or right channel.\n0.0: Centered. 1.0: right channel only. -1.0: Left channel only.",
        "value": 0.0
    },
    "voice.MuteAudioEngineOutput": {
        "description": "When set to a nonzero value, the output for the audio engine will be muted..\n",
        "value": 0.0
    },
    "voice.NumChannels": {
        "description": "Default number of channels to capture from mic input, encode to Opus, and output. Can be set to 1 or 2.\nValue: Number of channels to use for VOIP input and output.",
        "value": 1.0
    },
    "voice.SilenceDetectionAttackTime": {
        "description": "Attack time to be set for the VOIP microphone's silence detection algorithm in milliseconds.\n",
        "value": 2.0
    },
    "voice.SilenceDetectionReleaseTime": {
        "description": "Release time to be set for the VOIP microphone's silence detection algorithm in milliseconds.\n",
        "value": 1100.0
    },
    "voice.SilenceDetectionThreshold": {
        "description": "Threshold to be set for the VOIP microphone's silence detection algorithm.\n",
        "value": 0.07999999821186066
    },
    "voice.debug.PrintAmplitude": {
        "description": "when set to 1, the current incoming amplitude of the VOIP engine will be displayed on screen.\n0: disabled, 1: enabled.",
        "value": 0.0
    },
    "voice.playback.ResyncThreshold": {
        "description": "If the amount of audio we have buffered is greater than this value, we drop the oldest audio we have and sync to have voice.JitterDelay worth of buffered audio.\n",
        "value": 0.30000001192092896
    },
    "voice.playback.ShouldResync": {
        "description": "If set to 1, we will resync VOIP audio once it's latency goes beyond voice.playback.ResyncThreshold.\n",
        "value": 1.0
    },
    "voice.sendLocalTalkersToEndpoint": {
        "command": true,
        "description": "This will send audio output for all outgoing voip audio to the named endpoint. if given no arguments, this will disconnect all external endpoints."
    },
    "voice.sendRemoteTalkersToEndpoint": {
        "command": true,
        "description": "This will send audio output for all incoming voip audio to the named endpoint. if given no arguments, this will route voice output through the game engine."
    },
    "vr.AllowMotionBlurInVR": {
        "description": "For projects with motion blur enabled, this allows motion blur to be enabled even while in VR.",
        "value": 0.0
    },
    "vr.Debug.bEnableDevOverrides": {
        "description": "Enables or disables console commands that modify various developer-only settings.",
        "value": 0.0
    },
    "vr.EnableMotionControllerLateUpdate": {
        "description": "This command allows you to specify whether the motion controller late update is applied.\n 0: don't use late update\n 1: use late update (default)",
        "value": 1.0
    },
    "vr.EnableSteamVRDepthSubmission": {
        "description": "By default, depth is not passed through in SteamVR for devices that support depth. Set this flag to 1 to enable depth submission, 0 to disable.",
        "value": 0.0
    },
    "vr.HMDVersion": {
        "command": true,
        "description": "Prints version information for the current HMD device."
    },
    "vr.HeadTracking.Reset": {
        "command": true,
        "description": "Reset the rotation and position of the head mounted display.\nPass in an optional yaw for the new rotation in degrees."
    },
    "vr.HeadTracking.ResetOrientation": {
        "command": true,
        "description": "Reset the rotation of the head mounted display.\nPass in an optional yaw for the new rotation in degrees ."
    },
    "vr.HeadTracking.ResetPosition": {
        "command": true,
        "description": "Reset the position of the head mounted display."
    },
    "vr.HeadTracking.Status": {
        "command": true,
        "description": "Reports the current status of the head tracking."
    },
    "vr.HeadTracking.bEnforced": {
        "command": true,
        "description": "If set, head tracking is enabled even when stereo rendering is disabled.\nMay not be supported by all XR implementations."
    },
    "vr.HiddenAreaMask": {
        "description": "Enable or disable hidden area mask\n0: disabled\n1: enabled",
        "value": 1.0
    },
    "vr.InstancedStereo": {
        "description": "0 to disable instanced stereo (default), 1 to enable.",
        "value": 0.0
    },
    "vr.MobileMultiView": {
        "description": "0 to disable mobile multi-view, 1 to enable.\n",
        "value": 0.0
    },
    "vr.ODSCapture": {
        "description": "Experimental0 to disable Omni-directional stereo capture (default), 1 to enable.",
        "value": 0.0
    },
    "vr.PixelDensity": {
        "description": "Pixel density sets the VR render target texture size as a factor of recommended texture size.\nThe recommended texture size is the size that will result in no under sampling in most distorted area of the view when computing the final image to be displayed on the device by the runtime compositor.\nNote that the recommended texture size will likely be larger than the display panel resolution of the device as the texture is used as input data for the final composition/lens distortion pass provided by the device's runtime.\nA pixel density of 1.0 (default) will use the device's recommended texture size.\n",
        "value": 1.0
    },
    "vr.RoundRobinOcclusion": {
        "description": "0 to disable round-robin occlusion queries for stereo rendering (default), 1 to enable.",
        "value": 0.0
    },
    "vr.SpectatorScreenMode": {
        "command": true,
        "description": "Changes the look of the spectator if supported by the HMD plugin.\n 0: disable mirroring\n 1: single eye\n 2: stereo pair\nNumbers larger than 2 may be possible and specify HMD plugin-specific variations.\nNegative values are treated the same as 0."
    },
    "vr.SteamVR.UsePostPresentHandoff": {
        "description": "Whether or not to use PostPresentHandoff.  If true, more GPU time will be available, but this relies on no SceneCaptureComponent2D or WidgetComponents being active in the scene.  Otherwise, it will break async reprojection.",
        "value": 0.0
    },
    "vr.SteamVR.UseVisibleAreaMesh": {
        "description": "If non-zero, SteamVR will use the visible area mesh in addition to the hidden area mesh optimization.  This may be problematic on beta versions of platforms.",
        "value": 1.0
    },
    "vr.StereoLayers.bMixLayerPriorities": {
        "description": "By default, Face-Locked Stereo Layers are always rendered on top of any other layer position types.\nSet this to a non-zero value to disable this behavior (not supported on all platforms.)",
        "value": 0.0
    },
    "vr.TrackingOrigin": {
        "command": true,
        "description": "Floor or 0 - tracking origin is at the floor, Eye or 1 - tracking origin is at the eye level."
    },
    "vr.WorldToMetersScale": {
        "command": true,
        "description": "Get or set the current world to meters scale."
    },
    "vr.bEnableHMD": {
        "command": true,
        "description": "Enables or disables the HMD device. Use 1, True, or Yes to enable, 0, False or No to disable."
    },
    "vr.bEnableStereo": {
        "command": true,
        "description": "Enables or disables the stereo rendering. Use 1, True, or Yes to enable, 0, False or No to disable."
    },
    "vr.oculus.Stress.CPU": {
        "command": true,
        "description": "Initiates a CPU stress test.\n Usage: vr.oculus.Stress.CPU [PerFrameTime [TotalTimeLimit]]"
    },
    "vr.oculus.Stress.GPU": {
        "command": true,
        "description": "Initiates a GPU stress test.\n Usage: vr.oculus.Stress.GPU [LoadMultiplier [TimeLimit]]"
    },
    "vr.oculus.Stress.PD": {
        "command": true,
        "description": "Initiates a pixel density stress test wher pixel density is changed every frame for TotalTimeLimit seconds.\n Usage: vr.oculus.Stress.PD [TotalTimeLimit]"
    },
    "vr.oculus.Stress.Reset": {
        "command": true,
        "description": "Resets the stress tester and stops all currently running stress tests.\n Usage: vr.oculus.Stress.Reset"
    }
}